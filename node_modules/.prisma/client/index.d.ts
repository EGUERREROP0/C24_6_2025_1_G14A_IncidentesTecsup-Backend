
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model app_user
 * 
 */
export type app_user = $Result.DefaultSelection<Prisma.$app_userPayload>
/**
 * Model incident
 * 
 */
export type incident = $Result.DefaultSelection<Prisma.$incidentPayload>
/**
 * Model incident_history
 * 
 */
export type incident_history = $Result.DefaultSelection<Prisma.$incident_historyPayload>
/**
 * Model incident_status
 * 
 */
export type incident_status = $Result.DefaultSelection<Prisma.$incident_statusPayload>
/**
 * Model incident_type
 * 
 */
export type incident_type = $Result.DefaultSelection<Prisma.$incident_typePayload>
/**
 * Model location
 * 
 */
export type location = $Result.DefaultSelection<Prisma.$locationPayload>
/**
 * Model notification
 * 
 */
export type notification = $Result.DefaultSelection<Prisma.$notificationPayload>
/**
 * Model user_role
 * 
 */
export type user_role = $Result.DefaultSelection<Prisma.$user_rolePayload>

/**
 * Enums
 */
export namespace $Enums {
  export const incident_status_enum: {
  pending: 'pending',
  in_progress: 'in_progress',
  resolved: 'resolved',
  closed: 'closed',
  reopened: 'reopened'
};

export type incident_status_enum = (typeof incident_status_enum)[keyof typeof incident_status_enum]


export const priority_enum: {
  low: 'low',
  medium: 'medium',
  high: 'high'
};

export type priority_enum = (typeof priority_enum)[keyof typeof priority_enum]

}

export type incident_status_enum = $Enums.incident_status_enum

export const incident_status_enum: typeof $Enums.incident_status_enum

export type priority_enum = $Enums.priority_enum

export const priority_enum: typeof $Enums.priority_enum

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more App_users
 * const app_users = await prisma.app_user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more App_users
   * const app_users = await prisma.app_user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.app_user`: Exposes CRUD operations for the **app_user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more App_users
    * const app_users = await prisma.app_user.findMany()
    * ```
    */
  get app_user(): Prisma.app_userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.incident`: Exposes CRUD operations for the **incident** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incidents
    * const incidents = await prisma.incident.findMany()
    * ```
    */
  get incident(): Prisma.incidentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.incident_history`: Exposes CRUD operations for the **incident_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incident_histories
    * const incident_histories = await prisma.incident_history.findMany()
    * ```
    */
  get incident_history(): Prisma.incident_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.incident_status`: Exposes CRUD operations for the **incident_status** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incident_statuses
    * const incident_statuses = await prisma.incident_status.findMany()
    * ```
    */
  get incident_status(): Prisma.incident_statusDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.incident_type`: Exposes CRUD operations for the **incident_type** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Incident_types
    * const incident_types = await prisma.incident_type.findMany()
    * ```
    */
  get incident_type(): Prisma.incident_typeDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.location`: Exposes CRUD operations for the **location** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Locations
    * const locations = await prisma.location.findMany()
    * ```
    */
  get location(): Prisma.locationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notification`: Exposes CRUD operations for the **notification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notification.findMany()
    * ```
    */
  get notification(): Prisma.notificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_role`: Exposes CRUD operations for the **user_role** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_roles
    * const user_roles = await prisma.user_role.findMany()
    * ```
    */
  get user_role(): Prisma.user_roleDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.5.0
   * Query Engine version: 173f8d54f8d52e692c7e27e72a88314ec7aeff60
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    app_user: 'app_user',
    incident: 'incident',
    incident_history: 'incident_history',
    incident_status: 'incident_status',
    incident_type: 'incident_type',
    location: 'location',
    notification: 'notification',
    user_role: 'user_role'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "app_user" | "incident" | "incident_history" | "incident_status" | "incident_type" | "location" | "notification" | "user_role"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      app_user: {
        payload: Prisma.$app_userPayload<ExtArgs>
        fields: Prisma.app_userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.app_userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.app_userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>
          }
          findFirst: {
            args: Prisma.app_userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.app_userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>
          }
          findMany: {
            args: Prisma.app_userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>[]
          }
          create: {
            args: Prisma.app_userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>
          }
          createMany: {
            args: Prisma.app_userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.app_userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>[]
          }
          delete: {
            args: Prisma.app_userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>
          }
          update: {
            args: Prisma.app_userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>
          }
          deleteMany: {
            args: Prisma.app_userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.app_userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.app_userUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>[]
          }
          upsert: {
            args: Prisma.app_userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$app_userPayload>
          }
          aggregate: {
            args: Prisma.App_userAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApp_user>
          }
          groupBy: {
            args: Prisma.app_userGroupByArgs<ExtArgs>
            result: $Utils.Optional<App_userGroupByOutputType>[]
          }
          count: {
            args: Prisma.app_userCountArgs<ExtArgs>
            result: $Utils.Optional<App_userCountAggregateOutputType> | number
          }
        }
      }
      incident: {
        payload: Prisma.$incidentPayload<ExtArgs>
        fields: Prisma.incidentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.incidentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.incidentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>
          }
          findFirst: {
            args: Prisma.incidentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.incidentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>
          }
          findMany: {
            args: Prisma.incidentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>[]
          }
          create: {
            args: Prisma.incidentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>
          }
          createMany: {
            args: Prisma.incidentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.incidentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>[]
          }
          delete: {
            args: Prisma.incidentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>
          }
          update: {
            args: Prisma.incidentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>
          }
          deleteMany: {
            args: Prisma.incidentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.incidentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.incidentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>[]
          }
          upsert: {
            args: Prisma.incidentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incidentPayload>
          }
          aggregate: {
            args: Prisma.IncidentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIncident>
          }
          groupBy: {
            args: Prisma.incidentGroupByArgs<ExtArgs>
            result: $Utils.Optional<IncidentGroupByOutputType>[]
          }
          count: {
            args: Prisma.incidentCountArgs<ExtArgs>
            result: $Utils.Optional<IncidentCountAggregateOutputType> | number
          }
        }
      }
      incident_history: {
        payload: Prisma.$incident_historyPayload<ExtArgs>
        fields: Prisma.incident_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.incident_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.incident_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>
          }
          findFirst: {
            args: Prisma.incident_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.incident_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>
          }
          findMany: {
            args: Prisma.incident_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>[]
          }
          create: {
            args: Prisma.incident_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>
          }
          createMany: {
            args: Prisma.incident_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.incident_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>[]
          }
          delete: {
            args: Prisma.incident_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>
          }
          update: {
            args: Prisma.incident_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>
          }
          deleteMany: {
            args: Prisma.incident_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.incident_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.incident_historyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>[]
          }
          upsert: {
            args: Prisma.incident_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_historyPayload>
          }
          aggregate: {
            args: Prisma.Incident_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIncident_history>
          }
          groupBy: {
            args: Prisma.incident_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Incident_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.incident_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Incident_historyCountAggregateOutputType> | number
          }
        }
      }
      incident_status: {
        payload: Prisma.$incident_statusPayload<ExtArgs>
        fields: Prisma.incident_statusFieldRefs
        operations: {
          findUnique: {
            args: Prisma.incident_statusFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.incident_statusFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>
          }
          findFirst: {
            args: Prisma.incident_statusFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.incident_statusFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>
          }
          findMany: {
            args: Prisma.incident_statusFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>[]
          }
          create: {
            args: Prisma.incident_statusCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>
          }
          createMany: {
            args: Prisma.incident_statusCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.incident_statusCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>[]
          }
          delete: {
            args: Prisma.incident_statusDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>
          }
          update: {
            args: Prisma.incident_statusUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>
          }
          deleteMany: {
            args: Prisma.incident_statusDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.incident_statusUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.incident_statusUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>[]
          }
          upsert: {
            args: Prisma.incident_statusUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_statusPayload>
          }
          aggregate: {
            args: Prisma.Incident_statusAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIncident_status>
          }
          groupBy: {
            args: Prisma.incident_statusGroupByArgs<ExtArgs>
            result: $Utils.Optional<Incident_statusGroupByOutputType>[]
          }
          count: {
            args: Prisma.incident_statusCountArgs<ExtArgs>
            result: $Utils.Optional<Incident_statusCountAggregateOutputType> | number
          }
        }
      }
      incident_type: {
        payload: Prisma.$incident_typePayload<ExtArgs>
        fields: Prisma.incident_typeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.incident_typeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.incident_typeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>
          }
          findFirst: {
            args: Prisma.incident_typeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.incident_typeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>
          }
          findMany: {
            args: Prisma.incident_typeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>[]
          }
          create: {
            args: Prisma.incident_typeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>
          }
          createMany: {
            args: Prisma.incident_typeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.incident_typeCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>[]
          }
          delete: {
            args: Prisma.incident_typeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>
          }
          update: {
            args: Prisma.incident_typeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>
          }
          deleteMany: {
            args: Prisma.incident_typeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.incident_typeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.incident_typeUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>[]
          }
          upsert: {
            args: Prisma.incident_typeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$incident_typePayload>
          }
          aggregate: {
            args: Prisma.Incident_typeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIncident_type>
          }
          groupBy: {
            args: Prisma.incident_typeGroupByArgs<ExtArgs>
            result: $Utils.Optional<Incident_typeGroupByOutputType>[]
          }
          count: {
            args: Prisma.incident_typeCountArgs<ExtArgs>
            result: $Utils.Optional<Incident_typeCountAggregateOutputType> | number
          }
        }
      }
      location: {
        payload: Prisma.$locationPayload<ExtArgs>
        fields: Prisma.locationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.locationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.locationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>
          }
          findFirst: {
            args: Prisma.locationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.locationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>
          }
          findMany: {
            args: Prisma.locationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>[]
          }
          create: {
            args: Prisma.locationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>
          }
          createMany: {
            args: Prisma.locationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.locationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>[]
          }
          delete: {
            args: Prisma.locationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>
          }
          update: {
            args: Prisma.locationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>
          }
          deleteMany: {
            args: Prisma.locationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.locationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.locationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>[]
          }
          upsert: {
            args: Prisma.locationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$locationPayload>
          }
          aggregate: {
            args: Prisma.LocationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLocation>
          }
          groupBy: {
            args: Prisma.locationGroupByArgs<ExtArgs>
            result: $Utils.Optional<LocationGroupByOutputType>[]
          }
          count: {
            args: Prisma.locationCountArgs<ExtArgs>
            result: $Utils.Optional<LocationCountAggregateOutputType> | number
          }
        }
      }
      notification: {
        payload: Prisma.$notificationPayload<ExtArgs>
        fields: Prisma.notificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findFirst: {
            args: Prisma.notificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          findMany: {
            args: Prisma.notificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          create: {
            args: Prisma.notificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          createMany: {
            args: Prisma.notificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          delete: {
            args: Prisma.notificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          update: {
            args: Prisma.notificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          deleteMany: {
            args: Prisma.notificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.notificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>[]
          }
          upsert: {
            args: Prisma.notificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationPayload>
          }
          aggregate: {
            args: Prisma.NotificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotification>
          }
          groupBy: {
            args: Prisma.notificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationCountAggregateOutputType> | number
          }
        }
      }
      user_role: {
        payload: Prisma.$user_rolePayload<ExtArgs>
        fields: Prisma.user_roleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_roleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_roleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>
          }
          findFirst: {
            args: Prisma.user_roleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_roleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>
          }
          findMany: {
            args: Prisma.user_roleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>[]
          }
          create: {
            args: Prisma.user_roleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>
          }
          createMany: {
            args: Prisma.user_roleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_roleCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>[]
          }
          delete: {
            args: Prisma.user_roleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>
          }
          update: {
            args: Prisma.user_roleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>
          }
          deleteMany: {
            args: Prisma.user_roleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_roleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_roleUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>[]
          }
          upsert: {
            args: Prisma.user_roleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolePayload>
          }
          aggregate: {
            args: Prisma.User_roleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_role>
          }
          groupBy: {
            args: Prisma.user_roleGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_roleGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_roleCountArgs<ExtArgs>
            result: $Utils.Optional<User_roleCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    app_user?: app_userOmit
    incident?: incidentOmit
    incident_history?: incident_historyOmit
    incident_status?: incident_statusOmit
    incident_type?: incident_typeOmit
    location?: locationOmit
    notification?: notificationOmit
    user_role?: user_roleOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type App_userCountOutputType
   */

  export type App_userCountOutputType = {
    incident: number
    incident_history: number
    notification_notification_receiver_idToapp_user: number
    notification_notification_sender_idToapp_user: number
  }

  export type App_userCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | App_userCountOutputTypeCountIncidentArgs
    incident_history?: boolean | App_userCountOutputTypeCountIncident_historyArgs
    notification_notification_receiver_idToapp_user?: boolean | App_userCountOutputTypeCountNotification_notification_receiver_idToapp_userArgs
    notification_notification_sender_idToapp_user?: boolean | App_userCountOutputTypeCountNotification_notification_sender_idToapp_userArgs
  }

  // Custom InputTypes
  /**
   * App_userCountOutputType without action
   */
  export type App_userCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the App_userCountOutputType
     */
    select?: App_userCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * App_userCountOutputType without action
   */
  export type App_userCountOutputTypeCountIncidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentWhereInput
  }

  /**
   * App_userCountOutputType without action
   */
  export type App_userCountOutputTypeCountIncident_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incident_historyWhereInput
  }

  /**
   * App_userCountOutputType without action
   */
  export type App_userCountOutputTypeCountNotification_notification_receiver_idToapp_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }

  /**
   * App_userCountOutputType without action
   */
  export type App_userCountOutputTypeCountNotification_notification_sender_idToapp_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
  }


  /**
   * Count Type IncidentCountOutputType
   */

  export type IncidentCountOutputType = {
    incident_history: number
  }

  export type IncidentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident_history?: boolean | IncidentCountOutputTypeCountIncident_historyArgs
  }

  // Custom InputTypes
  /**
   * IncidentCountOutputType without action
   */
  export type IncidentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the IncidentCountOutputType
     */
    select?: IncidentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * IncidentCountOutputType without action
   */
  export type IncidentCountOutputTypeCountIncident_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incident_historyWhereInput
  }


  /**
   * Count Type Incident_statusCountOutputType
   */

  export type Incident_statusCountOutputType = {
    incident: number
  }

  export type Incident_statusCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | Incident_statusCountOutputTypeCountIncidentArgs
  }

  // Custom InputTypes
  /**
   * Incident_statusCountOutputType without action
   */
  export type Incident_statusCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident_statusCountOutputType
     */
    select?: Incident_statusCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Incident_statusCountOutputType without action
   */
  export type Incident_statusCountOutputTypeCountIncidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentWhereInput
  }


  /**
   * Count Type Incident_typeCountOutputType
   */

  export type Incident_typeCountOutputType = {
    incident: number
  }

  export type Incident_typeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | Incident_typeCountOutputTypeCountIncidentArgs
  }

  // Custom InputTypes
  /**
   * Incident_typeCountOutputType without action
   */
  export type Incident_typeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Incident_typeCountOutputType
     */
    select?: Incident_typeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Incident_typeCountOutputType without action
   */
  export type Incident_typeCountOutputTypeCountIncidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentWhereInput
  }


  /**
   * Count Type LocationCountOutputType
   */

  export type LocationCountOutputType = {
    incident: number
  }

  export type LocationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | LocationCountOutputTypeCountIncidentArgs
  }

  // Custom InputTypes
  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LocationCountOutputType
     */
    select?: LocationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LocationCountOutputType without action
   */
  export type LocationCountOutputTypeCountIncidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentWhereInput
  }


  /**
   * Count Type User_roleCountOutputType
   */

  export type User_roleCountOutputType = {
    app_user: number
  }

  export type User_roleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    app_user?: boolean | User_roleCountOutputTypeCountApp_userArgs
  }

  // Custom InputTypes
  /**
   * User_roleCountOutputType without action
   */
  export type User_roleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_roleCountOutputType
     */
    select?: User_roleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_roleCountOutputType without action
   */
  export type User_roleCountOutputTypeCountApp_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: app_userWhereInput
  }


  /**
   * Models
   */

  /**
   * Model app_user
   */

  export type AggregateApp_user = {
    _count: App_userCountAggregateOutputType | null
    _avg: App_userAvgAggregateOutputType | null
    _sum: App_userSumAggregateOutputType | null
    _min: App_userMinAggregateOutputType | null
    _max: App_userMaxAggregateOutputType | null
  }

  export type App_userAvgAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type App_userSumAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type App_userMinAggregateOutputType = {
    id: number | null
    first_name: string | null
    last_name: string | null
    email: string | null
    google_id: string | null
    profile_picture: string | null
    is_active: boolean | null
    role_id: number | null
    password: string | null
    email_validated: boolean | null
  }

  export type App_userMaxAggregateOutputType = {
    id: number | null
    first_name: string | null
    last_name: string | null
    email: string | null
    google_id: string | null
    profile_picture: string | null
    is_active: boolean | null
    role_id: number | null
    password: string | null
    email_validated: boolean | null
  }

  export type App_userCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    email: number
    google_id: number
    profile_picture: number
    is_active: number
    role_id: number
    password: number
    email_validated: number
    _all: number
  }


  export type App_userAvgAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type App_userSumAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type App_userMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    google_id?: true
    profile_picture?: true
    is_active?: true
    role_id?: true
    password?: true
    email_validated?: true
  }

  export type App_userMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    google_id?: true
    profile_picture?: true
    is_active?: true
    role_id?: true
    password?: true
    email_validated?: true
  }

  export type App_userCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    google_id?: true
    profile_picture?: true
    is_active?: true
    role_id?: true
    password?: true
    email_validated?: true
    _all?: true
  }

  export type App_userAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which app_user to aggregate.
     */
    where?: app_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of app_users to fetch.
     */
    orderBy?: app_userOrderByWithRelationInput | app_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: app_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` app_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` app_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned app_users
    **/
    _count?: true | App_userCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: App_userAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: App_userSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: App_userMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: App_userMaxAggregateInputType
  }

  export type GetApp_userAggregateType<T extends App_userAggregateArgs> = {
        [P in keyof T & keyof AggregateApp_user]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApp_user[P]>
      : GetScalarType<T[P], AggregateApp_user[P]>
  }




  export type app_userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: app_userWhereInput
    orderBy?: app_userOrderByWithAggregationInput | app_userOrderByWithAggregationInput[]
    by: App_userScalarFieldEnum[] | App_userScalarFieldEnum
    having?: app_userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: App_userCountAggregateInputType | true
    _avg?: App_userAvgAggregateInputType
    _sum?: App_userSumAggregateInputType
    _min?: App_userMinAggregateInputType
    _max?: App_userMaxAggregateInputType
  }

  export type App_userGroupByOutputType = {
    id: number
    first_name: string | null
    last_name: string | null
    email: string
    google_id: string | null
    profile_picture: string | null
    is_active: boolean | null
    role_id: number | null
    password: string | null
    email_validated: boolean | null
    _count: App_userCountAggregateOutputType | null
    _avg: App_userAvgAggregateOutputType | null
    _sum: App_userSumAggregateOutputType | null
    _min: App_userMinAggregateOutputType | null
    _max: App_userMaxAggregateOutputType | null
  }

  type GetApp_userGroupByPayload<T extends app_userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<App_userGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof App_userGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], App_userGroupByOutputType[P]>
            : GetScalarType<T[P], App_userGroupByOutputType[P]>
        }
      >
    >


  export type app_userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    google_id?: boolean
    profile_picture?: boolean
    is_active?: boolean
    role_id?: boolean
    password?: boolean
    email_validated?: boolean
    user_role?: boolean | app_user$user_roleArgs<ExtArgs>
    incident?: boolean | app_user$incidentArgs<ExtArgs>
    incident_history?: boolean | app_user$incident_historyArgs<ExtArgs>
    notification_notification_receiver_idToapp_user?: boolean | app_user$notification_notification_receiver_idToapp_userArgs<ExtArgs>
    notification_notification_sender_idToapp_user?: boolean | app_user$notification_notification_sender_idToapp_userArgs<ExtArgs>
    _count?: boolean | App_userCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["app_user"]>

  export type app_userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    google_id?: boolean
    profile_picture?: boolean
    is_active?: boolean
    role_id?: boolean
    password?: boolean
    email_validated?: boolean
    user_role?: boolean | app_user$user_roleArgs<ExtArgs>
  }, ExtArgs["result"]["app_user"]>

  export type app_userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    google_id?: boolean
    profile_picture?: boolean
    is_active?: boolean
    role_id?: boolean
    password?: boolean
    email_validated?: boolean
    user_role?: boolean | app_user$user_roleArgs<ExtArgs>
  }, ExtArgs["result"]["app_user"]>

  export type app_userSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    google_id?: boolean
    profile_picture?: boolean
    is_active?: boolean
    role_id?: boolean
    password?: boolean
    email_validated?: boolean
  }

  export type app_userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "first_name" | "last_name" | "email" | "google_id" | "profile_picture" | "is_active" | "role_id" | "password" | "email_validated", ExtArgs["result"]["app_user"]>
  export type app_userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_role?: boolean | app_user$user_roleArgs<ExtArgs>
    incident?: boolean | app_user$incidentArgs<ExtArgs>
    incident_history?: boolean | app_user$incident_historyArgs<ExtArgs>
    notification_notification_receiver_idToapp_user?: boolean | app_user$notification_notification_receiver_idToapp_userArgs<ExtArgs>
    notification_notification_sender_idToapp_user?: boolean | app_user$notification_notification_sender_idToapp_userArgs<ExtArgs>
    _count?: boolean | App_userCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type app_userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_role?: boolean | app_user$user_roleArgs<ExtArgs>
  }
  export type app_userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user_role?: boolean | app_user$user_roleArgs<ExtArgs>
  }

  export type $app_userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "app_user"
    objects: {
      user_role: Prisma.$user_rolePayload<ExtArgs> | null
      incident: Prisma.$incidentPayload<ExtArgs>[]
      incident_history: Prisma.$incident_historyPayload<ExtArgs>[]
      notification_notification_receiver_idToapp_user: Prisma.$notificationPayload<ExtArgs>[]
      notification_notification_sender_idToapp_user: Prisma.$notificationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      first_name: string | null
      last_name: string | null
      email: string
      google_id: string | null
      profile_picture: string | null
      is_active: boolean | null
      role_id: number | null
      password: string | null
      email_validated: boolean | null
    }, ExtArgs["result"]["app_user"]>
    composites: {}
  }

  type app_userGetPayload<S extends boolean | null | undefined | app_userDefaultArgs> = $Result.GetResult<Prisma.$app_userPayload, S>

  type app_userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<app_userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: App_userCountAggregateInputType | true
    }

  export interface app_userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['app_user'], meta: { name: 'app_user' } }
    /**
     * Find zero or one App_user that matches the filter.
     * @param {app_userFindUniqueArgs} args - Arguments to find a App_user
     * @example
     * // Get one App_user
     * const app_user = await prisma.app_user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends app_userFindUniqueArgs>(args: SelectSubset<T, app_userFindUniqueArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one App_user that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {app_userFindUniqueOrThrowArgs} args - Arguments to find a App_user
     * @example
     * // Get one App_user
     * const app_user = await prisma.app_user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends app_userFindUniqueOrThrowArgs>(args: SelectSubset<T, app_userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first App_user that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {app_userFindFirstArgs} args - Arguments to find a App_user
     * @example
     * // Get one App_user
     * const app_user = await prisma.app_user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends app_userFindFirstArgs>(args?: SelectSubset<T, app_userFindFirstArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first App_user that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {app_userFindFirstOrThrowArgs} args - Arguments to find a App_user
     * @example
     * // Get one App_user
     * const app_user = await prisma.app_user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends app_userFindFirstOrThrowArgs>(args?: SelectSubset<T, app_userFindFirstOrThrowArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more App_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {app_userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all App_users
     * const app_users = await prisma.app_user.findMany()
     * 
     * // Get first 10 App_users
     * const app_users = await prisma.app_user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const app_userWithIdOnly = await prisma.app_user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends app_userFindManyArgs>(args?: SelectSubset<T, app_userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a App_user.
     * @param {app_userCreateArgs} args - Arguments to create a App_user.
     * @example
     * // Create one App_user
     * const App_user = await prisma.app_user.create({
     *   data: {
     *     // ... data to create a App_user
     *   }
     * })
     * 
     */
    create<T extends app_userCreateArgs>(args: SelectSubset<T, app_userCreateArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many App_users.
     * @param {app_userCreateManyArgs} args - Arguments to create many App_users.
     * @example
     * // Create many App_users
     * const app_user = await prisma.app_user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends app_userCreateManyArgs>(args?: SelectSubset<T, app_userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many App_users and returns the data saved in the database.
     * @param {app_userCreateManyAndReturnArgs} args - Arguments to create many App_users.
     * @example
     * // Create many App_users
     * const app_user = await prisma.app_user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many App_users and only return the `id`
     * const app_userWithIdOnly = await prisma.app_user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends app_userCreateManyAndReturnArgs>(args?: SelectSubset<T, app_userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a App_user.
     * @param {app_userDeleteArgs} args - Arguments to delete one App_user.
     * @example
     * // Delete one App_user
     * const App_user = await prisma.app_user.delete({
     *   where: {
     *     // ... filter to delete one App_user
     *   }
     * })
     * 
     */
    delete<T extends app_userDeleteArgs>(args: SelectSubset<T, app_userDeleteArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one App_user.
     * @param {app_userUpdateArgs} args - Arguments to update one App_user.
     * @example
     * // Update one App_user
     * const app_user = await prisma.app_user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends app_userUpdateArgs>(args: SelectSubset<T, app_userUpdateArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more App_users.
     * @param {app_userDeleteManyArgs} args - Arguments to filter App_users to delete.
     * @example
     * // Delete a few App_users
     * const { count } = await prisma.app_user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends app_userDeleteManyArgs>(args?: SelectSubset<T, app_userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more App_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {app_userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many App_users
     * const app_user = await prisma.app_user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends app_userUpdateManyArgs>(args: SelectSubset<T, app_userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more App_users and returns the data updated in the database.
     * @param {app_userUpdateManyAndReturnArgs} args - Arguments to update many App_users.
     * @example
     * // Update many App_users
     * const app_user = await prisma.app_user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more App_users and only return the `id`
     * const app_userWithIdOnly = await prisma.app_user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends app_userUpdateManyAndReturnArgs>(args: SelectSubset<T, app_userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one App_user.
     * @param {app_userUpsertArgs} args - Arguments to update or create a App_user.
     * @example
     * // Update or create a App_user
     * const app_user = await prisma.app_user.upsert({
     *   create: {
     *     // ... data to create a App_user
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the App_user we want to update
     *   }
     * })
     */
    upsert<T extends app_userUpsertArgs>(args: SelectSubset<T, app_userUpsertArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of App_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {app_userCountArgs} args - Arguments to filter App_users to count.
     * @example
     * // Count the number of App_users
     * const count = await prisma.app_user.count({
     *   where: {
     *     // ... the filter for the App_users we want to count
     *   }
     * })
    **/
    count<T extends app_userCountArgs>(
      args?: Subset<T, app_userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], App_userCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a App_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {App_userAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends App_userAggregateArgs>(args: Subset<T, App_userAggregateArgs>): Prisma.PrismaPromise<GetApp_userAggregateType<T>>

    /**
     * Group by App_user.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {app_userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends app_userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: app_userGroupByArgs['orderBy'] }
        : { orderBy?: app_userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, app_userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApp_userGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the app_user model
   */
  readonly fields: app_userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for app_user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__app_userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user_role<T extends app_user$user_roleArgs<ExtArgs> = {}>(args?: Subset<T, app_user$user_roleArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    incident<T extends app_user$incidentArgs<ExtArgs> = {}>(args?: Subset<T, app_user$incidentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    incident_history<T extends app_user$incident_historyArgs<ExtArgs> = {}>(args?: Subset<T, app_user$incident_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notification_notification_receiver_idToapp_user<T extends app_user$notification_notification_receiver_idToapp_userArgs<ExtArgs> = {}>(args?: Subset<T, app_user$notification_notification_receiver_idToapp_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notification_notification_sender_idToapp_user<T extends app_user$notification_notification_sender_idToapp_userArgs<ExtArgs> = {}>(args?: Subset<T, app_user$notification_notification_sender_idToapp_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the app_user model
   */ 
  interface app_userFieldRefs {
    readonly id: FieldRef<"app_user", 'Int'>
    readonly first_name: FieldRef<"app_user", 'String'>
    readonly last_name: FieldRef<"app_user", 'String'>
    readonly email: FieldRef<"app_user", 'String'>
    readonly google_id: FieldRef<"app_user", 'String'>
    readonly profile_picture: FieldRef<"app_user", 'String'>
    readonly is_active: FieldRef<"app_user", 'Boolean'>
    readonly role_id: FieldRef<"app_user", 'Int'>
    readonly password: FieldRef<"app_user", 'String'>
    readonly email_validated: FieldRef<"app_user", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * app_user findUnique
   */
  export type app_userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * Filter, which app_user to fetch.
     */
    where: app_userWhereUniqueInput
  }

  /**
   * app_user findUniqueOrThrow
   */
  export type app_userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * Filter, which app_user to fetch.
     */
    where: app_userWhereUniqueInput
  }

  /**
   * app_user findFirst
   */
  export type app_userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * Filter, which app_user to fetch.
     */
    where?: app_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of app_users to fetch.
     */
    orderBy?: app_userOrderByWithRelationInput | app_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for app_users.
     */
    cursor?: app_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` app_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` app_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of app_users.
     */
    distinct?: App_userScalarFieldEnum | App_userScalarFieldEnum[]
  }

  /**
   * app_user findFirstOrThrow
   */
  export type app_userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * Filter, which app_user to fetch.
     */
    where?: app_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of app_users to fetch.
     */
    orderBy?: app_userOrderByWithRelationInput | app_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for app_users.
     */
    cursor?: app_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` app_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` app_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of app_users.
     */
    distinct?: App_userScalarFieldEnum | App_userScalarFieldEnum[]
  }

  /**
   * app_user findMany
   */
  export type app_userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * Filter, which app_users to fetch.
     */
    where?: app_userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of app_users to fetch.
     */
    orderBy?: app_userOrderByWithRelationInput | app_userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing app_users.
     */
    cursor?: app_userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` app_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` app_users.
     */
    skip?: number
    distinct?: App_userScalarFieldEnum | App_userScalarFieldEnum[]
  }

  /**
   * app_user create
   */
  export type app_userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * The data needed to create a app_user.
     */
    data: XOR<app_userCreateInput, app_userUncheckedCreateInput>
  }

  /**
   * app_user createMany
   */
  export type app_userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many app_users.
     */
    data: app_userCreateManyInput | app_userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * app_user createManyAndReturn
   */
  export type app_userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * The data used to create many app_users.
     */
    data: app_userCreateManyInput | app_userCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * app_user update
   */
  export type app_userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * The data needed to update a app_user.
     */
    data: XOR<app_userUpdateInput, app_userUncheckedUpdateInput>
    /**
     * Choose, which app_user to update.
     */
    where: app_userWhereUniqueInput
  }

  /**
   * app_user updateMany
   */
  export type app_userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update app_users.
     */
    data: XOR<app_userUpdateManyMutationInput, app_userUncheckedUpdateManyInput>
    /**
     * Filter which app_users to update
     */
    where?: app_userWhereInput
    /**
     * Limit how many app_users to update.
     */
    limit?: number
  }

  /**
   * app_user updateManyAndReturn
   */
  export type app_userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * The data used to update app_users.
     */
    data: XOR<app_userUpdateManyMutationInput, app_userUncheckedUpdateManyInput>
    /**
     * Filter which app_users to update
     */
    where?: app_userWhereInput
    /**
     * Limit how many app_users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * app_user upsert
   */
  export type app_userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * The filter to search for the app_user to update in case it exists.
     */
    where: app_userWhereUniqueInput
    /**
     * In case the app_user found by the `where` argument doesn't exist, create a new app_user with this data.
     */
    create: XOR<app_userCreateInput, app_userUncheckedCreateInput>
    /**
     * In case the app_user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<app_userUpdateInput, app_userUncheckedUpdateInput>
  }

  /**
   * app_user delete
   */
  export type app_userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    /**
     * Filter which app_user to delete.
     */
    where: app_userWhereUniqueInput
  }

  /**
   * app_user deleteMany
   */
  export type app_userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which app_users to delete
     */
    where?: app_userWhereInput
    /**
     * Limit how many app_users to delete.
     */
    limit?: number
  }

  /**
   * app_user.user_role
   */
  export type app_user$user_roleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    where?: user_roleWhereInput
  }

  /**
   * app_user.incident
   */
  export type app_user$incidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    where?: incidentWhereInput
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    cursor?: incidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * app_user.incident_history
   */
  export type app_user$incident_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    where?: incident_historyWhereInput
    orderBy?: incident_historyOrderByWithRelationInput | incident_historyOrderByWithRelationInput[]
    cursor?: incident_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Incident_historyScalarFieldEnum | Incident_historyScalarFieldEnum[]
  }

  /**
   * app_user.notification_notification_receiver_idToapp_user
   */
  export type app_user$notification_notification_receiver_idToapp_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * app_user.notification_notification_sender_idToapp_user
   */
  export type app_user$notification_notification_sender_idToapp_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    cursor?: notificationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * app_user without action
   */
  export type app_userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
  }


  /**
   * Model incident
   */

  export type AggregateIncident = {
    _count: IncidentCountAggregateOutputType | null
    _avg: IncidentAvgAggregateOutputType | null
    _sum: IncidentSumAggregateOutputType | null
    _min: IncidentMinAggregateOutputType | null
    _max: IncidentMaxAggregateOutputType | null
  }

  export type IncidentAvgAggregateOutputType = {
    id: number | null
    status_id: number | null
    user_id: number | null
    type_id: number | null
    location_id: number | null
  }

  export type IncidentSumAggregateOutputType = {
    id: number | null
    status_id: number | null
    user_id: number | null
    type_id: number | null
    location_id: number | null
  }

  export type IncidentMinAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    image_url: string | null
    priority: $Enums.priority_enum | null
    report_date: Date | null
    close_date: Date | null
    status_id: number | null
    user_id: number | null
    type_id: number | null
    location_id: number | null
  }

  export type IncidentMaxAggregateOutputType = {
    id: number | null
    title: string | null
    description: string | null
    image_url: string | null
    priority: $Enums.priority_enum | null
    report_date: Date | null
    close_date: Date | null
    status_id: number | null
    user_id: number | null
    type_id: number | null
    location_id: number | null
  }

  export type IncidentCountAggregateOutputType = {
    id: number
    title: number
    description: number
    image_url: number
    priority: number
    report_date: number
    close_date: number
    status_id: number
    user_id: number
    type_id: number
    location_id: number
    _all: number
  }


  export type IncidentAvgAggregateInputType = {
    id?: true
    status_id?: true
    user_id?: true
    type_id?: true
    location_id?: true
  }

  export type IncidentSumAggregateInputType = {
    id?: true
    status_id?: true
    user_id?: true
    type_id?: true
    location_id?: true
  }

  export type IncidentMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    image_url?: true
    priority?: true
    report_date?: true
    close_date?: true
    status_id?: true
    user_id?: true
    type_id?: true
    location_id?: true
  }

  export type IncidentMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    image_url?: true
    priority?: true
    report_date?: true
    close_date?: true
    status_id?: true
    user_id?: true
    type_id?: true
    location_id?: true
  }

  export type IncidentCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    image_url?: true
    priority?: true
    report_date?: true
    close_date?: true
    status_id?: true
    user_id?: true
    type_id?: true
    location_id?: true
    _all?: true
  }

  export type IncidentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incident to aggregate.
     */
    where?: incidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: incidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned incidents
    **/
    _count?: true | IncidentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: IncidentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: IncidentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IncidentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IncidentMaxAggregateInputType
  }

  export type GetIncidentAggregateType<T extends IncidentAggregateArgs> = {
        [P in keyof T & keyof AggregateIncident]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncident[P]>
      : GetScalarType<T[P], AggregateIncident[P]>
  }




  export type incidentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incidentWhereInput
    orderBy?: incidentOrderByWithAggregationInput | incidentOrderByWithAggregationInput[]
    by: IncidentScalarFieldEnum[] | IncidentScalarFieldEnum
    having?: incidentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IncidentCountAggregateInputType | true
    _avg?: IncidentAvgAggregateInputType
    _sum?: IncidentSumAggregateInputType
    _min?: IncidentMinAggregateInputType
    _max?: IncidentMaxAggregateInputType
  }

  export type IncidentGroupByOutputType = {
    id: number
    title: string | null
    description: string | null
    image_url: string | null
    priority: $Enums.priority_enum | null
    report_date: Date | null
    close_date: Date | null
    status_id: number | null
    user_id: number | null
    type_id: number | null
    location_id: number | null
    _count: IncidentCountAggregateOutputType | null
    _avg: IncidentAvgAggregateOutputType | null
    _sum: IncidentSumAggregateOutputType | null
    _min: IncidentMinAggregateOutputType | null
    _max: IncidentMaxAggregateOutputType | null
  }

  type GetIncidentGroupByPayload<T extends incidentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IncidentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IncidentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IncidentGroupByOutputType[P]>
            : GetScalarType<T[P], IncidentGroupByOutputType[P]>
        }
      >
    >


  export type incidentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    image_url?: boolean
    priority?: boolean
    report_date?: boolean
    close_date?: boolean
    status_id?: boolean
    user_id?: boolean
    type_id?: boolean
    location_id?: boolean
    location?: boolean | incident$locationArgs<ExtArgs>
    incident_status?: boolean | incident$incident_statusArgs<ExtArgs>
    incident_type?: boolean | incident$incident_typeArgs<ExtArgs>
    app_user?: boolean | incident$app_userArgs<ExtArgs>
    incident_history?: boolean | incident$incident_historyArgs<ExtArgs>
    _count?: boolean | IncidentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["incident"]>

  export type incidentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    image_url?: boolean
    priority?: boolean
    report_date?: boolean
    close_date?: boolean
    status_id?: boolean
    user_id?: boolean
    type_id?: boolean
    location_id?: boolean
    location?: boolean | incident$locationArgs<ExtArgs>
    incident_status?: boolean | incident$incident_statusArgs<ExtArgs>
    incident_type?: boolean | incident$incident_typeArgs<ExtArgs>
    app_user?: boolean | incident$app_userArgs<ExtArgs>
  }, ExtArgs["result"]["incident"]>

  export type incidentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    image_url?: boolean
    priority?: boolean
    report_date?: boolean
    close_date?: boolean
    status_id?: boolean
    user_id?: boolean
    type_id?: boolean
    location_id?: boolean
    location?: boolean | incident$locationArgs<ExtArgs>
    incident_status?: boolean | incident$incident_statusArgs<ExtArgs>
    incident_type?: boolean | incident$incident_typeArgs<ExtArgs>
    app_user?: boolean | incident$app_userArgs<ExtArgs>
  }, ExtArgs["result"]["incident"]>

  export type incidentSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    image_url?: boolean
    priority?: boolean
    report_date?: boolean
    close_date?: boolean
    status_id?: boolean
    user_id?: boolean
    type_id?: boolean
    location_id?: boolean
  }

  export type incidentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "image_url" | "priority" | "report_date" | "close_date" | "status_id" | "user_id" | "type_id" | "location_id", ExtArgs["result"]["incident"]>
  export type incidentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    location?: boolean | incident$locationArgs<ExtArgs>
    incident_status?: boolean | incident$incident_statusArgs<ExtArgs>
    incident_type?: boolean | incident$incident_typeArgs<ExtArgs>
    app_user?: boolean | incident$app_userArgs<ExtArgs>
    incident_history?: boolean | incident$incident_historyArgs<ExtArgs>
    _count?: boolean | IncidentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type incidentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    location?: boolean | incident$locationArgs<ExtArgs>
    incident_status?: boolean | incident$incident_statusArgs<ExtArgs>
    incident_type?: boolean | incident$incident_typeArgs<ExtArgs>
    app_user?: boolean | incident$app_userArgs<ExtArgs>
  }
  export type incidentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    location?: boolean | incident$locationArgs<ExtArgs>
    incident_status?: boolean | incident$incident_statusArgs<ExtArgs>
    incident_type?: boolean | incident$incident_typeArgs<ExtArgs>
    app_user?: boolean | incident$app_userArgs<ExtArgs>
  }

  export type $incidentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "incident"
    objects: {
      location: Prisma.$locationPayload<ExtArgs> | null
      incident_status: Prisma.$incident_statusPayload<ExtArgs> | null
      incident_type: Prisma.$incident_typePayload<ExtArgs> | null
      app_user: Prisma.$app_userPayload<ExtArgs> | null
      incident_history: Prisma.$incident_historyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string | null
      description: string | null
      image_url: string | null
      priority: $Enums.priority_enum | null
      report_date: Date | null
      close_date: Date | null
      status_id: number | null
      user_id: number | null
      type_id: number | null
      location_id: number | null
    }, ExtArgs["result"]["incident"]>
    composites: {}
  }

  type incidentGetPayload<S extends boolean | null | undefined | incidentDefaultArgs> = $Result.GetResult<Prisma.$incidentPayload, S>

  type incidentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<incidentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IncidentCountAggregateInputType | true
    }

  export interface incidentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['incident'], meta: { name: 'incident' } }
    /**
     * Find zero or one Incident that matches the filter.
     * @param {incidentFindUniqueArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends incidentFindUniqueArgs>(args: SelectSubset<T, incidentFindUniqueArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Incident that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {incidentFindUniqueOrThrowArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends incidentFindUniqueOrThrowArgs>(args: SelectSubset<T, incidentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentFindFirstArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends incidentFindFirstArgs>(args?: SelectSubset<T, incidentFindFirstArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentFindFirstOrThrowArgs} args - Arguments to find a Incident
     * @example
     * // Get one Incident
     * const incident = await prisma.incident.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends incidentFindFirstOrThrowArgs>(args?: SelectSubset<T, incidentFindFirstOrThrowArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Incidents that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Incidents
     * const incidents = await prisma.incident.findMany()
     * 
     * // Get first 10 Incidents
     * const incidents = await prisma.incident.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const incidentWithIdOnly = await prisma.incident.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends incidentFindManyArgs>(args?: SelectSubset<T, incidentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Incident.
     * @param {incidentCreateArgs} args - Arguments to create a Incident.
     * @example
     * // Create one Incident
     * const Incident = await prisma.incident.create({
     *   data: {
     *     // ... data to create a Incident
     *   }
     * })
     * 
     */
    create<T extends incidentCreateArgs>(args: SelectSubset<T, incidentCreateArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Incidents.
     * @param {incidentCreateManyArgs} args - Arguments to create many Incidents.
     * @example
     * // Create many Incidents
     * const incident = await prisma.incident.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends incidentCreateManyArgs>(args?: SelectSubset<T, incidentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Incidents and returns the data saved in the database.
     * @param {incidentCreateManyAndReturnArgs} args - Arguments to create many Incidents.
     * @example
     * // Create many Incidents
     * const incident = await prisma.incident.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Incidents and only return the `id`
     * const incidentWithIdOnly = await prisma.incident.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends incidentCreateManyAndReturnArgs>(args?: SelectSubset<T, incidentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Incident.
     * @param {incidentDeleteArgs} args - Arguments to delete one Incident.
     * @example
     * // Delete one Incident
     * const Incident = await prisma.incident.delete({
     *   where: {
     *     // ... filter to delete one Incident
     *   }
     * })
     * 
     */
    delete<T extends incidentDeleteArgs>(args: SelectSubset<T, incidentDeleteArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Incident.
     * @param {incidentUpdateArgs} args - Arguments to update one Incident.
     * @example
     * // Update one Incident
     * const incident = await prisma.incident.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends incidentUpdateArgs>(args: SelectSubset<T, incidentUpdateArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Incidents.
     * @param {incidentDeleteManyArgs} args - Arguments to filter Incidents to delete.
     * @example
     * // Delete a few Incidents
     * const { count } = await prisma.incident.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends incidentDeleteManyArgs>(args?: SelectSubset<T, incidentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Incidents
     * const incident = await prisma.incident.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends incidentUpdateManyArgs>(args: SelectSubset<T, incidentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incidents and returns the data updated in the database.
     * @param {incidentUpdateManyAndReturnArgs} args - Arguments to update many Incidents.
     * @example
     * // Update many Incidents
     * const incident = await prisma.incident.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Incidents and only return the `id`
     * const incidentWithIdOnly = await prisma.incident.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends incidentUpdateManyAndReturnArgs>(args: SelectSubset<T, incidentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Incident.
     * @param {incidentUpsertArgs} args - Arguments to update or create a Incident.
     * @example
     * // Update or create a Incident
     * const incident = await prisma.incident.upsert({
     *   create: {
     *     // ... data to create a Incident
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Incident we want to update
     *   }
     * })
     */
    upsert<T extends incidentUpsertArgs>(args: SelectSubset<T, incidentUpsertArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Incidents.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentCountArgs} args - Arguments to filter Incidents to count.
     * @example
     * // Count the number of Incidents
     * const count = await prisma.incident.count({
     *   where: {
     *     // ... the filter for the Incidents we want to count
     *   }
     * })
    **/
    count<T extends incidentCountArgs>(
      args?: Subset<T, incidentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IncidentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Incident.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IncidentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IncidentAggregateArgs>(args: Subset<T, IncidentAggregateArgs>): Prisma.PrismaPromise<GetIncidentAggregateType<T>>

    /**
     * Group by Incident.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incidentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends incidentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: incidentGroupByArgs['orderBy'] }
        : { orderBy?: incidentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, incidentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncidentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the incident model
   */
  readonly fields: incidentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for incident.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__incidentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    location<T extends incident$locationArgs<ExtArgs> = {}>(args?: Subset<T, incident$locationArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    incident_status<T extends incident$incident_statusArgs<ExtArgs> = {}>(args?: Subset<T, incident$incident_statusArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    incident_type<T extends incident$incident_typeArgs<ExtArgs> = {}>(args?: Subset<T, incident$incident_typeArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    app_user<T extends incident$app_userArgs<ExtArgs> = {}>(args?: Subset<T, incident$app_userArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    incident_history<T extends incident$incident_historyArgs<ExtArgs> = {}>(args?: Subset<T, incident$incident_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the incident model
   */ 
  interface incidentFieldRefs {
    readonly id: FieldRef<"incident", 'Int'>
    readonly title: FieldRef<"incident", 'String'>
    readonly description: FieldRef<"incident", 'String'>
    readonly image_url: FieldRef<"incident", 'String'>
    readonly priority: FieldRef<"incident", 'priority_enum'>
    readonly report_date: FieldRef<"incident", 'DateTime'>
    readonly close_date: FieldRef<"incident", 'DateTime'>
    readonly status_id: FieldRef<"incident", 'Int'>
    readonly user_id: FieldRef<"incident", 'Int'>
    readonly type_id: FieldRef<"incident", 'Int'>
    readonly location_id: FieldRef<"incident", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * incident findUnique
   */
  export type incidentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * Filter, which incident to fetch.
     */
    where: incidentWhereUniqueInput
  }

  /**
   * incident findUniqueOrThrow
   */
  export type incidentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * Filter, which incident to fetch.
     */
    where: incidentWhereUniqueInput
  }

  /**
   * incident findFirst
   */
  export type incidentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * Filter, which incident to fetch.
     */
    where?: incidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incidents.
     */
    cursor?: incidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incidents.
     */
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * incident findFirstOrThrow
   */
  export type incidentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * Filter, which incident to fetch.
     */
    where?: incidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incidents.
     */
    cursor?: incidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incidents.
     */
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * incident findMany
   */
  export type incidentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * Filter, which incidents to fetch.
     */
    where?: incidentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incidents to fetch.
     */
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing incidents.
     */
    cursor?: incidentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incidents from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incidents.
     */
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * incident create
   */
  export type incidentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * The data needed to create a incident.
     */
    data?: XOR<incidentCreateInput, incidentUncheckedCreateInput>
  }

  /**
   * incident createMany
   */
  export type incidentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many incidents.
     */
    data: incidentCreateManyInput | incidentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * incident createManyAndReturn
   */
  export type incidentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * The data used to create many incidents.
     */
    data: incidentCreateManyInput | incidentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * incident update
   */
  export type incidentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * The data needed to update a incident.
     */
    data: XOR<incidentUpdateInput, incidentUncheckedUpdateInput>
    /**
     * Choose, which incident to update.
     */
    where: incidentWhereUniqueInput
  }

  /**
   * incident updateMany
   */
  export type incidentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update incidents.
     */
    data: XOR<incidentUpdateManyMutationInput, incidentUncheckedUpdateManyInput>
    /**
     * Filter which incidents to update
     */
    where?: incidentWhereInput
    /**
     * Limit how many incidents to update.
     */
    limit?: number
  }

  /**
   * incident updateManyAndReturn
   */
  export type incidentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * The data used to update incidents.
     */
    data: XOR<incidentUpdateManyMutationInput, incidentUncheckedUpdateManyInput>
    /**
     * Filter which incidents to update
     */
    where?: incidentWhereInput
    /**
     * Limit how many incidents to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * incident upsert
   */
  export type incidentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * The filter to search for the incident to update in case it exists.
     */
    where: incidentWhereUniqueInput
    /**
     * In case the incident found by the `where` argument doesn't exist, create a new incident with this data.
     */
    create: XOR<incidentCreateInput, incidentUncheckedCreateInput>
    /**
     * In case the incident was found with the provided `where` argument, update it with this data.
     */
    update: XOR<incidentUpdateInput, incidentUncheckedUpdateInput>
  }

  /**
   * incident delete
   */
  export type incidentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    /**
     * Filter which incident to delete.
     */
    where: incidentWhereUniqueInput
  }

  /**
   * incident deleteMany
   */
  export type incidentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incidents to delete
     */
    where?: incidentWhereInput
    /**
     * Limit how many incidents to delete.
     */
    limit?: number
  }

  /**
   * incident.location
   */
  export type incident$locationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    where?: locationWhereInput
  }

  /**
   * incident.incident_status
   */
  export type incident$incident_statusArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    where?: incident_statusWhereInput
  }

  /**
   * incident.incident_type
   */
  export type incident$incident_typeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    where?: incident_typeWhereInput
  }

  /**
   * incident.app_user
   */
  export type incident$app_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    where?: app_userWhereInput
  }

  /**
   * incident.incident_history
   */
  export type incident$incident_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    where?: incident_historyWhereInput
    orderBy?: incident_historyOrderByWithRelationInput | incident_historyOrderByWithRelationInput[]
    cursor?: incident_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Incident_historyScalarFieldEnum | Incident_historyScalarFieldEnum[]
  }

  /**
   * incident without action
   */
  export type incidentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
  }


  /**
   * Model incident_history
   */

  export type AggregateIncident_history = {
    _count: Incident_historyCountAggregateOutputType | null
    _avg: Incident_historyAvgAggregateOutputType | null
    _sum: Incident_historySumAggregateOutputType | null
    _min: Incident_historyMinAggregateOutputType | null
    _max: Incident_historyMaxAggregateOutputType | null
  }

  export type Incident_historyAvgAggregateOutputType = {
    id: number | null
    incident_id: number | null
    modified_by: number | null
  }

  export type Incident_historySumAggregateOutputType = {
    id: number | null
    incident_id: number | null
    modified_by: number | null
  }

  export type Incident_historyMinAggregateOutputType = {
    id: number | null
    incident_id: number | null
    previous_status: string | null
    new_status: string | null
    change_date: Date | null
    comment: string | null
    modified_by: number | null
  }

  export type Incident_historyMaxAggregateOutputType = {
    id: number | null
    incident_id: number | null
    previous_status: string | null
    new_status: string | null
    change_date: Date | null
    comment: string | null
    modified_by: number | null
  }

  export type Incident_historyCountAggregateOutputType = {
    id: number
    incident_id: number
    previous_status: number
    new_status: number
    change_date: number
    comment: number
    modified_by: number
    _all: number
  }


  export type Incident_historyAvgAggregateInputType = {
    id?: true
    incident_id?: true
    modified_by?: true
  }

  export type Incident_historySumAggregateInputType = {
    id?: true
    incident_id?: true
    modified_by?: true
  }

  export type Incident_historyMinAggregateInputType = {
    id?: true
    incident_id?: true
    previous_status?: true
    new_status?: true
    change_date?: true
    comment?: true
    modified_by?: true
  }

  export type Incident_historyMaxAggregateInputType = {
    id?: true
    incident_id?: true
    previous_status?: true
    new_status?: true
    change_date?: true
    comment?: true
    modified_by?: true
  }

  export type Incident_historyCountAggregateInputType = {
    id?: true
    incident_id?: true
    previous_status?: true
    new_status?: true
    change_date?: true
    comment?: true
    modified_by?: true
    _all?: true
  }

  export type Incident_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incident_history to aggregate.
     */
    where?: incident_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_histories to fetch.
     */
    orderBy?: incident_historyOrderByWithRelationInput | incident_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: incident_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned incident_histories
    **/
    _count?: true | Incident_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Incident_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Incident_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Incident_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Incident_historyMaxAggregateInputType
  }

  export type GetIncident_historyAggregateType<T extends Incident_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateIncident_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncident_history[P]>
      : GetScalarType<T[P], AggregateIncident_history[P]>
  }




  export type incident_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incident_historyWhereInput
    orderBy?: incident_historyOrderByWithAggregationInput | incident_historyOrderByWithAggregationInput[]
    by: Incident_historyScalarFieldEnum[] | Incident_historyScalarFieldEnum
    having?: incident_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Incident_historyCountAggregateInputType | true
    _avg?: Incident_historyAvgAggregateInputType
    _sum?: Incident_historySumAggregateInputType
    _min?: Incident_historyMinAggregateInputType
    _max?: Incident_historyMaxAggregateInputType
  }

  export type Incident_historyGroupByOutputType = {
    id: number
    incident_id: number | null
    previous_status: string | null
    new_status: string | null
    change_date: Date | null
    comment: string | null
    modified_by: number | null
    _count: Incident_historyCountAggregateOutputType | null
    _avg: Incident_historyAvgAggregateOutputType | null
    _sum: Incident_historySumAggregateOutputType | null
    _min: Incident_historyMinAggregateOutputType | null
    _max: Incident_historyMaxAggregateOutputType | null
  }

  type GetIncident_historyGroupByPayload<T extends incident_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Incident_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Incident_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Incident_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Incident_historyGroupByOutputType[P]>
        }
      >
    >


  export type incident_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incident_id?: boolean
    previous_status?: boolean
    new_status?: boolean
    change_date?: boolean
    comment?: boolean
    modified_by?: boolean
    incident?: boolean | incident_history$incidentArgs<ExtArgs>
    app_user?: boolean | incident_history$app_userArgs<ExtArgs>
  }, ExtArgs["result"]["incident_history"]>

  export type incident_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incident_id?: boolean
    previous_status?: boolean
    new_status?: boolean
    change_date?: boolean
    comment?: boolean
    modified_by?: boolean
    incident?: boolean | incident_history$incidentArgs<ExtArgs>
    app_user?: boolean | incident_history$app_userArgs<ExtArgs>
  }, ExtArgs["result"]["incident_history"]>

  export type incident_historySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    incident_id?: boolean
    previous_status?: boolean
    new_status?: boolean
    change_date?: boolean
    comment?: boolean
    modified_by?: boolean
    incident?: boolean | incident_history$incidentArgs<ExtArgs>
    app_user?: boolean | incident_history$app_userArgs<ExtArgs>
  }, ExtArgs["result"]["incident_history"]>

  export type incident_historySelectScalar = {
    id?: boolean
    incident_id?: boolean
    previous_status?: boolean
    new_status?: boolean
    change_date?: boolean
    comment?: boolean
    modified_by?: boolean
  }

  export type incident_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "incident_id" | "previous_status" | "new_status" | "change_date" | "comment" | "modified_by", ExtArgs["result"]["incident_history"]>
  export type incident_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | incident_history$incidentArgs<ExtArgs>
    app_user?: boolean | incident_history$app_userArgs<ExtArgs>
  }
  export type incident_historyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | incident_history$incidentArgs<ExtArgs>
    app_user?: boolean | incident_history$app_userArgs<ExtArgs>
  }
  export type incident_historyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | incident_history$incidentArgs<ExtArgs>
    app_user?: boolean | incident_history$app_userArgs<ExtArgs>
  }

  export type $incident_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "incident_history"
    objects: {
      incident: Prisma.$incidentPayload<ExtArgs> | null
      app_user: Prisma.$app_userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      incident_id: number | null
      previous_status: string | null
      new_status: string | null
      change_date: Date | null
      comment: string | null
      modified_by: number | null
    }, ExtArgs["result"]["incident_history"]>
    composites: {}
  }

  type incident_historyGetPayload<S extends boolean | null | undefined | incident_historyDefaultArgs> = $Result.GetResult<Prisma.$incident_historyPayload, S>

  type incident_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<incident_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Incident_historyCountAggregateInputType | true
    }

  export interface incident_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['incident_history'], meta: { name: 'incident_history' } }
    /**
     * Find zero or one Incident_history that matches the filter.
     * @param {incident_historyFindUniqueArgs} args - Arguments to find a Incident_history
     * @example
     * // Get one Incident_history
     * const incident_history = await prisma.incident_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends incident_historyFindUniqueArgs>(args: SelectSubset<T, incident_historyFindUniqueArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Incident_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {incident_historyFindUniqueOrThrowArgs} args - Arguments to find a Incident_history
     * @example
     * // Get one Incident_history
     * const incident_history = await prisma.incident_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends incident_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, incident_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_historyFindFirstArgs} args - Arguments to find a Incident_history
     * @example
     * // Get one Incident_history
     * const incident_history = await prisma.incident_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends incident_historyFindFirstArgs>(args?: SelectSubset<T, incident_historyFindFirstArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_historyFindFirstOrThrowArgs} args - Arguments to find a Incident_history
     * @example
     * // Get one Incident_history
     * const incident_history = await prisma.incident_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends incident_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, incident_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Incident_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Incident_histories
     * const incident_histories = await prisma.incident_history.findMany()
     * 
     * // Get first 10 Incident_histories
     * const incident_histories = await prisma.incident_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const incident_historyWithIdOnly = await prisma.incident_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends incident_historyFindManyArgs>(args?: SelectSubset<T, incident_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Incident_history.
     * @param {incident_historyCreateArgs} args - Arguments to create a Incident_history.
     * @example
     * // Create one Incident_history
     * const Incident_history = await prisma.incident_history.create({
     *   data: {
     *     // ... data to create a Incident_history
     *   }
     * })
     * 
     */
    create<T extends incident_historyCreateArgs>(args: SelectSubset<T, incident_historyCreateArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Incident_histories.
     * @param {incident_historyCreateManyArgs} args - Arguments to create many Incident_histories.
     * @example
     * // Create many Incident_histories
     * const incident_history = await prisma.incident_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends incident_historyCreateManyArgs>(args?: SelectSubset<T, incident_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Incident_histories and returns the data saved in the database.
     * @param {incident_historyCreateManyAndReturnArgs} args - Arguments to create many Incident_histories.
     * @example
     * // Create many Incident_histories
     * const incident_history = await prisma.incident_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Incident_histories and only return the `id`
     * const incident_historyWithIdOnly = await prisma.incident_history.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends incident_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, incident_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Incident_history.
     * @param {incident_historyDeleteArgs} args - Arguments to delete one Incident_history.
     * @example
     * // Delete one Incident_history
     * const Incident_history = await prisma.incident_history.delete({
     *   where: {
     *     // ... filter to delete one Incident_history
     *   }
     * })
     * 
     */
    delete<T extends incident_historyDeleteArgs>(args: SelectSubset<T, incident_historyDeleteArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Incident_history.
     * @param {incident_historyUpdateArgs} args - Arguments to update one Incident_history.
     * @example
     * // Update one Incident_history
     * const incident_history = await prisma.incident_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends incident_historyUpdateArgs>(args: SelectSubset<T, incident_historyUpdateArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Incident_histories.
     * @param {incident_historyDeleteManyArgs} args - Arguments to filter Incident_histories to delete.
     * @example
     * // Delete a few Incident_histories
     * const { count } = await prisma.incident_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends incident_historyDeleteManyArgs>(args?: SelectSubset<T, incident_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incident_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Incident_histories
     * const incident_history = await prisma.incident_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends incident_historyUpdateManyArgs>(args: SelectSubset<T, incident_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incident_histories and returns the data updated in the database.
     * @param {incident_historyUpdateManyAndReturnArgs} args - Arguments to update many Incident_histories.
     * @example
     * // Update many Incident_histories
     * const incident_history = await prisma.incident_history.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Incident_histories and only return the `id`
     * const incident_historyWithIdOnly = await prisma.incident_history.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends incident_historyUpdateManyAndReturnArgs>(args: SelectSubset<T, incident_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Incident_history.
     * @param {incident_historyUpsertArgs} args - Arguments to update or create a Incident_history.
     * @example
     * // Update or create a Incident_history
     * const incident_history = await prisma.incident_history.upsert({
     *   create: {
     *     // ... data to create a Incident_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Incident_history we want to update
     *   }
     * })
     */
    upsert<T extends incident_historyUpsertArgs>(args: SelectSubset<T, incident_historyUpsertArgs<ExtArgs>>): Prisma__incident_historyClient<$Result.GetResult<Prisma.$incident_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Incident_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_historyCountArgs} args - Arguments to filter Incident_histories to count.
     * @example
     * // Count the number of Incident_histories
     * const count = await prisma.incident_history.count({
     *   where: {
     *     // ... the filter for the Incident_histories we want to count
     *   }
     * })
    **/
    count<T extends incident_historyCountArgs>(
      args?: Subset<T, incident_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Incident_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Incident_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Incident_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Incident_historyAggregateArgs>(args: Subset<T, Incident_historyAggregateArgs>): Prisma.PrismaPromise<GetIncident_historyAggregateType<T>>

    /**
     * Group by Incident_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends incident_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: incident_historyGroupByArgs['orderBy'] }
        : { orderBy?: incident_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, incident_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncident_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the incident_history model
   */
  readonly fields: incident_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for incident_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__incident_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    incident<T extends incident_history$incidentArgs<ExtArgs> = {}>(args?: Subset<T, incident_history$incidentArgs<ExtArgs>>): Prisma__incidentClient<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    app_user<T extends incident_history$app_userArgs<ExtArgs> = {}>(args?: Subset<T, incident_history$app_userArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the incident_history model
   */ 
  interface incident_historyFieldRefs {
    readonly id: FieldRef<"incident_history", 'Int'>
    readonly incident_id: FieldRef<"incident_history", 'Int'>
    readonly previous_status: FieldRef<"incident_history", 'String'>
    readonly new_status: FieldRef<"incident_history", 'String'>
    readonly change_date: FieldRef<"incident_history", 'DateTime'>
    readonly comment: FieldRef<"incident_history", 'String'>
    readonly modified_by: FieldRef<"incident_history", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * incident_history findUnique
   */
  export type incident_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * Filter, which incident_history to fetch.
     */
    where: incident_historyWhereUniqueInput
  }

  /**
   * incident_history findUniqueOrThrow
   */
  export type incident_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * Filter, which incident_history to fetch.
     */
    where: incident_historyWhereUniqueInput
  }

  /**
   * incident_history findFirst
   */
  export type incident_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * Filter, which incident_history to fetch.
     */
    where?: incident_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_histories to fetch.
     */
    orderBy?: incident_historyOrderByWithRelationInput | incident_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incident_histories.
     */
    cursor?: incident_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incident_histories.
     */
    distinct?: Incident_historyScalarFieldEnum | Incident_historyScalarFieldEnum[]
  }

  /**
   * incident_history findFirstOrThrow
   */
  export type incident_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * Filter, which incident_history to fetch.
     */
    where?: incident_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_histories to fetch.
     */
    orderBy?: incident_historyOrderByWithRelationInput | incident_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incident_histories.
     */
    cursor?: incident_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incident_histories.
     */
    distinct?: Incident_historyScalarFieldEnum | Incident_historyScalarFieldEnum[]
  }

  /**
   * incident_history findMany
   */
  export type incident_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * Filter, which incident_histories to fetch.
     */
    where?: incident_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_histories to fetch.
     */
    orderBy?: incident_historyOrderByWithRelationInput | incident_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing incident_histories.
     */
    cursor?: incident_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_histories.
     */
    skip?: number
    distinct?: Incident_historyScalarFieldEnum | Incident_historyScalarFieldEnum[]
  }

  /**
   * incident_history create
   */
  export type incident_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a incident_history.
     */
    data?: XOR<incident_historyCreateInput, incident_historyUncheckedCreateInput>
  }

  /**
   * incident_history createMany
   */
  export type incident_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many incident_histories.
     */
    data: incident_historyCreateManyInput | incident_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * incident_history createManyAndReturn
   */
  export type incident_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * The data used to create many incident_histories.
     */
    data: incident_historyCreateManyInput | incident_historyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * incident_history update
   */
  export type incident_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a incident_history.
     */
    data: XOR<incident_historyUpdateInput, incident_historyUncheckedUpdateInput>
    /**
     * Choose, which incident_history to update.
     */
    where: incident_historyWhereUniqueInput
  }

  /**
   * incident_history updateMany
   */
  export type incident_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update incident_histories.
     */
    data: XOR<incident_historyUpdateManyMutationInput, incident_historyUncheckedUpdateManyInput>
    /**
     * Filter which incident_histories to update
     */
    where?: incident_historyWhereInput
    /**
     * Limit how many incident_histories to update.
     */
    limit?: number
  }

  /**
   * incident_history updateManyAndReturn
   */
  export type incident_historyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * The data used to update incident_histories.
     */
    data: XOR<incident_historyUpdateManyMutationInput, incident_historyUncheckedUpdateManyInput>
    /**
     * Filter which incident_histories to update
     */
    where?: incident_historyWhereInput
    /**
     * Limit how many incident_histories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * incident_history upsert
   */
  export type incident_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the incident_history to update in case it exists.
     */
    where: incident_historyWhereUniqueInput
    /**
     * In case the incident_history found by the `where` argument doesn't exist, create a new incident_history with this data.
     */
    create: XOR<incident_historyCreateInput, incident_historyUncheckedCreateInput>
    /**
     * In case the incident_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<incident_historyUpdateInput, incident_historyUncheckedUpdateInput>
  }

  /**
   * incident_history delete
   */
  export type incident_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
    /**
     * Filter which incident_history to delete.
     */
    where: incident_historyWhereUniqueInput
  }

  /**
   * incident_history deleteMany
   */
  export type incident_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incident_histories to delete
     */
    where?: incident_historyWhereInput
    /**
     * Limit how many incident_histories to delete.
     */
    limit?: number
  }

  /**
   * incident_history.incident
   */
  export type incident_history$incidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    where?: incidentWhereInput
  }

  /**
   * incident_history.app_user
   */
  export type incident_history$app_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    where?: app_userWhereInput
  }

  /**
   * incident_history without action
   */
  export type incident_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_history
     */
    select?: incident_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_history
     */
    omit?: incident_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_historyInclude<ExtArgs> | null
  }


  /**
   * Model incident_status
   */

  export type AggregateIncident_status = {
    _count: Incident_statusCountAggregateOutputType | null
    _avg: Incident_statusAvgAggregateOutputType | null
    _sum: Incident_statusSumAggregateOutputType | null
    _min: Incident_statusMinAggregateOutputType | null
    _max: Incident_statusMaxAggregateOutputType | null
  }

  export type Incident_statusAvgAggregateOutputType = {
    id: number | null
  }

  export type Incident_statusSumAggregateOutputType = {
    id: number | null
  }

  export type Incident_statusMinAggregateOutputType = {
    id: number | null
    name: $Enums.incident_status_enum | null
  }

  export type Incident_statusMaxAggregateOutputType = {
    id: number | null
    name: $Enums.incident_status_enum | null
  }

  export type Incident_statusCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type Incident_statusAvgAggregateInputType = {
    id?: true
  }

  export type Incident_statusSumAggregateInputType = {
    id?: true
  }

  export type Incident_statusMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type Incident_statusMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type Incident_statusCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type Incident_statusAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incident_status to aggregate.
     */
    where?: incident_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_statuses to fetch.
     */
    orderBy?: incident_statusOrderByWithRelationInput | incident_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: incident_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned incident_statuses
    **/
    _count?: true | Incident_statusCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Incident_statusAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Incident_statusSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Incident_statusMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Incident_statusMaxAggregateInputType
  }

  export type GetIncident_statusAggregateType<T extends Incident_statusAggregateArgs> = {
        [P in keyof T & keyof AggregateIncident_status]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncident_status[P]>
      : GetScalarType<T[P], AggregateIncident_status[P]>
  }




  export type incident_statusGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incident_statusWhereInput
    orderBy?: incident_statusOrderByWithAggregationInput | incident_statusOrderByWithAggregationInput[]
    by: Incident_statusScalarFieldEnum[] | Incident_statusScalarFieldEnum
    having?: incident_statusScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Incident_statusCountAggregateInputType | true
    _avg?: Incident_statusAvgAggregateInputType
    _sum?: Incident_statusSumAggregateInputType
    _min?: Incident_statusMinAggregateInputType
    _max?: Incident_statusMaxAggregateInputType
  }

  export type Incident_statusGroupByOutputType = {
    id: number
    name: $Enums.incident_status_enum
    _count: Incident_statusCountAggregateOutputType | null
    _avg: Incident_statusAvgAggregateOutputType | null
    _sum: Incident_statusSumAggregateOutputType | null
    _min: Incident_statusMinAggregateOutputType | null
    _max: Incident_statusMaxAggregateOutputType | null
  }

  type GetIncident_statusGroupByPayload<T extends incident_statusGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Incident_statusGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Incident_statusGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Incident_statusGroupByOutputType[P]>
            : GetScalarType<T[P], Incident_statusGroupByOutputType[P]>
        }
      >
    >


  export type incident_statusSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    incident?: boolean | incident_status$incidentArgs<ExtArgs>
    _count?: boolean | Incident_statusCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["incident_status"]>

  export type incident_statusSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["incident_status"]>

  export type incident_statusSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["incident_status"]>

  export type incident_statusSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type incident_statusOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["incident_status"]>
  export type incident_statusInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | incident_status$incidentArgs<ExtArgs>
    _count?: boolean | Incident_statusCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type incident_statusIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type incident_statusIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $incident_statusPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "incident_status"
    objects: {
      incident: Prisma.$incidentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: $Enums.incident_status_enum
    }, ExtArgs["result"]["incident_status"]>
    composites: {}
  }

  type incident_statusGetPayload<S extends boolean | null | undefined | incident_statusDefaultArgs> = $Result.GetResult<Prisma.$incident_statusPayload, S>

  type incident_statusCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<incident_statusFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Incident_statusCountAggregateInputType | true
    }

  export interface incident_statusDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['incident_status'], meta: { name: 'incident_status' } }
    /**
     * Find zero or one Incident_status that matches the filter.
     * @param {incident_statusFindUniqueArgs} args - Arguments to find a Incident_status
     * @example
     * // Get one Incident_status
     * const incident_status = await prisma.incident_status.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends incident_statusFindUniqueArgs>(args: SelectSubset<T, incident_statusFindUniqueArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Incident_status that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {incident_statusFindUniqueOrThrowArgs} args - Arguments to find a Incident_status
     * @example
     * // Get one Incident_status
     * const incident_status = await prisma.incident_status.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends incident_statusFindUniqueOrThrowArgs>(args: SelectSubset<T, incident_statusFindUniqueOrThrowArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident_status that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_statusFindFirstArgs} args - Arguments to find a Incident_status
     * @example
     * // Get one Incident_status
     * const incident_status = await prisma.incident_status.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends incident_statusFindFirstArgs>(args?: SelectSubset<T, incident_statusFindFirstArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident_status that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_statusFindFirstOrThrowArgs} args - Arguments to find a Incident_status
     * @example
     * // Get one Incident_status
     * const incident_status = await prisma.incident_status.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends incident_statusFindFirstOrThrowArgs>(args?: SelectSubset<T, incident_statusFindFirstOrThrowArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Incident_statuses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_statusFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Incident_statuses
     * const incident_statuses = await prisma.incident_status.findMany()
     * 
     * // Get first 10 Incident_statuses
     * const incident_statuses = await prisma.incident_status.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const incident_statusWithIdOnly = await prisma.incident_status.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends incident_statusFindManyArgs>(args?: SelectSubset<T, incident_statusFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Incident_status.
     * @param {incident_statusCreateArgs} args - Arguments to create a Incident_status.
     * @example
     * // Create one Incident_status
     * const Incident_status = await prisma.incident_status.create({
     *   data: {
     *     // ... data to create a Incident_status
     *   }
     * })
     * 
     */
    create<T extends incident_statusCreateArgs>(args: SelectSubset<T, incident_statusCreateArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Incident_statuses.
     * @param {incident_statusCreateManyArgs} args - Arguments to create many Incident_statuses.
     * @example
     * // Create many Incident_statuses
     * const incident_status = await prisma.incident_status.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends incident_statusCreateManyArgs>(args?: SelectSubset<T, incident_statusCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Incident_statuses and returns the data saved in the database.
     * @param {incident_statusCreateManyAndReturnArgs} args - Arguments to create many Incident_statuses.
     * @example
     * // Create many Incident_statuses
     * const incident_status = await prisma.incident_status.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Incident_statuses and only return the `id`
     * const incident_statusWithIdOnly = await prisma.incident_status.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends incident_statusCreateManyAndReturnArgs>(args?: SelectSubset<T, incident_statusCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Incident_status.
     * @param {incident_statusDeleteArgs} args - Arguments to delete one Incident_status.
     * @example
     * // Delete one Incident_status
     * const Incident_status = await prisma.incident_status.delete({
     *   where: {
     *     // ... filter to delete one Incident_status
     *   }
     * })
     * 
     */
    delete<T extends incident_statusDeleteArgs>(args: SelectSubset<T, incident_statusDeleteArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Incident_status.
     * @param {incident_statusUpdateArgs} args - Arguments to update one Incident_status.
     * @example
     * // Update one Incident_status
     * const incident_status = await prisma.incident_status.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends incident_statusUpdateArgs>(args: SelectSubset<T, incident_statusUpdateArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Incident_statuses.
     * @param {incident_statusDeleteManyArgs} args - Arguments to filter Incident_statuses to delete.
     * @example
     * // Delete a few Incident_statuses
     * const { count } = await prisma.incident_status.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends incident_statusDeleteManyArgs>(args?: SelectSubset<T, incident_statusDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incident_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_statusUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Incident_statuses
     * const incident_status = await prisma.incident_status.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends incident_statusUpdateManyArgs>(args: SelectSubset<T, incident_statusUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incident_statuses and returns the data updated in the database.
     * @param {incident_statusUpdateManyAndReturnArgs} args - Arguments to update many Incident_statuses.
     * @example
     * // Update many Incident_statuses
     * const incident_status = await prisma.incident_status.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Incident_statuses and only return the `id`
     * const incident_statusWithIdOnly = await prisma.incident_status.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends incident_statusUpdateManyAndReturnArgs>(args: SelectSubset<T, incident_statusUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Incident_status.
     * @param {incident_statusUpsertArgs} args - Arguments to update or create a Incident_status.
     * @example
     * // Update or create a Incident_status
     * const incident_status = await prisma.incident_status.upsert({
     *   create: {
     *     // ... data to create a Incident_status
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Incident_status we want to update
     *   }
     * })
     */
    upsert<T extends incident_statusUpsertArgs>(args: SelectSubset<T, incident_statusUpsertArgs<ExtArgs>>): Prisma__incident_statusClient<$Result.GetResult<Prisma.$incident_statusPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Incident_statuses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_statusCountArgs} args - Arguments to filter Incident_statuses to count.
     * @example
     * // Count the number of Incident_statuses
     * const count = await prisma.incident_status.count({
     *   where: {
     *     // ... the filter for the Incident_statuses we want to count
     *   }
     * })
    **/
    count<T extends incident_statusCountArgs>(
      args?: Subset<T, incident_statusCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Incident_statusCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Incident_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Incident_statusAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Incident_statusAggregateArgs>(args: Subset<T, Incident_statusAggregateArgs>): Prisma.PrismaPromise<GetIncident_statusAggregateType<T>>

    /**
     * Group by Incident_status.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_statusGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends incident_statusGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: incident_statusGroupByArgs['orderBy'] }
        : { orderBy?: incident_statusGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, incident_statusGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncident_statusGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the incident_status model
   */
  readonly fields: incident_statusFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for incident_status.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__incident_statusClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    incident<T extends incident_status$incidentArgs<ExtArgs> = {}>(args?: Subset<T, incident_status$incidentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the incident_status model
   */ 
  interface incident_statusFieldRefs {
    readonly id: FieldRef<"incident_status", 'Int'>
    readonly name: FieldRef<"incident_status", 'incident_status_enum'>
  }
    

  // Custom InputTypes
  /**
   * incident_status findUnique
   */
  export type incident_statusFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * Filter, which incident_status to fetch.
     */
    where: incident_statusWhereUniqueInput
  }

  /**
   * incident_status findUniqueOrThrow
   */
  export type incident_statusFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * Filter, which incident_status to fetch.
     */
    where: incident_statusWhereUniqueInput
  }

  /**
   * incident_status findFirst
   */
  export type incident_statusFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * Filter, which incident_status to fetch.
     */
    where?: incident_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_statuses to fetch.
     */
    orderBy?: incident_statusOrderByWithRelationInput | incident_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incident_statuses.
     */
    cursor?: incident_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incident_statuses.
     */
    distinct?: Incident_statusScalarFieldEnum | Incident_statusScalarFieldEnum[]
  }

  /**
   * incident_status findFirstOrThrow
   */
  export type incident_statusFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * Filter, which incident_status to fetch.
     */
    where?: incident_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_statuses to fetch.
     */
    orderBy?: incident_statusOrderByWithRelationInput | incident_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incident_statuses.
     */
    cursor?: incident_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_statuses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incident_statuses.
     */
    distinct?: Incident_statusScalarFieldEnum | Incident_statusScalarFieldEnum[]
  }

  /**
   * incident_status findMany
   */
  export type incident_statusFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * Filter, which incident_statuses to fetch.
     */
    where?: incident_statusWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_statuses to fetch.
     */
    orderBy?: incident_statusOrderByWithRelationInput | incident_statusOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing incident_statuses.
     */
    cursor?: incident_statusWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_statuses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_statuses.
     */
    skip?: number
    distinct?: Incident_statusScalarFieldEnum | Incident_statusScalarFieldEnum[]
  }

  /**
   * incident_status create
   */
  export type incident_statusCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * The data needed to create a incident_status.
     */
    data: XOR<incident_statusCreateInput, incident_statusUncheckedCreateInput>
  }

  /**
   * incident_status createMany
   */
  export type incident_statusCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many incident_statuses.
     */
    data: incident_statusCreateManyInput | incident_statusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * incident_status createManyAndReturn
   */
  export type incident_statusCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * The data used to create many incident_statuses.
     */
    data: incident_statusCreateManyInput | incident_statusCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * incident_status update
   */
  export type incident_statusUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * The data needed to update a incident_status.
     */
    data: XOR<incident_statusUpdateInput, incident_statusUncheckedUpdateInput>
    /**
     * Choose, which incident_status to update.
     */
    where: incident_statusWhereUniqueInput
  }

  /**
   * incident_status updateMany
   */
  export type incident_statusUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update incident_statuses.
     */
    data: XOR<incident_statusUpdateManyMutationInput, incident_statusUncheckedUpdateManyInput>
    /**
     * Filter which incident_statuses to update
     */
    where?: incident_statusWhereInput
    /**
     * Limit how many incident_statuses to update.
     */
    limit?: number
  }

  /**
   * incident_status updateManyAndReturn
   */
  export type incident_statusUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * The data used to update incident_statuses.
     */
    data: XOR<incident_statusUpdateManyMutationInput, incident_statusUncheckedUpdateManyInput>
    /**
     * Filter which incident_statuses to update
     */
    where?: incident_statusWhereInput
    /**
     * Limit how many incident_statuses to update.
     */
    limit?: number
  }

  /**
   * incident_status upsert
   */
  export type incident_statusUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * The filter to search for the incident_status to update in case it exists.
     */
    where: incident_statusWhereUniqueInput
    /**
     * In case the incident_status found by the `where` argument doesn't exist, create a new incident_status with this data.
     */
    create: XOR<incident_statusCreateInput, incident_statusUncheckedCreateInput>
    /**
     * In case the incident_status was found with the provided `where` argument, update it with this data.
     */
    update: XOR<incident_statusUpdateInput, incident_statusUncheckedUpdateInput>
  }

  /**
   * incident_status delete
   */
  export type incident_statusDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
    /**
     * Filter which incident_status to delete.
     */
    where: incident_statusWhereUniqueInput
  }

  /**
   * incident_status deleteMany
   */
  export type incident_statusDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incident_statuses to delete
     */
    where?: incident_statusWhereInput
    /**
     * Limit how many incident_statuses to delete.
     */
    limit?: number
  }

  /**
   * incident_status.incident
   */
  export type incident_status$incidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    where?: incidentWhereInput
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    cursor?: incidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * incident_status without action
   */
  export type incident_statusDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_status
     */
    select?: incident_statusSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_status
     */
    omit?: incident_statusOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_statusInclude<ExtArgs> | null
  }


  /**
   * Model incident_type
   */

  export type AggregateIncident_type = {
    _count: Incident_typeCountAggregateOutputType | null
    _avg: Incident_typeAvgAggregateOutputType | null
    _sum: Incident_typeSumAggregateOutputType | null
    _min: Incident_typeMinAggregateOutputType | null
    _max: Incident_typeMaxAggregateOutputType | null
  }

  export type Incident_typeAvgAggregateOutputType = {
    id: number | null
  }

  export type Incident_typeSumAggregateOutputType = {
    id: number | null
  }

  export type Incident_typeMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Incident_typeMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type Incident_typeCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type Incident_typeAvgAggregateInputType = {
    id?: true
  }

  export type Incident_typeSumAggregateInputType = {
    id?: true
  }

  export type Incident_typeMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type Incident_typeMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type Incident_typeCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type Incident_typeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incident_type to aggregate.
     */
    where?: incident_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_types to fetch.
     */
    orderBy?: incident_typeOrderByWithRelationInput | incident_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: incident_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned incident_types
    **/
    _count?: true | Incident_typeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Incident_typeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Incident_typeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Incident_typeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Incident_typeMaxAggregateInputType
  }

  export type GetIncident_typeAggregateType<T extends Incident_typeAggregateArgs> = {
        [P in keyof T & keyof AggregateIncident_type]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIncident_type[P]>
      : GetScalarType<T[P], AggregateIncident_type[P]>
  }




  export type incident_typeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: incident_typeWhereInput
    orderBy?: incident_typeOrderByWithAggregationInput | incident_typeOrderByWithAggregationInput[]
    by: Incident_typeScalarFieldEnum[] | Incident_typeScalarFieldEnum
    having?: incident_typeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Incident_typeCountAggregateInputType | true
    _avg?: Incident_typeAvgAggregateInputType
    _sum?: Incident_typeSumAggregateInputType
    _min?: Incident_typeMinAggregateInputType
    _max?: Incident_typeMaxAggregateInputType
  }

  export type Incident_typeGroupByOutputType = {
    id: number
    name: string
    _count: Incident_typeCountAggregateOutputType | null
    _avg: Incident_typeAvgAggregateOutputType | null
    _sum: Incident_typeSumAggregateOutputType | null
    _min: Incident_typeMinAggregateOutputType | null
    _max: Incident_typeMaxAggregateOutputType | null
  }

  type GetIncident_typeGroupByPayload<T extends incident_typeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Incident_typeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Incident_typeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Incident_typeGroupByOutputType[P]>
            : GetScalarType<T[P], Incident_typeGroupByOutputType[P]>
        }
      >
    >


  export type incident_typeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    incident?: boolean | incident_type$incidentArgs<ExtArgs>
    _count?: boolean | Incident_typeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["incident_type"]>

  export type incident_typeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["incident_type"]>

  export type incident_typeSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["incident_type"]>

  export type incident_typeSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type incident_typeOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["incident_type"]>
  export type incident_typeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | incident_type$incidentArgs<ExtArgs>
    _count?: boolean | Incident_typeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type incident_typeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type incident_typeIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $incident_typePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "incident_type"
    objects: {
      incident: Prisma.$incidentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["incident_type"]>
    composites: {}
  }

  type incident_typeGetPayload<S extends boolean | null | undefined | incident_typeDefaultArgs> = $Result.GetResult<Prisma.$incident_typePayload, S>

  type incident_typeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<incident_typeFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Incident_typeCountAggregateInputType | true
    }

  export interface incident_typeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['incident_type'], meta: { name: 'incident_type' } }
    /**
     * Find zero or one Incident_type that matches the filter.
     * @param {incident_typeFindUniqueArgs} args - Arguments to find a Incident_type
     * @example
     * // Get one Incident_type
     * const incident_type = await prisma.incident_type.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends incident_typeFindUniqueArgs>(args: SelectSubset<T, incident_typeFindUniqueArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Incident_type that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {incident_typeFindUniqueOrThrowArgs} args - Arguments to find a Incident_type
     * @example
     * // Get one Incident_type
     * const incident_type = await prisma.incident_type.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends incident_typeFindUniqueOrThrowArgs>(args: SelectSubset<T, incident_typeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident_type that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_typeFindFirstArgs} args - Arguments to find a Incident_type
     * @example
     * // Get one Incident_type
     * const incident_type = await prisma.incident_type.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends incident_typeFindFirstArgs>(args?: SelectSubset<T, incident_typeFindFirstArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Incident_type that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_typeFindFirstOrThrowArgs} args - Arguments to find a Incident_type
     * @example
     * // Get one Incident_type
     * const incident_type = await prisma.incident_type.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends incident_typeFindFirstOrThrowArgs>(args?: SelectSubset<T, incident_typeFindFirstOrThrowArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Incident_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_typeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Incident_types
     * const incident_types = await prisma.incident_type.findMany()
     * 
     * // Get first 10 Incident_types
     * const incident_types = await prisma.incident_type.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const incident_typeWithIdOnly = await prisma.incident_type.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends incident_typeFindManyArgs>(args?: SelectSubset<T, incident_typeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Incident_type.
     * @param {incident_typeCreateArgs} args - Arguments to create a Incident_type.
     * @example
     * // Create one Incident_type
     * const Incident_type = await prisma.incident_type.create({
     *   data: {
     *     // ... data to create a Incident_type
     *   }
     * })
     * 
     */
    create<T extends incident_typeCreateArgs>(args: SelectSubset<T, incident_typeCreateArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Incident_types.
     * @param {incident_typeCreateManyArgs} args - Arguments to create many Incident_types.
     * @example
     * // Create many Incident_types
     * const incident_type = await prisma.incident_type.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends incident_typeCreateManyArgs>(args?: SelectSubset<T, incident_typeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Incident_types and returns the data saved in the database.
     * @param {incident_typeCreateManyAndReturnArgs} args - Arguments to create many Incident_types.
     * @example
     * // Create many Incident_types
     * const incident_type = await prisma.incident_type.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Incident_types and only return the `id`
     * const incident_typeWithIdOnly = await prisma.incident_type.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends incident_typeCreateManyAndReturnArgs>(args?: SelectSubset<T, incident_typeCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Incident_type.
     * @param {incident_typeDeleteArgs} args - Arguments to delete one Incident_type.
     * @example
     * // Delete one Incident_type
     * const Incident_type = await prisma.incident_type.delete({
     *   where: {
     *     // ... filter to delete one Incident_type
     *   }
     * })
     * 
     */
    delete<T extends incident_typeDeleteArgs>(args: SelectSubset<T, incident_typeDeleteArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Incident_type.
     * @param {incident_typeUpdateArgs} args - Arguments to update one Incident_type.
     * @example
     * // Update one Incident_type
     * const incident_type = await prisma.incident_type.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends incident_typeUpdateArgs>(args: SelectSubset<T, incident_typeUpdateArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Incident_types.
     * @param {incident_typeDeleteManyArgs} args - Arguments to filter Incident_types to delete.
     * @example
     * // Delete a few Incident_types
     * const { count } = await prisma.incident_type.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends incident_typeDeleteManyArgs>(args?: SelectSubset<T, incident_typeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incident_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_typeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Incident_types
     * const incident_type = await prisma.incident_type.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends incident_typeUpdateManyArgs>(args: SelectSubset<T, incident_typeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Incident_types and returns the data updated in the database.
     * @param {incident_typeUpdateManyAndReturnArgs} args - Arguments to update many Incident_types.
     * @example
     * // Update many Incident_types
     * const incident_type = await prisma.incident_type.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Incident_types and only return the `id`
     * const incident_typeWithIdOnly = await prisma.incident_type.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends incident_typeUpdateManyAndReturnArgs>(args: SelectSubset<T, incident_typeUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Incident_type.
     * @param {incident_typeUpsertArgs} args - Arguments to update or create a Incident_type.
     * @example
     * // Update or create a Incident_type
     * const incident_type = await prisma.incident_type.upsert({
     *   create: {
     *     // ... data to create a Incident_type
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Incident_type we want to update
     *   }
     * })
     */
    upsert<T extends incident_typeUpsertArgs>(args: SelectSubset<T, incident_typeUpsertArgs<ExtArgs>>): Prisma__incident_typeClient<$Result.GetResult<Prisma.$incident_typePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Incident_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_typeCountArgs} args - Arguments to filter Incident_types to count.
     * @example
     * // Count the number of Incident_types
     * const count = await prisma.incident_type.count({
     *   where: {
     *     // ... the filter for the Incident_types we want to count
     *   }
     * })
    **/
    count<T extends incident_typeCountArgs>(
      args?: Subset<T, incident_typeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Incident_typeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Incident_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Incident_typeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Incident_typeAggregateArgs>(args: Subset<T, Incident_typeAggregateArgs>): Prisma.PrismaPromise<GetIncident_typeAggregateType<T>>

    /**
     * Group by Incident_type.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {incident_typeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends incident_typeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: incident_typeGroupByArgs['orderBy'] }
        : { orderBy?: incident_typeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, incident_typeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIncident_typeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the incident_type model
   */
  readonly fields: incident_typeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for incident_type.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__incident_typeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    incident<T extends incident_type$incidentArgs<ExtArgs> = {}>(args?: Subset<T, incident_type$incidentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the incident_type model
   */ 
  interface incident_typeFieldRefs {
    readonly id: FieldRef<"incident_type", 'Int'>
    readonly name: FieldRef<"incident_type", 'String'>
  }
    

  // Custom InputTypes
  /**
   * incident_type findUnique
   */
  export type incident_typeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * Filter, which incident_type to fetch.
     */
    where: incident_typeWhereUniqueInput
  }

  /**
   * incident_type findUniqueOrThrow
   */
  export type incident_typeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * Filter, which incident_type to fetch.
     */
    where: incident_typeWhereUniqueInput
  }

  /**
   * incident_type findFirst
   */
  export type incident_typeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * Filter, which incident_type to fetch.
     */
    where?: incident_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_types to fetch.
     */
    orderBy?: incident_typeOrderByWithRelationInput | incident_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incident_types.
     */
    cursor?: incident_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incident_types.
     */
    distinct?: Incident_typeScalarFieldEnum | Incident_typeScalarFieldEnum[]
  }

  /**
   * incident_type findFirstOrThrow
   */
  export type incident_typeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * Filter, which incident_type to fetch.
     */
    where?: incident_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_types to fetch.
     */
    orderBy?: incident_typeOrderByWithRelationInput | incident_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for incident_types.
     */
    cursor?: incident_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of incident_types.
     */
    distinct?: Incident_typeScalarFieldEnum | Incident_typeScalarFieldEnum[]
  }

  /**
   * incident_type findMany
   */
  export type incident_typeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * Filter, which incident_types to fetch.
     */
    where?: incident_typeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of incident_types to fetch.
     */
    orderBy?: incident_typeOrderByWithRelationInput | incident_typeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing incident_types.
     */
    cursor?: incident_typeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` incident_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` incident_types.
     */
    skip?: number
    distinct?: Incident_typeScalarFieldEnum | Incident_typeScalarFieldEnum[]
  }

  /**
   * incident_type create
   */
  export type incident_typeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * The data needed to create a incident_type.
     */
    data: XOR<incident_typeCreateInput, incident_typeUncheckedCreateInput>
  }

  /**
   * incident_type createMany
   */
  export type incident_typeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many incident_types.
     */
    data: incident_typeCreateManyInput | incident_typeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * incident_type createManyAndReturn
   */
  export type incident_typeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * The data used to create many incident_types.
     */
    data: incident_typeCreateManyInput | incident_typeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * incident_type update
   */
  export type incident_typeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * The data needed to update a incident_type.
     */
    data: XOR<incident_typeUpdateInput, incident_typeUncheckedUpdateInput>
    /**
     * Choose, which incident_type to update.
     */
    where: incident_typeWhereUniqueInput
  }

  /**
   * incident_type updateMany
   */
  export type incident_typeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update incident_types.
     */
    data: XOR<incident_typeUpdateManyMutationInput, incident_typeUncheckedUpdateManyInput>
    /**
     * Filter which incident_types to update
     */
    where?: incident_typeWhereInput
    /**
     * Limit how many incident_types to update.
     */
    limit?: number
  }

  /**
   * incident_type updateManyAndReturn
   */
  export type incident_typeUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * The data used to update incident_types.
     */
    data: XOR<incident_typeUpdateManyMutationInput, incident_typeUncheckedUpdateManyInput>
    /**
     * Filter which incident_types to update
     */
    where?: incident_typeWhereInput
    /**
     * Limit how many incident_types to update.
     */
    limit?: number
  }

  /**
   * incident_type upsert
   */
  export type incident_typeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * The filter to search for the incident_type to update in case it exists.
     */
    where: incident_typeWhereUniqueInput
    /**
     * In case the incident_type found by the `where` argument doesn't exist, create a new incident_type with this data.
     */
    create: XOR<incident_typeCreateInput, incident_typeUncheckedCreateInput>
    /**
     * In case the incident_type was found with the provided `where` argument, update it with this data.
     */
    update: XOR<incident_typeUpdateInput, incident_typeUncheckedUpdateInput>
  }

  /**
   * incident_type delete
   */
  export type incident_typeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
    /**
     * Filter which incident_type to delete.
     */
    where: incident_typeWhereUniqueInput
  }

  /**
   * incident_type deleteMany
   */
  export type incident_typeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which incident_types to delete
     */
    where?: incident_typeWhereInput
    /**
     * Limit how many incident_types to delete.
     */
    limit?: number
  }

  /**
   * incident_type.incident
   */
  export type incident_type$incidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    where?: incidentWhereInput
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    cursor?: incidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * incident_type without action
   */
  export type incident_typeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident_type
     */
    select?: incident_typeSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident_type
     */
    omit?: incident_typeOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incident_typeInclude<ExtArgs> | null
  }


  /**
   * Model location
   */

  export type AggregateLocation = {
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  export type LocationAvgAggregateOutputType = {
    id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    altitude: Decimal | null
  }

  export type LocationSumAggregateOutputType = {
    id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    altitude: Decimal | null
  }

  export type LocationMinAggregateOutputType = {
    id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    altitude: Decimal | null
    reference: string | null
  }

  export type LocationMaxAggregateOutputType = {
    id: number | null
    latitude: Decimal | null
    longitude: Decimal | null
    altitude: Decimal | null
    reference: string | null
  }

  export type LocationCountAggregateOutputType = {
    id: number
    latitude: number
    longitude: number
    altitude: number
    reference: number
    _all: number
  }


  export type LocationAvgAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    altitude?: true
  }

  export type LocationSumAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    altitude?: true
  }

  export type LocationMinAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    altitude?: true
    reference?: true
  }

  export type LocationMaxAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    altitude?: true
    reference?: true
  }

  export type LocationCountAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
    altitude?: true
    reference?: true
    _all?: true
  }

  export type LocationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which location to aggregate.
     */
    where?: locationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locations to fetch.
     */
    orderBy?: locationOrderByWithRelationInput | locationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: locationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned locations
    **/
    _count?: true | LocationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocationMaxAggregateInputType
  }

  export type GetLocationAggregateType<T extends LocationAggregateArgs> = {
        [P in keyof T & keyof AggregateLocation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocation[P]>
      : GetScalarType<T[P], AggregateLocation[P]>
  }




  export type locationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: locationWhereInput
    orderBy?: locationOrderByWithAggregationInput | locationOrderByWithAggregationInput[]
    by: LocationScalarFieldEnum[] | LocationScalarFieldEnum
    having?: locationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocationCountAggregateInputType | true
    _avg?: LocationAvgAggregateInputType
    _sum?: LocationSumAggregateInputType
    _min?: LocationMinAggregateInputType
    _max?: LocationMaxAggregateInputType
  }

  export type LocationGroupByOutputType = {
    id: number
    latitude: Decimal | null
    longitude: Decimal | null
    altitude: Decimal | null
    reference: string | null
    _count: LocationCountAggregateOutputType | null
    _avg: LocationAvgAggregateOutputType | null
    _sum: LocationSumAggregateOutputType | null
    _min: LocationMinAggregateOutputType | null
    _max: LocationMaxAggregateOutputType | null
  }

  type GetLocationGroupByPayload<T extends locationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocationGroupByOutputType[P]>
            : GetScalarType<T[P], LocationGroupByOutputType[P]>
        }
      >
    >


  export type locationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    latitude?: boolean
    longitude?: boolean
    altitude?: boolean
    reference?: boolean
    incident?: boolean | location$incidentArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["location"]>

  export type locationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    latitude?: boolean
    longitude?: boolean
    altitude?: boolean
    reference?: boolean
  }, ExtArgs["result"]["location"]>

  export type locationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    latitude?: boolean
    longitude?: boolean
    altitude?: boolean
    reference?: boolean
  }, ExtArgs["result"]["location"]>

  export type locationSelectScalar = {
    id?: boolean
    latitude?: boolean
    longitude?: boolean
    altitude?: boolean
    reference?: boolean
  }

  export type locationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "latitude" | "longitude" | "altitude" | "reference", ExtArgs["result"]["location"]>
  export type locationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incident?: boolean | location$incidentArgs<ExtArgs>
    _count?: boolean | LocationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type locationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type locationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $locationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "location"
    objects: {
      incident: Prisma.$incidentPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      latitude: Prisma.Decimal | null
      longitude: Prisma.Decimal | null
      altitude: Prisma.Decimal | null
      reference: string | null
    }, ExtArgs["result"]["location"]>
    composites: {}
  }

  type locationGetPayload<S extends boolean | null | undefined | locationDefaultArgs> = $Result.GetResult<Prisma.$locationPayload, S>

  type locationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<locationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LocationCountAggregateInputType | true
    }

  export interface locationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['location'], meta: { name: 'location' } }
    /**
     * Find zero or one Location that matches the filter.
     * @param {locationFindUniqueArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends locationFindUniqueArgs>(args: SelectSubset<T, locationFindUniqueArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Location that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {locationFindUniqueOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends locationFindUniqueOrThrowArgs>(args: SelectSubset<T, locationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Location that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locationFindFirstArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends locationFindFirstArgs>(args?: SelectSubset<T, locationFindFirstArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Location that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locationFindFirstOrThrowArgs} args - Arguments to find a Location
     * @example
     * // Get one Location
     * const location = await prisma.location.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends locationFindFirstOrThrowArgs>(args?: SelectSubset<T, locationFindFirstOrThrowArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Locations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Locations
     * const locations = await prisma.location.findMany()
     * 
     * // Get first 10 Locations
     * const locations = await prisma.location.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locationWithIdOnly = await prisma.location.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends locationFindManyArgs>(args?: SelectSubset<T, locationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Location.
     * @param {locationCreateArgs} args - Arguments to create a Location.
     * @example
     * // Create one Location
     * const Location = await prisma.location.create({
     *   data: {
     *     // ... data to create a Location
     *   }
     * })
     * 
     */
    create<T extends locationCreateArgs>(args: SelectSubset<T, locationCreateArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Locations.
     * @param {locationCreateManyArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends locationCreateManyArgs>(args?: SelectSubset<T, locationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Locations and returns the data saved in the database.
     * @param {locationCreateManyAndReturnArgs} args - Arguments to create many Locations.
     * @example
     * // Create many Locations
     * const location = await prisma.location.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends locationCreateManyAndReturnArgs>(args?: SelectSubset<T, locationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Location.
     * @param {locationDeleteArgs} args - Arguments to delete one Location.
     * @example
     * // Delete one Location
     * const Location = await prisma.location.delete({
     *   where: {
     *     // ... filter to delete one Location
     *   }
     * })
     * 
     */
    delete<T extends locationDeleteArgs>(args: SelectSubset<T, locationDeleteArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Location.
     * @param {locationUpdateArgs} args - Arguments to update one Location.
     * @example
     * // Update one Location
     * const location = await prisma.location.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends locationUpdateArgs>(args: SelectSubset<T, locationUpdateArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Locations.
     * @param {locationDeleteManyArgs} args - Arguments to filter Locations to delete.
     * @example
     * // Delete a few Locations
     * const { count } = await prisma.location.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends locationDeleteManyArgs>(args?: SelectSubset<T, locationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends locationUpdateManyArgs>(args: SelectSubset<T, locationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locations and returns the data updated in the database.
     * @param {locationUpdateManyAndReturnArgs} args - Arguments to update many Locations.
     * @example
     * // Update many Locations
     * const location = await prisma.location.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Locations and only return the `id`
     * const locationWithIdOnly = await prisma.location.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends locationUpdateManyAndReturnArgs>(args: SelectSubset<T, locationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Location.
     * @param {locationUpsertArgs} args - Arguments to update or create a Location.
     * @example
     * // Update or create a Location
     * const location = await prisma.location.upsert({
     *   create: {
     *     // ... data to create a Location
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Location we want to update
     *   }
     * })
     */
    upsert<T extends locationUpsertArgs>(args: SelectSubset<T, locationUpsertArgs<ExtArgs>>): Prisma__locationClient<$Result.GetResult<Prisma.$locationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Locations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locationCountArgs} args - Arguments to filter Locations to count.
     * @example
     * // Count the number of Locations
     * const count = await prisma.location.count({
     *   where: {
     *     // ... the filter for the Locations we want to count
     *   }
     * })
    **/
    count<T extends locationCountArgs>(
      args?: Subset<T, locationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocationAggregateArgs>(args: Subset<T, LocationAggregateArgs>): Prisma.PrismaPromise<GetLocationAggregateType<T>>

    /**
     * Group by Location.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends locationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: locationGroupByArgs['orderBy'] }
        : { orderBy?: locationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, locationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the location model
   */
  readonly fields: locationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for location.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__locationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    incident<T extends location$incidentArgs<ExtArgs> = {}>(args?: Subset<T, location$incidentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$incidentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the location model
   */ 
  interface locationFieldRefs {
    readonly id: FieldRef<"location", 'Int'>
    readonly latitude: FieldRef<"location", 'Decimal'>
    readonly longitude: FieldRef<"location", 'Decimal'>
    readonly altitude: FieldRef<"location", 'Decimal'>
    readonly reference: FieldRef<"location", 'String'>
  }
    

  // Custom InputTypes
  /**
   * location findUnique
   */
  export type locationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * Filter, which location to fetch.
     */
    where: locationWhereUniqueInput
  }

  /**
   * location findUniqueOrThrow
   */
  export type locationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * Filter, which location to fetch.
     */
    where: locationWhereUniqueInput
  }

  /**
   * location findFirst
   */
  export type locationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * Filter, which location to fetch.
     */
    where?: locationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locations to fetch.
     */
    orderBy?: locationOrderByWithRelationInput | locationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for locations.
     */
    cursor?: locationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * location findFirstOrThrow
   */
  export type locationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * Filter, which location to fetch.
     */
    where?: locationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locations to fetch.
     */
    orderBy?: locationOrderByWithRelationInput | locationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for locations.
     */
    cursor?: locationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of locations.
     */
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * location findMany
   */
  export type locationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * Filter, which locations to fetch.
     */
    where?: locationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locations to fetch.
     */
    orderBy?: locationOrderByWithRelationInput | locationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing locations.
     */
    cursor?: locationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locations.
     */
    skip?: number
    distinct?: LocationScalarFieldEnum | LocationScalarFieldEnum[]
  }

  /**
   * location create
   */
  export type locationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * The data needed to create a location.
     */
    data?: XOR<locationCreateInput, locationUncheckedCreateInput>
  }

  /**
   * location createMany
   */
  export type locationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many locations.
     */
    data: locationCreateManyInput | locationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * location createManyAndReturn
   */
  export type locationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * The data used to create many locations.
     */
    data: locationCreateManyInput | locationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * location update
   */
  export type locationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * The data needed to update a location.
     */
    data: XOR<locationUpdateInput, locationUncheckedUpdateInput>
    /**
     * Choose, which location to update.
     */
    where: locationWhereUniqueInput
  }

  /**
   * location updateMany
   */
  export type locationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update locations.
     */
    data: XOR<locationUpdateManyMutationInput, locationUncheckedUpdateManyInput>
    /**
     * Filter which locations to update
     */
    where?: locationWhereInput
    /**
     * Limit how many locations to update.
     */
    limit?: number
  }

  /**
   * location updateManyAndReturn
   */
  export type locationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * The data used to update locations.
     */
    data: XOR<locationUpdateManyMutationInput, locationUncheckedUpdateManyInput>
    /**
     * Filter which locations to update
     */
    where?: locationWhereInput
    /**
     * Limit how many locations to update.
     */
    limit?: number
  }

  /**
   * location upsert
   */
  export type locationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * The filter to search for the location to update in case it exists.
     */
    where: locationWhereUniqueInput
    /**
     * In case the location found by the `where` argument doesn't exist, create a new location with this data.
     */
    create: XOR<locationCreateInput, locationUncheckedCreateInput>
    /**
     * In case the location was found with the provided `where` argument, update it with this data.
     */
    update: XOR<locationUpdateInput, locationUncheckedUpdateInput>
  }

  /**
   * location delete
   */
  export type locationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
    /**
     * Filter which location to delete.
     */
    where: locationWhereUniqueInput
  }

  /**
   * location deleteMany
   */
  export type locationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which locations to delete
     */
    where?: locationWhereInput
    /**
     * Limit how many locations to delete.
     */
    limit?: number
  }

  /**
   * location.incident
   */
  export type location$incidentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the incident
     */
    select?: incidentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the incident
     */
    omit?: incidentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: incidentInclude<ExtArgs> | null
    where?: incidentWhereInput
    orderBy?: incidentOrderByWithRelationInput | incidentOrderByWithRelationInput[]
    cursor?: incidentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IncidentScalarFieldEnum | IncidentScalarFieldEnum[]
  }

  /**
   * location without action
   */
  export type locationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the location
     */
    select?: locationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the location
     */
    omit?: locationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: locationInclude<ExtArgs> | null
  }


  /**
   * Model notification
   */

  export type AggregateNotification = {
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  export type NotificationAvgAggregateOutputType = {
    id: number | null
    sender_id: number | null
    receiver_id: number | null
  }

  export type NotificationSumAggregateOutputType = {
    id: number | null
    sender_id: number | null
    receiver_id: number | null
  }

  export type NotificationMinAggregateOutputType = {
    id: number | null
    sender_id: number | null
    receiver_id: number | null
    message: string | null
    is_read: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type NotificationMaxAggregateOutputType = {
    id: number | null
    sender_id: number | null
    receiver_id: number | null
    message: string | null
    is_read: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type NotificationCountAggregateOutputType = {
    id: number
    sender_id: number
    receiver_id: number
    message: number
    is_read: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type NotificationAvgAggregateInputType = {
    id?: true
    sender_id?: true
    receiver_id?: true
  }

  export type NotificationSumAggregateInputType = {
    id?: true
    sender_id?: true
    receiver_id?: true
  }

  export type NotificationMinAggregateInputType = {
    id?: true
    sender_id?: true
    receiver_id?: true
    message?: true
    is_read?: true
    created_at?: true
    updated_at?: true
  }

  export type NotificationMaxAggregateInputType = {
    id?: true
    sender_id?: true
    receiver_id?: true
    message?: true
    is_read?: true
    created_at?: true
    updated_at?: true
  }

  export type NotificationCountAggregateInputType = {
    id?: true
    sender_id?: true
    receiver_id?: true
    message?: true
    is_read?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type NotificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notification to aggregate.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationMaxAggregateInputType
  }

  export type GetNotificationAggregateType<T extends NotificationAggregateArgs> = {
        [P in keyof T & keyof AggregateNotification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotification[P]>
      : GetScalarType<T[P], AggregateNotification[P]>
  }




  export type notificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationWhereInput
    orderBy?: notificationOrderByWithAggregationInput | notificationOrderByWithAggregationInput[]
    by: NotificationScalarFieldEnum[] | NotificationScalarFieldEnum
    having?: notificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationCountAggregateInputType | true
    _avg?: NotificationAvgAggregateInputType
    _sum?: NotificationSumAggregateInputType
    _min?: NotificationMinAggregateInputType
    _max?: NotificationMaxAggregateInputType
  }

  export type NotificationGroupByOutputType = {
    id: number
    sender_id: number | null
    receiver_id: number | null
    message: string
    is_read: boolean | null
    created_at: Date | null
    updated_at: Date | null
    _count: NotificationCountAggregateOutputType | null
    _avg: NotificationAvgAggregateOutputType | null
    _sum: NotificationSumAggregateOutputType | null
    _min: NotificationMinAggregateOutputType | null
    _max: NotificationMaxAggregateOutputType | null
  }

  type GetNotificationGroupByPayload<T extends notificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationGroupByOutputType[P]>
        }
      >
    >


  export type notificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sender_id?: boolean
    receiver_id?: boolean
    message?: boolean
    is_read?: boolean
    created_at?: boolean
    updated_at?: boolean
    app_user_notification_receiver_idToapp_user?: boolean | notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs>
    app_user_notification_sender_idToapp_user?: boolean | notification$app_user_notification_sender_idToapp_userArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sender_id?: boolean
    receiver_id?: boolean
    message?: boolean
    is_read?: boolean
    created_at?: boolean
    updated_at?: boolean
    app_user_notification_receiver_idToapp_user?: boolean | notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs>
    app_user_notification_sender_idToapp_user?: boolean | notification$app_user_notification_sender_idToapp_userArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sender_id?: boolean
    receiver_id?: boolean
    message?: boolean
    is_read?: boolean
    created_at?: boolean
    updated_at?: boolean
    app_user_notification_receiver_idToapp_user?: boolean | notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs>
    app_user_notification_sender_idToapp_user?: boolean | notification$app_user_notification_sender_idToapp_userArgs<ExtArgs>
  }, ExtArgs["result"]["notification"]>

  export type notificationSelectScalar = {
    id?: boolean
    sender_id?: boolean
    receiver_id?: boolean
    message?: boolean
    is_read?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type notificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sender_id" | "receiver_id" | "message" | "is_read" | "created_at" | "updated_at", ExtArgs["result"]["notification"]>
  export type notificationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    app_user_notification_receiver_idToapp_user?: boolean | notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs>
    app_user_notification_sender_idToapp_user?: boolean | notification$app_user_notification_sender_idToapp_userArgs<ExtArgs>
  }
  export type notificationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    app_user_notification_receiver_idToapp_user?: boolean | notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs>
    app_user_notification_sender_idToapp_user?: boolean | notification$app_user_notification_sender_idToapp_userArgs<ExtArgs>
  }
  export type notificationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    app_user_notification_receiver_idToapp_user?: boolean | notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs>
    app_user_notification_sender_idToapp_user?: boolean | notification$app_user_notification_sender_idToapp_userArgs<ExtArgs>
  }

  export type $notificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notification"
    objects: {
      app_user_notification_receiver_idToapp_user: Prisma.$app_userPayload<ExtArgs> | null
      app_user_notification_sender_idToapp_user: Prisma.$app_userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      sender_id: number | null
      receiver_id: number | null
      message: string
      is_read: boolean | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["notification"]>
    composites: {}
  }

  type notificationGetPayload<S extends boolean | null | undefined | notificationDefaultArgs> = $Result.GetResult<Prisma.$notificationPayload, S>

  type notificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationCountAggregateInputType | true
    }

  export interface notificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notification'], meta: { name: 'notification' } }
    /**
     * Find zero or one Notification that matches the filter.
     * @param {notificationFindUniqueArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationFindUniqueArgs>(args: SelectSubset<T, notificationFindUniqueArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationFindUniqueOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationFindFirstArgs>(args?: SelectSubset<T, notificationFindFirstArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindFirstOrThrowArgs} args - Arguments to find a Notification
     * @example
     * // Get one Notification
     * const notification = await prisma.notification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notification.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationWithIdOnly = await prisma.notification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationFindManyArgs>(args?: SelectSubset<T, notificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notification.
     * @param {notificationCreateArgs} args - Arguments to create a Notification.
     * @example
     * // Create one Notification
     * const Notification = await prisma.notification.create({
     *   data: {
     *     // ... data to create a Notification
     *   }
     * })
     * 
     */
    create<T extends notificationCreateArgs>(args: SelectSubset<T, notificationCreateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {notificationCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationCreateManyArgs>(args?: SelectSubset<T, notificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {notificationCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notification = await prisma.notification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notificationCreateManyAndReturnArgs>(args?: SelectSubset<T, notificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notification.
     * @param {notificationDeleteArgs} args - Arguments to delete one Notification.
     * @example
     * // Delete one Notification
     * const Notification = await prisma.notification.delete({
     *   where: {
     *     // ... filter to delete one Notification
     *   }
     * })
     * 
     */
    delete<T extends notificationDeleteArgs>(args: SelectSubset<T, notificationDeleteArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notification.
     * @param {notificationUpdateArgs} args - Arguments to update one Notification.
     * @example
     * // Update one Notification
     * const notification = await prisma.notification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationUpdateArgs>(args: SelectSubset<T, notificationUpdateArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {notificationDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationDeleteManyArgs>(args?: SelectSubset<T, notificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationUpdateManyArgs>(args: SelectSubset<T, notificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {notificationUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notification = await prisma.notification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationWithIdOnly = await prisma.notification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends notificationUpdateManyAndReturnArgs>(args: SelectSubset<T, notificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notification.
     * @param {notificationUpsertArgs} args - Arguments to update or create a Notification.
     * @example
     * // Update or create a Notification
     * const notification = await prisma.notification.upsert({
     *   create: {
     *     // ... data to create a Notification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notification we want to update
     *   }
     * })
     */
    upsert<T extends notificationUpsertArgs>(args: SelectSubset<T, notificationUpsertArgs<ExtArgs>>): Prisma__notificationClient<$Result.GetResult<Prisma.$notificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notification.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationCountArgs>(
      args?: Subset<T, notificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationAggregateArgs>(args: Subset<T, NotificationAggregateArgs>): Prisma.PrismaPromise<GetNotificationAggregateType<T>>

    /**
     * Group by Notification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationGroupByArgs['orderBy'] }
        : { orderBy?: notificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notification model
   */
  readonly fields: notificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    app_user_notification_receiver_idToapp_user<T extends notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs> = {}>(args?: Subset<T, notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    app_user_notification_sender_idToapp_user<T extends notification$app_user_notification_sender_idToapp_userArgs<ExtArgs> = {}>(args?: Subset<T, notification$app_user_notification_sender_idToapp_userArgs<ExtArgs>>): Prisma__app_userClient<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notification model
   */ 
  interface notificationFieldRefs {
    readonly id: FieldRef<"notification", 'Int'>
    readonly sender_id: FieldRef<"notification", 'Int'>
    readonly receiver_id: FieldRef<"notification", 'Int'>
    readonly message: FieldRef<"notification", 'String'>
    readonly is_read: FieldRef<"notification", 'Boolean'>
    readonly created_at: FieldRef<"notification", 'DateTime'>
    readonly updated_at: FieldRef<"notification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * notification findUnique
   */
  export type notificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findUniqueOrThrow
   */
  export type notificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification findFirst
   */
  export type notificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findFirstOrThrow
   */
  export type notificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notification to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification findMany
   */
  export type notificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationOrderByWithRelationInput | notificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationScalarFieldEnum | NotificationScalarFieldEnum[]
  }

  /**
   * notification create
   */
  export type notificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to create a notification.
     */
    data: XOR<notificationCreateInput, notificationUncheckedCreateInput>
  }

  /**
   * notification createMany
   */
  export type notificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notification createManyAndReturn
   */
  export type notificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data used to create many notifications.
     */
    data: notificationCreateManyInput | notificationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * notification update
   */
  export type notificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The data needed to update a notification.
     */
    data: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
    /**
     * Choose, which notification to update.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification updateMany
   */
  export type notificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notification updateManyAndReturn
   */
  export type notificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * notification upsert
   */
  export type notificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * The filter to search for the notification to update in case it exists.
     */
    where: notificationWhereUniqueInput
    /**
     * In case the notification found by the `where` argument doesn't exist, create a new notification with this data.
     */
    create: XOR<notificationCreateInput, notificationUncheckedCreateInput>
    /**
     * In case the notification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationUpdateInput, notificationUncheckedUpdateInput>
  }

  /**
   * notification delete
   */
  export type notificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
    /**
     * Filter which notification to delete.
     */
    where: notificationWhereUniqueInput
  }

  /**
   * notification deleteMany
   */
  export type notificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationWhereInput
    /**
     * Limit how many notifications to delete.
     */
    limit?: number
  }

  /**
   * notification.app_user_notification_receiver_idToapp_user
   */
  export type notification$app_user_notification_receiver_idToapp_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    where?: app_userWhereInput
  }

  /**
   * notification.app_user_notification_sender_idToapp_user
   */
  export type notification$app_user_notification_sender_idToapp_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    where?: app_userWhereInput
  }

  /**
   * notification without action
   */
  export type notificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notification
     */
    select?: notificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notification
     */
    omit?: notificationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationInclude<ExtArgs> | null
  }


  /**
   * Model user_role
   */

  export type AggregateUser_role = {
    _count: User_roleCountAggregateOutputType | null
    _avg: User_roleAvgAggregateOutputType | null
    _sum: User_roleSumAggregateOutputType | null
    _min: User_roleMinAggregateOutputType | null
    _max: User_roleMaxAggregateOutputType | null
  }

  export type User_roleAvgAggregateOutputType = {
    id: number | null
  }

  export type User_roleSumAggregateOutputType = {
    id: number | null
  }

  export type User_roleMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type User_roleMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type User_roleCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type User_roleAvgAggregateInputType = {
    id?: true
  }

  export type User_roleSumAggregateInputType = {
    id?: true
  }

  export type User_roleMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type User_roleMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type User_roleCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type User_roleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_role to aggregate.
     */
    where?: user_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_roleOrderByWithRelationInput | user_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_roles
    **/
    _count?: true | User_roleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_roleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_roleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_roleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_roleMaxAggregateInputType
  }

  export type GetUser_roleAggregateType<T extends User_roleAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_role]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_role[P]>
      : GetScalarType<T[P], AggregateUser_role[P]>
  }




  export type user_roleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_roleWhereInput
    orderBy?: user_roleOrderByWithAggregationInput | user_roleOrderByWithAggregationInput[]
    by: User_roleScalarFieldEnum[] | User_roleScalarFieldEnum
    having?: user_roleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_roleCountAggregateInputType | true
    _avg?: User_roleAvgAggregateInputType
    _sum?: User_roleSumAggregateInputType
    _min?: User_roleMinAggregateInputType
    _max?: User_roleMaxAggregateInputType
  }

  export type User_roleGroupByOutputType = {
    id: number
    name: string
    _count: User_roleCountAggregateOutputType | null
    _avg: User_roleAvgAggregateOutputType | null
    _sum: User_roleSumAggregateOutputType | null
    _min: User_roleMinAggregateOutputType | null
    _max: User_roleMaxAggregateOutputType | null
  }

  type GetUser_roleGroupByPayload<T extends user_roleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_roleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_roleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_roleGroupByOutputType[P]>
            : GetScalarType<T[P], User_roleGroupByOutputType[P]>
        }
      >
    >


  export type user_roleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    app_user?: boolean | user_role$app_userArgs<ExtArgs>
    _count?: boolean | User_roleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_role"]>

  export type user_roleSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["user_role"]>

  export type user_roleSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["user_role"]>

  export type user_roleSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type user_roleOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["user_role"]>
  export type user_roleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    app_user?: boolean | user_role$app_userArgs<ExtArgs>
    _count?: boolean | User_roleCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type user_roleIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type user_roleIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $user_rolePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_role"
    objects: {
      app_user: Prisma.$app_userPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["user_role"]>
    composites: {}
  }

  type user_roleGetPayload<S extends boolean | null | undefined | user_roleDefaultArgs> = $Result.GetResult<Prisma.$user_rolePayload, S>

  type user_roleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_roleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_roleCountAggregateInputType | true
    }

  export interface user_roleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_role'], meta: { name: 'user_role' } }
    /**
     * Find zero or one User_role that matches the filter.
     * @param {user_roleFindUniqueArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_roleFindUniqueArgs>(args: SelectSubset<T, user_roleFindUniqueArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_role that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_roleFindUniqueOrThrowArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_roleFindUniqueOrThrowArgs>(args: SelectSubset<T, user_roleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_role that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_roleFindFirstArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_roleFindFirstArgs>(args?: SelectSubset<T, user_roleFindFirstArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_role that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_roleFindFirstOrThrowArgs} args - Arguments to find a User_role
     * @example
     * // Get one User_role
     * const user_role = await prisma.user_role.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_roleFindFirstOrThrowArgs>(args?: SelectSubset<T, user_roleFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_roleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_roles
     * const user_roles = await prisma.user_role.findMany()
     * 
     * // Get first 10 User_roles
     * const user_roles = await prisma.user_role.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_roleWithIdOnly = await prisma.user_role.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_roleFindManyArgs>(args?: SelectSubset<T, user_roleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_role.
     * @param {user_roleCreateArgs} args - Arguments to create a User_role.
     * @example
     * // Create one User_role
     * const User_role = await prisma.user_role.create({
     *   data: {
     *     // ... data to create a User_role
     *   }
     * })
     * 
     */
    create<T extends user_roleCreateArgs>(args: SelectSubset<T, user_roleCreateArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_roles.
     * @param {user_roleCreateManyArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_role = await prisma.user_role.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_roleCreateManyArgs>(args?: SelectSubset<T, user_roleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_roles and returns the data saved in the database.
     * @param {user_roleCreateManyAndReturnArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_role = await prisma.user_role.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_roles and only return the `id`
     * const user_roleWithIdOnly = await prisma.user_role.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_roleCreateManyAndReturnArgs>(args?: SelectSubset<T, user_roleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_role.
     * @param {user_roleDeleteArgs} args - Arguments to delete one User_role.
     * @example
     * // Delete one User_role
     * const User_role = await prisma.user_role.delete({
     *   where: {
     *     // ... filter to delete one User_role
     *   }
     * })
     * 
     */
    delete<T extends user_roleDeleteArgs>(args: SelectSubset<T, user_roleDeleteArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_role.
     * @param {user_roleUpdateArgs} args - Arguments to update one User_role.
     * @example
     * // Update one User_role
     * const user_role = await prisma.user_role.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_roleUpdateArgs>(args: SelectSubset<T, user_roleUpdateArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_roles.
     * @param {user_roleDeleteManyArgs} args - Arguments to filter User_roles to delete.
     * @example
     * // Delete a few User_roles
     * const { count } = await prisma.user_role.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_roleDeleteManyArgs>(args?: SelectSubset<T, user_roleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_roleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_roles
     * const user_role = await prisma.user_role.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_roleUpdateManyArgs>(args: SelectSubset<T, user_roleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles and returns the data updated in the database.
     * @param {user_roleUpdateManyAndReturnArgs} args - Arguments to update many User_roles.
     * @example
     * // Update many User_roles
     * const user_role = await prisma.user_role.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_roles and only return the `id`
     * const user_roleWithIdOnly = await prisma.user_role.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_roleUpdateManyAndReturnArgs>(args: SelectSubset<T, user_roleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_role.
     * @param {user_roleUpsertArgs} args - Arguments to update or create a User_role.
     * @example
     * // Update or create a User_role
     * const user_role = await prisma.user_role.upsert({
     *   create: {
     *     // ... data to create a User_role
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_role we want to update
     *   }
     * })
     */
    upsert<T extends user_roleUpsertArgs>(args: SelectSubset<T, user_roleUpsertArgs<ExtArgs>>): Prisma__user_roleClient<$Result.GetResult<Prisma.$user_rolePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_roleCountArgs} args - Arguments to filter User_roles to count.
     * @example
     * // Count the number of User_roles
     * const count = await prisma.user_role.count({
     *   where: {
     *     // ... the filter for the User_roles we want to count
     *   }
     * })
    **/
    count<T extends user_roleCountArgs>(
      args?: Subset<T, user_roleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_roleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_roleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_roleAggregateArgs>(args: Subset<T, User_roleAggregateArgs>): Prisma.PrismaPromise<GetUser_roleAggregateType<T>>

    /**
     * Group by User_role.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_roleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_roleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_roleGroupByArgs['orderBy'] }
        : { orderBy?: user_roleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_roleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_roleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_role model
   */
  readonly fields: user_roleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_role.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_roleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    app_user<T extends user_role$app_userArgs<ExtArgs> = {}>(args?: Subset<T, user_role$app_userArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$app_userPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_role model
   */ 
  interface user_roleFieldRefs {
    readonly id: FieldRef<"user_role", 'Int'>
    readonly name: FieldRef<"user_role", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_role findUnique
   */
  export type user_roleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * Filter, which user_role to fetch.
     */
    where: user_roleWhereUniqueInput
  }

  /**
   * user_role findUniqueOrThrow
   */
  export type user_roleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * Filter, which user_role to fetch.
     */
    where: user_roleWhereUniqueInput
  }

  /**
   * user_role findFirst
   */
  export type user_roleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * Filter, which user_role to fetch.
     */
    where?: user_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_roleOrderByWithRelationInput | user_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * user_role findFirstOrThrow
   */
  export type user_roleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * Filter, which user_role to fetch.
     */
    where?: user_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_roleOrderByWithRelationInput | user_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * user_role findMany
   */
  export type user_roleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_roleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_roleOrderByWithRelationInput | user_roleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_roles.
     */
    cursor?: user_roleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    distinct?: User_roleScalarFieldEnum | User_roleScalarFieldEnum[]
  }

  /**
   * user_role create
   */
  export type user_roleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * The data needed to create a user_role.
     */
    data: XOR<user_roleCreateInput, user_roleUncheckedCreateInput>
  }

  /**
   * user_role createMany
   */
  export type user_roleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_roles.
     */
    data: user_roleCreateManyInput | user_roleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_role createManyAndReturn
   */
  export type user_roleCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * The data used to create many user_roles.
     */
    data: user_roleCreateManyInput | user_roleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_role update
   */
  export type user_roleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * The data needed to update a user_role.
     */
    data: XOR<user_roleUpdateInput, user_roleUncheckedUpdateInput>
    /**
     * Choose, which user_role to update.
     */
    where: user_roleWhereUniqueInput
  }

  /**
   * user_role updateMany
   */
  export type user_roleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_roles.
     */
    data: XOR<user_roleUpdateManyMutationInput, user_roleUncheckedUpdateManyInput>
    /**
     * Filter which user_roles to update
     */
    where?: user_roleWhereInput
    /**
     * Limit how many user_roles to update.
     */
    limit?: number
  }

  /**
   * user_role updateManyAndReturn
   */
  export type user_roleUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * The data used to update user_roles.
     */
    data: XOR<user_roleUpdateManyMutationInput, user_roleUncheckedUpdateManyInput>
    /**
     * Filter which user_roles to update
     */
    where?: user_roleWhereInput
    /**
     * Limit how many user_roles to update.
     */
    limit?: number
  }

  /**
   * user_role upsert
   */
  export type user_roleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * The filter to search for the user_role to update in case it exists.
     */
    where: user_roleWhereUniqueInput
    /**
     * In case the user_role found by the `where` argument doesn't exist, create a new user_role with this data.
     */
    create: XOR<user_roleCreateInput, user_roleUncheckedCreateInput>
    /**
     * In case the user_role was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_roleUpdateInput, user_roleUncheckedUpdateInput>
  }

  /**
   * user_role delete
   */
  export type user_roleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
    /**
     * Filter which user_role to delete.
     */
    where: user_roleWhereUniqueInput
  }

  /**
   * user_role deleteMany
   */
  export type user_roleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_roles to delete
     */
    where?: user_roleWhereInput
    /**
     * Limit how many user_roles to delete.
     */
    limit?: number
  }

  /**
   * user_role.app_user
   */
  export type user_role$app_userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the app_user
     */
    select?: app_userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the app_user
     */
    omit?: app_userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: app_userInclude<ExtArgs> | null
    where?: app_userWhereInput
    orderBy?: app_userOrderByWithRelationInput | app_userOrderByWithRelationInput[]
    cursor?: app_userWhereUniqueInput
    take?: number
    skip?: number
    distinct?: App_userScalarFieldEnum | App_userScalarFieldEnum[]
  }

  /**
   * user_role without action
   */
  export type user_roleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_role
     */
    select?: user_roleSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_role
     */
    omit?: user_roleOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_roleInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const App_userScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    google_id: 'google_id',
    profile_picture: 'profile_picture',
    is_active: 'is_active',
    role_id: 'role_id',
    password: 'password',
    email_validated: 'email_validated'
  };

  export type App_userScalarFieldEnum = (typeof App_userScalarFieldEnum)[keyof typeof App_userScalarFieldEnum]


  export const IncidentScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    image_url: 'image_url',
    priority: 'priority',
    report_date: 'report_date',
    close_date: 'close_date',
    status_id: 'status_id',
    user_id: 'user_id',
    type_id: 'type_id',
    location_id: 'location_id'
  };

  export type IncidentScalarFieldEnum = (typeof IncidentScalarFieldEnum)[keyof typeof IncidentScalarFieldEnum]


  export const Incident_historyScalarFieldEnum: {
    id: 'id',
    incident_id: 'incident_id',
    previous_status: 'previous_status',
    new_status: 'new_status',
    change_date: 'change_date',
    comment: 'comment',
    modified_by: 'modified_by'
  };

  export type Incident_historyScalarFieldEnum = (typeof Incident_historyScalarFieldEnum)[keyof typeof Incident_historyScalarFieldEnum]


  export const Incident_statusScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type Incident_statusScalarFieldEnum = (typeof Incident_statusScalarFieldEnum)[keyof typeof Incident_statusScalarFieldEnum]


  export const Incident_typeScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type Incident_typeScalarFieldEnum = (typeof Incident_typeScalarFieldEnum)[keyof typeof Incident_typeScalarFieldEnum]


  export const LocationScalarFieldEnum: {
    id: 'id',
    latitude: 'latitude',
    longitude: 'longitude',
    altitude: 'altitude',
    reference: 'reference'
  };

  export type LocationScalarFieldEnum = (typeof LocationScalarFieldEnum)[keyof typeof LocationScalarFieldEnum]


  export const NotificationScalarFieldEnum: {
    id: 'id',
    sender_id: 'sender_id',
    receiver_id: 'receiver_id',
    message: 'message',
    is_read: 'is_read',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type NotificationScalarFieldEnum = (typeof NotificationScalarFieldEnum)[keyof typeof NotificationScalarFieldEnum]


  export const User_roleScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type User_roleScalarFieldEnum = (typeof User_roleScalarFieldEnum)[keyof typeof User_roleScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'priority_enum'
   */
  export type Enumpriority_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'priority_enum'>
    


  /**
   * Reference to a field of type 'priority_enum[]'
   */
  export type ListEnumpriority_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'priority_enum[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'incident_status_enum'
   */
  export type Enumincident_status_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'incident_status_enum'>
    


  /**
   * Reference to a field of type 'incident_status_enum[]'
   */
  export type ListEnumincident_status_enumFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'incident_status_enum[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type app_userWhereInput = {
    AND?: app_userWhereInput | app_userWhereInput[]
    OR?: app_userWhereInput[]
    NOT?: app_userWhereInput | app_userWhereInput[]
    id?: IntFilter<"app_user"> | number
    first_name?: StringNullableFilter<"app_user"> | string | null
    last_name?: StringNullableFilter<"app_user"> | string | null
    email?: StringFilter<"app_user"> | string
    google_id?: StringNullableFilter<"app_user"> | string | null
    profile_picture?: StringNullableFilter<"app_user"> | string | null
    is_active?: BoolNullableFilter<"app_user"> | boolean | null
    role_id?: IntNullableFilter<"app_user"> | number | null
    password?: StringNullableFilter<"app_user"> | string | null
    email_validated?: BoolNullableFilter<"app_user"> | boolean | null
    user_role?: XOR<User_roleNullableScalarRelationFilter, user_roleWhereInput> | null
    incident?: IncidentListRelationFilter
    incident_history?: Incident_historyListRelationFilter
    notification_notification_receiver_idToapp_user?: NotificationListRelationFilter
    notification_notification_sender_idToapp_user?: NotificationListRelationFilter
  }

  export type app_userOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrder
    google_id?: SortOrderInput | SortOrder
    profile_picture?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    role_id?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    email_validated?: SortOrderInput | SortOrder
    user_role?: user_roleOrderByWithRelationInput
    incident?: incidentOrderByRelationAggregateInput
    incident_history?: incident_historyOrderByRelationAggregateInput
    notification_notification_receiver_idToapp_user?: notificationOrderByRelationAggregateInput
    notification_notification_sender_idToapp_user?: notificationOrderByRelationAggregateInput
  }

  export type app_userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: app_userWhereInput | app_userWhereInput[]
    OR?: app_userWhereInput[]
    NOT?: app_userWhereInput | app_userWhereInput[]
    first_name?: StringNullableFilter<"app_user"> | string | null
    last_name?: StringNullableFilter<"app_user"> | string | null
    google_id?: StringNullableFilter<"app_user"> | string | null
    profile_picture?: StringNullableFilter<"app_user"> | string | null
    is_active?: BoolNullableFilter<"app_user"> | boolean | null
    role_id?: IntNullableFilter<"app_user"> | number | null
    password?: StringNullableFilter<"app_user"> | string | null
    email_validated?: BoolNullableFilter<"app_user"> | boolean | null
    user_role?: XOR<User_roleNullableScalarRelationFilter, user_roleWhereInput> | null
    incident?: IncidentListRelationFilter
    incident_history?: Incident_historyListRelationFilter
    notification_notification_receiver_idToapp_user?: NotificationListRelationFilter
    notification_notification_sender_idToapp_user?: NotificationListRelationFilter
  }, "id" | "email">

  export type app_userOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    email?: SortOrder
    google_id?: SortOrderInput | SortOrder
    profile_picture?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    role_id?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    email_validated?: SortOrderInput | SortOrder
    _count?: app_userCountOrderByAggregateInput
    _avg?: app_userAvgOrderByAggregateInput
    _max?: app_userMaxOrderByAggregateInput
    _min?: app_userMinOrderByAggregateInput
    _sum?: app_userSumOrderByAggregateInput
  }

  export type app_userScalarWhereWithAggregatesInput = {
    AND?: app_userScalarWhereWithAggregatesInput | app_userScalarWhereWithAggregatesInput[]
    OR?: app_userScalarWhereWithAggregatesInput[]
    NOT?: app_userScalarWhereWithAggregatesInput | app_userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"app_user"> | number
    first_name?: StringNullableWithAggregatesFilter<"app_user"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"app_user"> | string | null
    email?: StringWithAggregatesFilter<"app_user"> | string
    google_id?: StringNullableWithAggregatesFilter<"app_user"> | string | null
    profile_picture?: StringNullableWithAggregatesFilter<"app_user"> | string | null
    is_active?: BoolNullableWithAggregatesFilter<"app_user"> | boolean | null
    role_id?: IntNullableWithAggregatesFilter<"app_user"> | number | null
    password?: StringNullableWithAggregatesFilter<"app_user"> | string | null
    email_validated?: BoolNullableWithAggregatesFilter<"app_user"> | boolean | null
  }

  export type incidentWhereInput = {
    AND?: incidentWhereInput | incidentWhereInput[]
    OR?: incidentWhereInput[]
    NOT?: incidentWhereInput | incidentWhereInput[]
    id?: IntFilter<"incident"> | number
    title?: StringNullableFilter<"incident"> | string | null
    description?: StringNullableFilter<"incident"> | string | null
    image_url?: StringNullableFilter<"incident"> | string | null
    priority?: Enumpriority_enumNullableFilter<"incident"> | $Enums.priority_enum | null
    report_date?: DateTimeNullableFilter<"incident"> | Date | string | null
    close_date?: DateTimeNullableFilter<"incident"> | Date | string | null
    status_id?: IntNullableFilter<"incident"> | number | null
    user_id?: IntNullableFilter<"incident"> | number | null
    type_id?: IntNullableFilter<"incident"> | number | null
    location_id?: IntNullableFilter<"incident"> | number | null
    location?: XOR<LocationNullableScalarRelationFilter, locationWhereInput> | null
    incident_status?: XOR<Incident_statusNullableScalarRelationFilter, incident_statusWhereInput> | null
    incident_type?: XOR<Incident_typeNullableScalarRelationFilter, incident_typeWhereInput> | null
    app_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
    incident_history?: Incident_historyListRelationFilter
  }

  export type incidentOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    report_date?: SortOrderInput | SortOrder
    close_date?: SortOrderInput | SortOrder
    status_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    type_id?: SortOrderInput | SortOrder
    location_id?: SortOrderInput | SortOrder
    location?: locationOrderByWithRelationInput
    incident_status?: incident_statusOrderByWithRelationInput
    incident_type?: incident_typeOrderByWithRelationInput
    app_user?: app_userOrderByWithRelationInput
    incident_history?: incident_historyOrderByRelationAggregateInput
  }

  export type incidentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: incidentWhereInput | incidentWhereInput[]
    OR?: incidentWhereInput[]
    NOT?: incidentWhereInput | incidentWhereInput[]
    title?: StringNullableFilter<"incident"> | string | null
    description?: StringNullableFilter<"incident"> | string | null
    image_url?: StringNullableFilter<"incident"> | string | null
    priority?: Enumpriority_enumNullableFilter<"incident"> | $Enums.priority_enum | null
    report_date?: DateTimeNullableFilter<"incident"> | Date | string | null
    close_date?: DateTimeNullableFilter<"incident"> | Date | string | null
    status_id?: IntNullableFilter<"incident"> | number | null
    user_id?: IntNullableFilter<"incident"> | number | null
    type_id?: IntNullableFilter<"incident"> | number | null
    location_id?: IntNullableFilter<"incident"> | number | null
    location?: XOR<LocationNullableScalarRelationFilter, locationWhereInput> | null
    incident_status?: XOR<Incident_statusNullableScalarRelationFilter, incident_statusWhereInput> | null
    incident_type?: XOR<Incident_typeNullableScalarRelationFilter, incident_typeWhereInput> | null
    app_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
    incident_history?: Incident_historyListRelationFilter
  }, "id">

  export type incidentOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    priority?: SortOrderInput | SortOrder
    report_date?: SortOrderInput | SortOrder
    close_date?: SortOrderInput | SortOrder
    status_id?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    type_id?: SortOrderInput | SortOrder
    location_id?: SortOrderInput | SortOrder
    _count?: incidentCountOrderByAggregateInput
    _avg?: incidentAvgOrderByAggregateInput
    _max?: incidentMaxOrderByAggregateInput
    _min?: incidentMinOrderByAggregateInput
    _sum?: incidentSumOrderByAggregateInput
  }

  export type incidentScalarWhereWithAggregatesInput = {
    AND?: incidentScalarWhereWithAggregatesInput | incidentScalarWhereWithAggregatesInput[]
    OR?: incidentScalarWhereWithAggregatesInput[]
    NOT?: incidentScalarWhereWithAggregatesInput | incidentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"incident"> | number
    title?: StringNullableWithAggregatesFilter<"incident"> | string | null
    description?: StringNullableWithAggregatesFilter<"incident"> | string | null
    image_url?: StringNullableWithAggregatesFilter<"incident"> | string | null
    priority?: Enumpriority_enumNullableWithAggregatesFilter<"incident"> | $Enums.priority_enum | null
    report_date?: DateTimeNullableWithAggregatesFilter<"incident"> | Date | string | null
    close_date?: DateTimeNullableWithAggregatesFilter<"incident"> | Date | string | null
    status_id?: IntNullableWithAggregatesFilter<"incident"> | number | null
    user_id?: IntNullableWithAggregatesFilter<"incident"> | number | null
    type_id?: IntNullableWithAggregatesFilter<"incident"> | number | null
    location_id?: IntNullableWithAggregatesFilter<"incident"> | number | null
  }

  export type incident_historyWhereInput = {
    AND?: incident_historyWhereInput | incident_historyWhereInput[]
    OR?: incident_historyWhereInput[]
    NOT?: incident_historyWhereInput | incident_historyWhereInput[]
    id?: IntFilter<"incident_history"> | number
    incident_id?: IntNullableFilter<"incident_history"> | number | null
    previous_status?: StringNullableFilter<"incident_history"> | string | null
    new_status?: StringNullableFilter<"incident_history"> | string | null
    change_date?: DateTimeNullableFilter<"incident_history"> | Date | string | null
    comment?: StringNullableFilter<"incident_history"> | string | null
    modified_by?: IntNullableFilter<"incident_history"> | number | null
    incident?: XOR<IncidentNullableScalarRelationFilter, incidentWhereInput> | null
    app_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
  }

  export type incident_historyOrderByWithRelationInput = {
    id?: SortOrder
    incident_id?: SortOrderInput | SortOrder
    previous_status?: SortOrderInput | SortOrder
    new_status?: SortOrderInput | SortOrder
    change_date?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    modified_by?: SortOrderInput | SortOrder
    incident?: incidentOrderByWithRelationInput
    app_user?: app_userOrderByWithRelationInput
  }

  export type incident_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: incident_historyWhereInput | incident_historyWhereInput[]
    OR?: incident_historyWhereInput[]
    NOT?: incident_historyWhereInput | incident_historyWhereInput[]
    incident_id?: IntNullableFilter<"incident_history"> | number | null
    previous_status?: StringNullableFilter<"incident_history"> | string | null
    new_status?: StringNullableFilter<"incident_history"> | string | null
    change_date?: DateTimeNullableFilter<"incident_history"> | Date | string | null
    comment?: StringNullableFilter<"incident_history"> | string | null
    modified_by?: IntNullableFilter<"incident_history"> | number | null
    incident?: XOR<IncidentNullableScalarRelationFilter, incidentWhereInput> | null
    app_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
  }, "id">

  export type incident_historyOrderByWithAggregationInput = {
    id?: SortOrder
    incident_id?: SortOrderInput | SortOrder
    previous_status?: SortOrderInput | SortOrder
    new_status?: SortOrderInput | SortOrder
    change_date?: SortOrderInput | SortOrder
    comment?: SortOrderInput | SortOrder
    modified_by?: SortOrderInput | SortOrder
    _count?: incident_historyCountOrderByAggregateInput
    _avg?: incident_historyAvgOrderByAggregateInput
    _max?: incident_historyMaxOrderByAggregateInput
    _min?: incident_historyMinOrderByAggregateInput
    _sum?: incident_historySumOrderByAggregateInput
  }

  export type incident_historyScalarWhereWithAggregatesInput = {
    AND?: incident_historyScalarWhereWithAggregatesInput | incident_historyScalarWhereWithAggregatesInput[]
    OR?: incident_historyScalarWhereWithAggregatesInput[]
    NOT?: incident_historyScalarWhereWithAggregatesInput | incident_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"incident_history"> | number
    incident_id?: IntNullableWithAggregatesFilter<"incident_history"> | number | null
    previous_status?: StringNullableWithAggregatesFilter<"incident_history"> | string | null
    new_status?: StringNullableWithAggregatesFilter<"incident_history"> | string | null
    change_date?: DateTimeNullableWithAggregatesFilter<"incident_history"> | Date | string | null
    comment?: StringNullableWithAggregatesFilter<"incident_history"> | string | null
    modified_by?: IntNullableWithAggregatesFilter<"incident_history"> | number | null
  }

  export type incident_statusWhereInput = {
    AND?: incident_statusWhereInput | incident_statusWhereInput[]
    OR?: incident_statusWhereInput[]
    NOT?: incident_statusWhereInput | incident_statusWhereInput[]
    id?: IntFilter<"incident_status"> | number
    name?: Enumincident_status_enumFilter<"incident_status"> | $Enums.incident_status_enum
    incident?: IncidentListRelationFilter
  }

  export type incident_statusOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    incident?: incidentOrderByRelationAggregateInput
  }

  export type incident_statusWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: incident_statusWhereInput | incident_statusWhereInput[]
    OR?: incident_statusWhereInput[]
    NOT?: incident_statusWhereInput | incident_statusWhereInput[]
    name?: Enumincident_status_enumFilter<"incident_status"> | $Enums.incident_status_enum
    incident?: IncidentListRelationFilter
  }, "id">

  export type incident_statusOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: incident_statusCountOrderByAggregateInput
    _avg?: incident_statusAvgOrderByAggregateInput
    _max?: incident_statusMaxOrderByAggregateInput
    _min?: incident_statusMinOrderByAggregateInput
    _sum?: incident_statusSumOrderByAggregateInput
  }

  export type incident_statusScalarWhereWithAggregatesInput = {
    AND?: incident_statusScalarWhereWithAggregatesInput | incident_statusScalarWhereWithAggregatesInput[]
    OR?: incident_statusScalarWhereWithAggregatesInput[]
    NOT?: incident_statusScalarWhereWithAggregatesInput | incident_statusScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"incident_status"> | number
    name?: Enumincident_status_enumWithAggregatesFilter<"incident_status"> | $Enums.incident_status_enum
  }

  export type incident_typeWhereInput = {
    AND?: incident_typeWhereInput | incident_typeWhereInput[]
    OR?: incident_typeWhereInput[]
    NOT?: incident_typeWhereInput | incident_typeWhereInput[]
    id?: IntFilter<"incident_type"> | number
    name?: StringFilter<"incident_type"> | string
    incident?: IncidentListRelationFilter
  }

  export type incident_typeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    incident?: incidentOrderByRelationAggregateInput
  }

  export type incident_typeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: incident_typeWhereInput | incident_typeWhereInput[]
    OR?: incident_typeWhereInput[]
    NOT?: incident_typeWhereInput | incident_typeWhereInput[]
    name?: StringFilter<"incident_type"> | string
    incident?: IncidentListRelationFilter
  }, "id">

  export type incident_typeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: incident_typeCountOrderByAggregateInput
    _avg?: incident_typeAvgOrderByAggregateInput
    _max?: incident_typeMaxOrderByAggregateInput
    _min?: incident_typeMinOrderByAggregateInput
    _sum?: incident_typeSumOrderByAggregateInput
  }

  export type incident_typeScalarWhereWithAggregatesInput = {
    AND?: incident_typeScalarWhereWithAggregatesInput | incident_typeScalarWhereWithAggregatesInput[]
    OR?: incident_typeScalarWhereWithAggregatesInput[]
    NOT?: incident_typeScalarWhereWithAggregatesInput | incident_typeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"incident_type"> | number
    name?: StringWithAggregatesFilter<"incident_type"> | string
  }

  export type locationWhereInput = {
    AND?: locationWhereInput | locationWhereInput[]
    OR?: locationWhereInput[]
    NOT?: locationWhereInput | locationWhereInput[]
    id?: IntFilter<"location"> | number
    latitude?: DecimalNullableFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    altitude?: DecimalNullableFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    reference?: StringNullableFilter<"location"> | string | null
    incident?: IncidentListRelationFilter
  }

  export type locationOrderByWithRelationInput = {
    id?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    altitude?: SortOrderInput | SortOrder
    reference?: SortOrderInput | SortOrder
    incident?: incidentOrderByRelationAggregateInput
  }

  export type locationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: locationWhereInput | locationWhereInput[]
    OR?: locationWhereInput[]
    NOT?: locationWhereInput | locationWhereInput[]
    latitude?: DecimalNullableFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    altitude?: DecimalNullableFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    reference?: StringNullableFilter<"location"> | string | null
    incident?: IncidentListRelationFilter
  }, "id">

  export type locationOrderByWithAggregationInput = {
    id?: SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    altitude?: SortOrderInput | SortOrder
    reference?: SortOrderInput | SortOrder
    _count?: locationCountOrderByAggregateInput
    _avg?: locationAvgOrderByAggregateInput
    _max?: locationMaxOrderByAggregateInput
    _min?: locationMinOrderByAggregateInput
    _sum?: locationSumOrderByAggregateInput
  }

  export type locationScalarWhereWithAggregatesInput = {
    AND?: locationScalarWhereWithAggregatesInput | locationScalarWhereWithAggregatesInput[]
    OR?: locationScalarWhereWithAggregatesInput[]
    NOT?: locationScalarWhereWithAggregatesInput | locationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"location"> | number
    latitude?: DecimalNullableWithAggregatesFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    longitude?: DecimalNullableWithAggregatesFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    altitude?: DecimalNullableWithAggregatesFilter<"location"> | Decimal | DecimalJsLike | number | string | null
    reference?: StringNullableWithAggregatesFilter<"location"> | string | null
  }

  export type notificationWhereInput = {
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    id?: IntFilter<"notification"> | number
    sender_id?: IntNullableFilter<"notification"> | number | null
    receiver_id?: IntNullableFilter<"notification"> | number | null
    message?: StringFilter<"notification"> | string
    is_read?: BoolNullableFilter<"notification"> | boolean | null
    created_at?: DateTimeNullableFilter<"notification"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"notification"> | Date | string | null
    app_user_notification_receiver_idToapp_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
    app_user_notification_sender_idToapp_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
  }

  export type notificationOrderByWithRelationInput = {
    id?: SortOrder
    sender_id?: SortOrderInput | SortOrder
    receiver_id?: SortOrderInput | SortOrder
    message?: SortOrder
    is_read?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    app_user_notification_receiver_idToapp_user?: app_userOrderByWithRelationInput
    app_user_notification_sender_idToapp_user?: app_userOrderByWithRelationInput
  }

  export type notificationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: notificationWhereInput | notificationWhereInput[]
    OR?: notificationWhereInput[]
    NOT?: notificationWhereInput | notificationWhereInput[]
    sender_id?: IntNullableFilter<"notification"> | number | null
    receiver_id?: IntNullableFilter<"notification"> | number | null
    message?: StringFilter<"notification"> | string
    is_read?: BoolNullableFilter<"notification"> | boolean | null
    created_at?: DateTimeNullableFilter<"notification"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"notification"> | Date | string | null
    app_user_notification_receiver_idToapp_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
    app_user_notification_sender_idToapp_user?: XOR<App_userNullableScalarRelationFilter, app_userWhereInput> | null
  }, "id">

  export type notificationOrderByWithAggregationInput = {
    id?: SortOrder
    sender_id?: SortOrderInput | SortOrder
    receiver_id?: SortOrderInput | SortOrder
    message?: SortOrder
    is_read?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: notificationCountOrderByAggregateInput
    _avg?: notificationAvgOrderByAggregateInput
    _max?: notificationMaxOrderByAggregateInput
    _min?: notificationMinOrderByAggregateInput
    _sum?: notificationSumOrderByAggregateInput
  }

  export type notificationScalarWhereWithAggregatesInput = {
    AND?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    OR?: notificationScalarWhereWithAggregatesInput[]
    NOT?: notificationScalarWhereWithAggregatesInput | notificationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"notification"> | number
    sender_id?: IntNullableWithAggregatesFilter<"notification"> | number | null
    receiver_id?: IntNullableWithAggregatesFilter<"notification"> | number | null
    message?: StringWithAggregatesFilter<"notification"> | string
    is_read?: BoolNullableWithAggregatesFilter<"notification"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"notification"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"notification"> | Date | string | null
  }

  export type user_roleWhereInput = {
    AND?: user_roleWhereInput | user_roleWhereInput[]
    OR?: user_roleWhereInput[]
    NOT?: user_roleWhereInput | user_roleWhereInput[]
    id?: IntFilter<"user_role"> | number
    name?: StringFilter<"user_role"> | string
    app_user?: App_userListRelationFilter
  }

  export type user_roleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    app_user?: app_userOrderByRelationAggregateInput
  }

  export type user_roleWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: user_roleWhereInput | user_roleWhereInput[]
    OR?: user_roleWhereInput[]
    NOT?: user_roleWhereInput | user_roleWhereInput[]
    app_user?: App_userListRelationFilter
  }, "id" | "name">

  export type user_roleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: user_roleCountOrderByAggregateInput
    _avg?: user_roleAvgOrderByAggregateInput
    _max?: user_roleMaxOrderByAggregateInput
    _min?: user_roleMinOrderByAggregateInput
    _sum?: user_roleSumOrderByAggregateInput
  }

  export type user_roleScalarWhereWithAggregatesInput = {
    AND?: user_roleScalarWhereWithAggregatesInput | user_roleScalarWhereWithAggregatesInput[]
    OR?: user_roleScalarWhereWithAggregatesInput[]
    NOT?: user_roleScalarWhereWithAggregatesInput | user_roleScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_role"> | number
    name?: StringWithAggregatesFilter<"user_role"> | string
  }

  export type app_userCreateInput = {
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
    user_role?: user_roleCreateNestedOneWithoutApp_userInput
    incident?: incidentCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userUncheckedCreateInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    role_id?: number | null
    password?: string | null
    email_validated?: boolean | null
    incident?: incidentUncheckedCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userUpdateInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_role?: user_roleUpdateOneWithoutApp_userNestedInput
    incident?: incidentUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incident?: incidentUncheckedUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUncheckedUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userCreateManyInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    role_id?: number | null
    password?: string | null
    email_validated?: boolean | null
  }

  export type app_userUpdateManyMutationInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type app_userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type incidentCreateInput = {
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    location?: locationCreateNestedOneWithoutIncidentInput
    incident_status?: incident_statusCreateNestedOneWithoutIncidentInput
    incident_type?: incident_typeCreateNestedOneWithoutIncidentInput
    app_user?: app_userCreateNestedOneWithoutIncidentInput
    incident_history?: incident_historyCreateNestedManyWithoutIncidentInput
  }

  export type incidentUncheckedCreateInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    user_id?: number | null
    type_id?: number | null
    location_id?: number | null
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutIncidentInput
  }

  export type incidentUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: locationUpdateOneWithoutIncidentNestedInput
    incident_status?: incident_statusUpdateOneWithoutIncidentNestedInput
    incident_type?: incident_typeUpdateOneWithoutIncidentNestedInput
    app_user?: app_userUpdateOneWithoutIncidentNestedInput
    incident_history?: incident_historyUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_history?: incident_historyUncheckedUpdateManyWithoutIncidentNestedInput
  }

  export type incidentCreateManyInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    user_id?: number | null
    type_id?: number | null
    location_id?: number | null
  }

  export type incidentUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type incidentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incident_historyCreateInput = {
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
    incident?: incidentCreateNestedOneWithoutIncident_historyInput
    app_user?: app_userCreateNestedOneWithoutIncident_historyInput
  }

  export type incident_historyUncheckedCreateInput = {
    id?: number
    incident_id?: number | null
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
    modified_by?: number | null
  }

  export type incident_historyUpdateInput = {
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    incident?: incidentUpdateOneWithoutIncident_historyNestedInput
    app_user?: app_userUpdateOneWithoutIncident_historyNestedInput
  }

  export type incident_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    incident_id?: NullableIntFieldUpdateOperationsInput | number | null
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    modified_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incident_historyCreateManyInput = {
    id?: number
    incident_id?: number | null
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
    modified_by?: number | null
  }

  export type incident_historyUpdateManyMutationInput = {
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type incident_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    incident_id?: NullableIntFieldUpdateOperationsInput | number | null
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    modified_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incident_statusCreateInput = {
    name: $Enums.incident_status_enum
    incident?: incidentCreateNestedManyWithoutIncident_statusInput
  }

  export type incident_statusUncheckedCreateInput = {
    id?: number
    name: $Enums.incident_status_enum
    incident?: incidentUncheckedCreateNestedManyWithoutIncident_statusInput
  }

  export type incident_statusUpdateInput = {
    name?: Enumincident_status_enumFieldUpdateOperationsInput | $Enums.incident_status_enum
    incident?: incidentUpdateManyWithoutIncident_statusNestedInput
  }

  export type incident_statusUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: Enumincident_status_enumFieldUpdateOperationsInput | $Enums.incident_status_enum
    incident?: incidentUncheckedUpdateManyWithoutIncident_statusNestedInput
  }

  export type incident_statusCreateManyInput = {
    id?: number
    name: $Enums.incident_status_enum
  }

  export type incident_statusUpdateManyMutationInput = {
    name?: Enumincident_status_enumFieldUpdateOperationsInput | $Enums.incident_status_enum
  }

  export type incident_statusUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: Enumincident_status_enumFieldUpdateOperationsInput | $Enums.incident_status_enum
  }

  export type incident_typeCreateInput = {
    name: string
    incident?: incidentCreateNestedManyWithoutIncident_typeInput
  }

  export type incident_typeUncheckedCreateInput = {
    id?: number
    name: string
    incident?: incidentUncheckedCreateNestedManyWithoutIncident_typeInput
  }

  export type incident_typeUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    incident?: incidentUpdateManyWithoutIncident_typeNestedInput
  }

  export type incident_typeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    incident?: incidentUncheckedUpdateManyWithoutIncident_typeNestedInput
  }

  export type incident_typeCreateManyInput = {
    id?: number
    name: string
  }

  export type incident_typeUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type incident_typeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type locationCreateInput = {
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    reference?: string | null
    incident?: incidentCreateNestedManyWithoutLocationInput
  }

  export type locationUncheckedCreateInput = {
    id?: number
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    reference?: string | null
    incident?: incidentUncheckedCreateNestedManyWithoutLocationInput
  }

  export type locationUpdateInput = {
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    incident?: incidentUpdateManyWithoutLocationNestedInput
  }

  export type locationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
    incident?: incidentUncheckedUpdateManyWithoutLocationNestedInput
  }

  export type locationCreateManyInput = {
    id?: number
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    reference?: string | null
  }

  export type locationUpdateManyMutationInput = {
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type locationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationCreateInput = {
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    app_user_notification_receiver_idToapp_user?: app_userCreateNestedOneWithoutNotification_notification_receiver_idToapp_userInput
    app_user_notification_sender_idToapp_user?: app_userCreateNestedOneWithoutNotification_notification_sender_idToapp_userInput
  }

  export type notificationUncheckedCreateInput = {
    id?: number
    sender_id?: number | null
    receiver_id?: number | null
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type notificationUpdateInput = {
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    app_user_notification_receiver_idToapp_user?: app_userUpdateOneWithoutNotification_notification_receiver_idToapp_userNestedInput
    app_user_notification_sender_idToapp_user?: app_userUpdateOneWithoutNotification_notification_sender_idToapp_userNestedInput
  }

  export type notificationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationCreateManyInput = {
    id?: number
    sender_id?: number | null
    receiver_id?: number | null
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type notificationUpdateManyMutationInput = {
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_roleCreateInput = {
    name: string
    app_user?: app_userCreateNestedManyWithoutUser_roleInput
  }

  export type user_roleUncheckedCreateInput = {
    id?: number
    name: string
    app_user?: app_userUncheckedCreateNestedManyWithoutUser_roleInput
  }

  export type user_roleUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    app_user?: app_userUpdateManyWithoutUser_roleNestedInput
  }

  export type user_roleUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    app_user?: app_userUncheckedUpdateManyWithoutUser_roleNestedInput
  }

  export type user_roleCreateManyInput = {
    id?: number
    name: string
  }

  export type user_roleUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type user_roleUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type User_roleNullableScalarRelationFilter = {
    is?: user_roleWhereInput | null
    isNot?: user_roleWhereInput | null
  }

  export type IncidentListRelationFilter = {
    every?: incidentWhereInput
    some?: incidentWhereInput
    none?: incidentWhereInput
  }

  export type Incident_historyListRelationFilter = {
    every?: incident_historyWhereInput
    some?: incident_historyWhereInput
    none?: incident_historyWhereInput
  }

  export type NotificationListRelationFilter = {
    every?: notificationWhereInput
    some?: notificationWhereInput
    none?: notificationWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type incidentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type incident_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notificationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type app_userCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    google_id?: SortOrder
    profile_picture?: SortOrder
    is_active?: SortOrder
    role_id?: SortOrder
    password?: SortOrder
    email_validated?: SortOrder
  }

  export type app_userAvgOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type app_userMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    google_id?: SortOrder
    profile_picture?: SortOrder
    is_active?: SortOrder
    role_id?: SortOrder
    password?: SortOrder
    email_validated?: SortOrder
  }

  export type app_userMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    google_id?: SortOrder
    profile_picture?: SortOrder
    is_active?: SortOrder
    role_id?: SortOrder
    password?: SortOrder
    email_validated?: SortOrder
  }

  export type app_userSumOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Enumpriority_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.priority_enum | Enumpriority_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumpriority_enumNullableFilter<$PrismaModel> | $Enums.priority_enum | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type LocationNullableScalarRelationFilter = {
    is?: locationWhereInput | null
    isNot?: locationWhereInput | null
  }

  export type Incident_statusNullableScalarRelationFilter = {
    is?: incident_statusWhereInput | null
    isNot?: incident_statusWhereInput | null
  }

  export type Incident_typeNullableScalarRelationFilter = {
    is?: incident_typeWhereInput | null
    isNot?: incident_typeWhereInput | null
  }

  export type App_userNullableScalarRelationFilter = {
    is?: app_userWhereInput | null
    isNot?: app_userWhereInput | null
  }

  export type incidentCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    priority?: SortOrder
    report_date?: SortOrder
    close_date?: SortOrder
    status_id?: SortOrder
    user_id?: SortOrder
    type_id?: SortOrder
    location_id?: SortOrder
  }

  export type incidentAvgOrderByAggregateInput = {
    id?: SortOrder
    status_id?: SortOrder
    user_id?: SortOrder
    type_id?: SortOrder
    location_id?: SortOrder
  }

  export type incidentMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    priority?: SortOrder
    report_date?: SortOrder
    close_date?: SortOrder
    status_id?: SortOrder
    user_id?: SortOrder
    type_id?: SortOrder
    location_id?: SortOrder
  }

  export type incidentMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    image_url?: SortOrder
    priority?: SortOrder
    report_date?: SortOrder
    close_date?: SortOrder
    status_id?: SortOrder
    user_id?: SortOrder
    type_id?: SortOrder
    location_id?: SortOrder
  }

  export type incidentSumOrderByAggregateInput = {
    id?: SortOrder
    status_id?: SortOrder
    user_id?: SortOrder
    type_id?: SortOrder
    location_id?: SortOrder
  }

  export type Enumpriority_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.priority_enum | Enumpriority_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumpriority_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.priority_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpriority_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumpriority_enumNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IncidentNullableScalarRelationFilter = {
    is?: incidentWhereInput | null
    isNot?: incidentWhereInput | null
  }

  export type incident_historyCountOrderByAggregateInput = {
    id?: SortOrder
    incident_id?: SortOrder
    previous_status?: SortOrder
    new_status?: SortOrder
    change_date?: SortOrder
    comment?: SortOrder
    modified_by?: SortOrder
  }

  export type incident_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    incident_id?: SortOrder
    modified_by?: SortOrder
  }

  export type incident_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    incident_id?: SortOrder
    previous_status?: SortOrder
    new_status?: SortOrder
    change_date?: SortOrder
    comment?: SortOrder
    modified_by?: SortOrder
  }

  export type incident_historyMinOrderByAggregateInput = {
    id?: SortOrder
    incident_id?: SortOrder
    previous_status?: SortOrder
    new_status?: SortOrder
    change_date?: SortOrder
    comment?: SortOrder
    modified_by?: SortOrder
  }

  export type incident_historySumOrderByAggregateInput = {
    id?: SortOrder
    incident_id?: SortOrder
    modified_by?: SortOrder
  }

  export type Enumincident_status_enumFilter<$PrismaModel = never> = {
    equals?: $Enums.incident_status_enum | Enumincident_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumincident_status_enumFilter<$PrismaModel> | $Enums.incident_status_enum
  }

  export type incident_statusCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type incident_statusAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type incident_statusMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type incident_statusMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type incident_statusSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumincident_status_enumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.incident_status_enum | Enumincident_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumincident_status_enumWithAggregatesFilter<$PrismaModel> | $Enums.incident_status_enum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumincident_status_enumFilter<$PrismaModel>
    _max?: NestedEnumincident_status_enumFilter<$PrismaModel>
  }

  export type incident_typeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type incident_typeAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type incident_typeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type incident_typeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type incident_typeSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type locationCountOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    altitude?: SortOrder
    reference?: SortOrder
  }

  export type locationAvgOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    altitude?: SortOrder
  }

  export type locationMaxOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    altitude?: SortOrder
    reference?: SortOrder
  }

  export type locationMinOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    altitude?: SortOrder
    reference?: SortOrder
  }

  export type locationSumOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    altitude?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type notificationCountOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type notificationAvgOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
  }

  export type notificationMaxOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type notificationMinOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
    message?: SortOrder
    is_read?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type notificationSumOrderByAggregateInput = {
    id?: SortOrder
    sender_id?: SortOrder
    receiver_id?: SortOrder
  }

  export type App_userListRelationFilter = {
    every?: app_userWhereInput
    some?: app_userWhereInput
    none?: app_userWhereInput
  }

  export type app_userOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_roleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type user_roleAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type user_roleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type user_roleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type user_roleSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type user_roleCreateNestedOneWithoutApp_userInput = {
    create?: XOR<user_roleCreateWithoutApp_userInput, user_roleUncheckedCreateWithoutApp_userInput>
    connectOrCreate?: user_roleCreateOrConnectWithoutApp_userInput
    connect?: user_roleWhereUniqueInput
  }

  export type incidentCreateNestedManyWithoutApp_userInput = {
    create?: XOR<incidentCreateWithoutApp_userInput, incidentUncheckedCreateWithoutApp_userInput> | incidentCreateWithoutApp_userInput[] | incidentUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutApp_userInput | incidentCreateOrConnectWithoutApp_userInput[]
    createMany?: incidentCreateManyApp_userInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type incident_historyCreateNestedManyWithoutApp_userInput = {
    create?: XOR<incident_historyCreateWithoutApp_userInput, incident_historyUncheckedCreateWithoutApp_userInput> | incident_historyCreateWithoutApp_userInput[] | incident_historyUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutApp_userInput | incident_historyCreateOrConnectWithoutApp_userInput[]
    createMany?: incident_historyCreateManyApp_userInputEnvelope
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
  }

  export type notificationCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput> | notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_receiver_idToapp_userInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type notificationCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput> | notificationCreateWithoutApp_user_notification_sender_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_sender_idToapp_userInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type incidentUncheckedCreateNestedManyWithoutApp_userInput = {
    create?: XOR<incidentCreateWithoutApp_userInput, incidentUncheckedCreateWithoutApp_userInput> | incidentCreateWithoutApp_userInput[] | incidentUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutApp_userInput | incidentCreateOrConnectWithoutApp_userInput[]
    createMany?: incidentCreateManyApp_userInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type incident_historyUncheckedCreateNestedManyWithoutApp_userInput = {
    create?: XOR<incident_historyCreateWithoutApp_userInput, incident_historyUncheckedCreateWithoutApp_userInput> | incident_historyCreateWithoutApp_userInput[] | incident_historyUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutApp_userInput | incident_historyCreateOrConnectWithoutApp_userInput[]
    createMany?: incident_historyCreateManyApp_userInputEnvelope
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput> | notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_receiver_idToapp_userInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type notificationUncheckedCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput> | notificationCreateWithoutApp_user_notification_sender_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_sender_idToapp_userInputEnvelope
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type user_roleUpdateOneWithoutApp_userNestedInput = {
    create?: XOR<user_roleCreateWithoutApp_userInput, user_roleUncheckedCreateWithoutApp_userInput>
    connectOrCreate?: user_roleCreateOrConnectWithoutApp_userInput
    upsert?: user_roleUpsertWithoutApp_userInput
    disconnect?: user_roleWhereInput | boolean
    delete?: user_roleWhereInput | boolean
    connect?: user_roleWhereUniqueInput
    update?: XOR<XOR<user_roleUpdateToOneWithWhereWithoutApp_userInput, user_roleUpdateWithoutApp_userInput>, user_roleUncheckedUpdateWithoutApp_userInput>
  }

  export type incidentUpdateManyWithoutApp_userNestedInput = {
    create?: XOR<incidentCreateWithoutApp_userInput, incidentUncheckedCreateWithoutApp_userInput> | incidentCreateWithoutApp_userInput[] | incidentUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutApp_userInput | incidentCreateOrConnectWithoutApp_userInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutApp_userInput | incidentUpsertWithWhereUniqueWithoutApp_userInput[]
    createMany?: incidentCreateManyApp_userInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutApp_userInput | incidentUpdateWithWhereUniqueWithoutApp_userInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutApp_userInput | incidentUpdateManyWithWhereWithoutApp_userInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type incident_historyUpdateManyWithoutApp_userNestedInput = {
    create?: XOR<incident_historyCreateWithoutApp_userInput, incident_historyUncheckedCreateWithoutApp_userInput> | incident_historyCreateWithoutApp_userInput[] | incident_historyUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutApp_userInput | incident_historyCreateOrConnectWithoutApp_userInput[]
    upsert?: incident_historyUpsertWithWhereUniqueWithoutApp_userInput | incident_historyUpsertWithWhereUniqueWithoutApp_userInput[]
    createMany?: incident_historyCreateManyApp_userInputEnvelope
    set?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    disconnect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    delete?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    update?: incident_historyUpdateWithWhereUniqueWithoutApp_userInput | incident_historyUpdateWithWhereUniqueWithoutApp_userInput[]
    updateMany?: incident_historyUpdateManyWithWhereWithoutApp_userInput | incident_historyUpdateManyWithWhereWithoutApp_userInput[]
    deleteMany?: incident_historyScalarWhereInput | incident_historyScalarWhereInput[]
  }

  export type notificationUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput> | notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput | notificationUpsertWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_receiver_idToapp_userInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput | notificationUpdateWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutApp_user_notification_receiver_idToapp_userInput | notificationUpdateManyWithWhereWithoutApp_user_notification_receiver_idToapp_userInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type notificationUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput> | notificationCreateWithoutApp_user_notification_sender_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput | notificationUpsertWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_sender_idToapp_userInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput | notificationUpdateWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutApp_user_notification_sender_idToapp_userInput | notificationUpdateManyWithWhereWithoutApp_user_notification_sender_idToapp_userInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type incidentUncheckedUpdateManyWithoutApp_userNestedInput = {
    create?: XOR<incidentCreateWithoutApp_userInput, incidentUncheckedCreateWithoutApp_userInput> | incidentCreateWithoutApp_userInput[] | incidentUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutApp_userInput | incidentCreateOrConnectWithoutApp_userInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutApp_userInput | incidentUpsertWithWhereUniqueWithoutApp_userInput[]
    createMany?: incidentCreateManyApp_userInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutApp_userInput | incidentUpdateWithWhereUniqueWithoutApp_userInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutApp_userInput | incidentUpdateManyWithWhereWithoutApp_userInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type incident_historyUncheckedUpdateManyWithoutApp_userNestedInput = {
    create?: XOR<incident_historyCreateWithoutApp_userInput, incident_historyUncheckedCreateWithoutApp_userInput> | incident_historyCreateWithoutApp_userInput[] | incident_historyUncheckedCreateWithoutApp_userInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutApp_userInput | incident_historyCreateOrConnectWithoutApp_userInput[]
    upsert?: incident_historyUpsertWithWhereUniqueWithoutApp_userInput | incident_historyUpsertWithWhereUniqueWithoutApp_userInput[]
    createMany?: incident_historyCreateManyApp_userInputEnvelope
    set?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    disconnect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    delete?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    update?: incident_historyUpdateWithWhereUniqueWithoutApp_userInput | incident_historyUpdateWithWhereUniqueWithoutApp_userInput[]
    updateMany?: incident_historyUpdateManyWithWhereWithoutApp_userInput | incident_historyUpdateManyWithWhereWithoutApp_userInput[]
    deleteMany?: incident_historyScalarWhereInput | incident_historyScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput> | notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput | notificationUpsertWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_receiver_idToapp_userInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput | notificationUpdateWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutApp_user_notification_receiver_idToapp_userInput | notificationUpdateManyWithWhereWithoutApp_user_notification_receiver_idToapp_userInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput = {
    create?: XOR<notificationCreateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput> | notificationCreateWithoutApp_user_notification_sender_idToapp_userInput[] | notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput[]
    connectOrCreate?: notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput | notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput[]
    upsert?: notificationUpsertWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput | notificationUpsertWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput[]
    createMany?: notificationCreateManyApp_user_notification_sender_idToapp_userInputEnvelope
    set?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    disconnect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    delete?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    connect?: notificationWhereUniqueInput | notificationWhereUniqueInput[]
    update?: notificationUpdateWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput | notificationUpdateWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput[]
    updateMany?: notificationUpdateManyWithWhereWithoutApp_user_notification_sender_idToapp_userInput | notificationUpdateManyWithWhereWithoutApp_user_notification_sender_idToapp_userInput[]
    deleteMany?: notificationScalarWhereInput | notificationScalarWhereInput[]
  }

  export type locationCreateNestedOneWithoutIncidentInput = {
    create?: XOR<locationCreateWithoutIncidentInput, locationUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: locationCreateOrConnectWithoutIncidentInput
    connect?: locationWhereUniqueInput
  }

  export type incident_statusCreateNestedOneWithoutIncidentInput = {
    create?: XOR<incident_statusCreateWithoutIncidentInput, incident_statusUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: incident_statusCreateOrConnectWithoutIncidentInput
    connect?: incident_statusWhereUniqueInput
  }

  export type incident_typeCreateNestedOneWithoutIncidentInput = {
    create?: XOR<incident_typeCreateWithoutIncidentInput, incident_typeUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: incident_typeCreateOrConnectWithoutIncidentInput
    connect?: incident_typeWhereUniqueInput
  }

  export type app_userCreateNestedOneWithoutIncidentInput = {
    create?: XOR<app_userCreateWithoutIncidentInput, app_userUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: app_userCreateOrConnectWithoutIncidentInput
    connect?: app_userWhereUniqueInput
  }

  export type incident_historyCreateNestedManyWithoutIncidentInput = {
    create?: XOR<incident_historyCreateWithoutIncidentInput, incident_historyUncheckedCreateWithoutIncidentInput> | incident_historyCreateWithoutIncidentInput[] | incident_historyUncheckedCreateWithoutIncidentInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutIncidentInput | incident_historyCreateOrConnectWithoutIncidentInput[]
    createMany?: incident_historyCreateManyIncidentInputEnvelope
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
  }

  export type incident_historyUncheckedCreateNestedManyWithoutIncidentInput = {
    create?: XOR<incident_historyCreateWithoutIncidentInput, incident_historyUncheckedCreateWithoutIncidentInput> | incident_historyCreateWithoutIncidentInput[] | incident_historyUncheckedCreateWithoutIncidentInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutIncidentInput | incident_historyCreateOrConnectWithoutIncidentInput[]
    createMany?: incident_historyCreateManyIncidentInputEnvelope
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
  }

  export type NullableEnumpriority_enumFieldUpdateOperationsInput = {
    set?: $Enums.priority_enum | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type locationUpdateOneWithoutIncidentNestedInput = {
    create?: XOR<locationCreateWithoutIncidentInput, locationUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: locationCreateOrConnectWithoutIncidentInput
    upsert?: locationUpsertWithoutIncidentInput
    disconnect?: locationWhereInput | boolean
    delete?: locationWhereInput | boolean
    connect?: locationWhereUniqueInput
    update?: XOR<XOR<locationUpdateToOneWithWhereWithoutIncidentInput, locationUpdateWithoutIncidentInput>, locationUncheckedUpdateWithoutIncidentInput>
  }

  export type incident_statusUpdateOneWithoutIncidentNestedInput = {
    create?: XOR<incident_statusCreateWithoutIncidentInput, incident_statusUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: incident_statusCreateOrConnectWithoutIncidentInput
    upsert?: incident_statusUpsertWithoutIncidentInput
    disconnect?: incident_statusWhereInput | boolean
    delete?: incident_statusWhereInput | boolean
    connect?: incident_statusWhereUniqueInput
    update?: XOR<XOR<incident_statusUpdateToOneWithWhereWithoutIncidentInput, incident_statusUpdateWithoutIncidentInput>, incident_statusUncheckedUpdateWithoutIncidentInput>
  }

  export type incident_typeUpdateOneWithoutIncidentNestedInput = {
    create?: XOR<incident_typeCreateWithoutIncidentInput, incident_typeUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: incident_typeCreateOrConnectWithoutIncidentInput
    upsert?: incident_typeUpsertWithoutIncidentInput
    disconnect?: incident_typeWhereInput | boolean
    delete?: incident_typeWhereInput | boolean
    connect?: incident_typeWhereUniqueInput
    update?: XOR<XOR<incident_typeUpdateToOneWithWhereWithoutIncidentInput, incident_typeUpdateWithoutIncidentInput>, incident_typeUncheckedUpdateWithoutIncidentInput>
  }

  export type app_userUpdateOneWithoutIncidentNestedInput = {
    create?: XOR<app_userCreateWithoutIncidentInput, app_userUncheckedCreateWithoutIncidentInput>
    connectOrCreate?: app_userCreateOrConnectWithoutIncidentInput
    upsert?: app_userUpsertWithoutIncidentInput
    disconnect?: app_userWhereInput | boolean
    delete?: app_userWhereInput | boolean
    connect?: app_userWhereUniqueInput
    update?: XOR<XOR<app_userUpdateToOneWithWhereWithoutIncidentInput, app_userUpdateWithoutIncidentInput>, app_userUncheckedUpdateWithoutIncidentInput>
  }

  export type incident_historyUpdateManyWithoutIncidentNestedInput = {
    create?: XOR<incident_historyCreateWithoutIncidentInput, incident_historyUncheckedCreateWithoutIncidentInput> | incident_historyCreateWithoutIncidentInput[] | incident_historyUncheckedCreateWithoutIncidentInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutIncidentInput | incident_historyCreateOrConnectWithoutIncidentInput[]
    upsert?: incident_historyUpsertWithWhereUniqueWithoutIncidentInput | incident_historyUpsertWithWhereUniqueWithoutIncidentInput[]
    createMany?: incident_historyCreateManyIncidentInputEnvelope
    set?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    disconnect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    delete?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    update?: incident_historyUpdateWithWhereUniqueWithoutIncidentInput | incident_historyUpdateWithWhereUniqueWithoutIncidentInput[]
    updateMany?: incident_historyUpdateManyWithWhereWithoutIncidentInput | incident_historyUpdateManyWithWhereWithoutIncidentInput[]
    deleteMany?: incident_historyScalarWhereInput | incident_historyScalarWhereInput[]
  }

  export type incident_historyUncheckedUpdateManyWithoutIncidentNestedInput = {
    create?: XOR<incident_historyCreateWithoutIncidentInput, incident_historyUncheckedCreateWithoutIncidentInput> | incident_historyCreateWithoutIncidentInput[] | incident_historyUncheckedCreateWithoutIncidentInput[]
    connectOrCreate?: incident_historyCreateOrConnectWithoutIncidentInput | incident_historyCreateOrConnectWithoutIncidentInput[]
    upsert?: incident_historyUpsertWithWhereUniqueWithoutIncidentInput | incident_historyUpsertWithWhereUniqueWithoutIncidentInput[]
    createMany?: incident_historyCreateManyIncidentInputEnvelope
    set?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    disconnect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    delete?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    connect?: incident_historyWhereUniqueInput | incident_historyWhereUniqueInput[]
    update?: incident_historyUpdateWithWhereUniqueWithoutIncidentInput | incident_historyUpdateWithWhereUniqueWithoutIncidentInput[]
    updateMany?: incident_historyUpdateManyWithWhereWithoutIncidentInput | incident_historyUpdateManyWithWhereWithoutIncidentInput[]
    deleteMany?: incident_historyScalarWhereInput | incident_historyScalarWhereInput[]
  }

  export type incidentCreateNestedOneWithoutIncident_historyInput = {
    create?: XOR<incidentCreateWithoutIncident_historyInput, incidentUncheckedCreateWithoutIncident_historyInput>
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_historyInput
    connect?: incidentWhereUniqueInput
  }

  export type app_userCreateNestedOneWithoutIncident_historyInput = {
    create?: XOR<app_userCreateWithoutIncident_historyInput, app_userUncheckedCreateWithoutIncident_historyInput>
    connectOrCreate?: app_userCreateOrConnectWithoutIncident_historyInput
    connect?: app_userWhereUniqueInput
  }

  export type incidentUpdateOneWithoutIncident_historyNestedInput = {
    create?: XOR<incidentCreateWithoutIncident_historyInput, incidentUncheckedCreateWithoutIncident_historyInput>
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_historyInput
    upsert?: incidentUpsertWithoutIncident_historyInput
    disconnect?: incidentWhereInput | boolean
    delete?: incidentWhereInput | boolean
    connect?: incidentWhereUniqueInput
    update?: XOR<XOR<incidentUpdateToOneWithWhereWithoutIncident_historyInput, incidentUpdateWithoutIncident_historyInput>, incidentUncheckedUpdateWithoutIncident_historyInput>
  }

  export type app_userUpdateOneWithoutIncident_historyNestedInput = {
    create?: XOR<app_userCreateWithoutIncident_historyInput, app_userUncheckedCreateWithoutIncident_historyInput>
    connectOrCreate?: app_userCreateOrConnectWithoutIncident_historyInput
    upsert?: app_userUpsertWithoutIncident_historyInput
    disconnect?: app_userWhereInput | boolean
    delete?: app_userWhereInput | boolean
    connect?: app_userWhereUniqueInput
    update?: XOR<XOR<app_userUpdateToOneWithWhereWithoutIncident_historyInput, app_userUpdateWithoutIncident_historyInput>, app_userUncheckedUpdateWithoutIncident_historyInput>
  }

  export type incidentCreateNestedManyWithoutIncident_statusInput = {
    create?: XOR<incidentCreateWithoutIncident_statusInput, incidentUncheckedCreateWithoutIncident_statusInput> | incidentCreateWithoutIncident_statusInput[] | incidentUncheckedCreateWithoutIncident_statusInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_statusInput | incidentCreateOrConnectWithoutIncident_statusInput[]
    createMany?: incidentCreateManyIncident_statusInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type incidentUncheckedCreateNestedManyWithoutIncident_statusInput = {
    create?: XOR<incidentCreateWithoutIncident_statusInput, incidentUncheckedCreateWithoutIncident_statusInput> | incidentCreateWithoutIncident_statusInput[] | incidentUncheckedCreateWithoutIncident_statusInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_statusInput | incidentCreateOrConnectWithoutIncident_statusInput[]
    createMany?: incidentCreateManyIncident_statusInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type Enumincident_status_enumFieldUpdateOperationsInput = {
    set?: $Enums.incident_status_enum
  }

  export type incidentUpdateManyWithoutIncident_statusNestedInput = {
    create?: XOR<incidentCreateWithoutIncident_statusInput, incidentUncheckedCreateWithoutIncident_statusInput> | incidentCreateWithoutIncident_statusInput[] | incidentUncheckedCreateWithoutIncident_statusInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_statusInput | incidentCreateOrConnectWithoutIncident_statusInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutIncident_statusInput | incidentUpsertWithWhereUniqueWithoutIncident_statusInput[]
    createMany?: incidentCreateManyIncident_statusInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutIncident_statusInput | incidentUpdateWithWhereUniqueWithoutIncident_statusInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutIncident_statusInput | incidentUpdateManyWithWhereWithoutIncident_statusInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type incidentUncheckedUpdateManyWithoutIncident_statusNestedInput = {
    create?: XOR<incidentCreateWithoutIncident_statusInput, incidentUncheckedCreateWithoutIncident_statusInput> | incidentCreateWithoutIncident_statusInput[] | incidentUncheckedCreateWithoutIncident_statusInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_statusInput | incidentCreateOrConnectWithoutIncident_statusInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutIncident_statusInput | incidentUpsertWithWhereUniqueWithoutIncident_statusInput[]
    createMany?: incidentCreateManyIncident_statusInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutIncident_statusInput | incidentUpdateWithWhereUniqueWithoutIncident_statusInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutIncident_statusInput | incidentUpdateManyWithWhereWithoutIncident_statusInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type incidentCreateNestedManyWithoutIncident_typeInput = {
    create?: XOR<incidentCreateWithoutIncident_typeInput, incidentUncheckedCreateWithoutIncident_typeInput> | incidentCreateWithoutIncident_typeInput[] | incidentUncheckedCreateWithoutIncident_typeInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_typeInput | incidentCreateOrConnectWithoutIncident_typeInput[]
    createMany?: incidentCreateManyIncident_typeInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type incidentUncheckedCreateNestedManyWithoutIncident_typeInput = {
    create?: XOR<incidentCreateWithoutIncident_typeInput, incidentUncheckedCreateWithoutIncident_typeInput> | incidentCreateWithoutIncident_typeInput[] | incidentUncheckedCreateWithoutIncident_typeInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_typeInput | incidentCreateOrConnectWithoutIncident_typeInput[]
    createMany?: incidentCreateManyIncident_typeInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type incidentUpdateManyWithoutIncident_typeNestedInput = {
    create?: XOR<incidentCreateWithoutIncident_typeInput, incidentUncheckedCreateWithoutIncident_typeInput> | incidentCreateWithoutIncident_typeInput[] | incidentUncheckedCreateWithoutIncident_typeInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_typeInput | incidentCreateOrConnectWithoutIncident_typeInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutIncident_typeInput | incidentUpsertWithWhereUniqueWithoutIncident_typeInput[]
    createMany?: incidentCreateManyIncident_typeInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutIncident_typeInput | incidentUpdateWithWhereUniqueWithoutIncident_typeInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutIncident_typeInput | incidentUpdateManyWithWhereWithoutIncident_typeInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type incidentUncheckedUpdateManyWithoutIncident_typeNestedInput = {
    create?: XOR<incidentCreateWithoutIncident_typeInput, incidentUncheckedCreateWithoutIncident_typeInput> | incidentCreateWithoutIncident_typeInput[] | incidentUncheckedCreateWithoutIncident_typeInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutIncident_typeInput | incidentCreateOrConnectWithoutIncident_typeInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutIncident_typeInput | incidentUpsertWithWhereUniqueWithoutIncident_typeInput[]
    createMany?: incidentCreateManyIncident_typeInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutIncident_typeInput | incidentUpdateWithWhereUniqueWithoutIncident_typeInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutIncident_typeInput | incidentUpdateManyWithWhereWithoutIncident_typeInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type incidentCreateNestedManyWithoutLocationInput = {
    create?: XOR<incidentCreateWithoutLocationInput, incidentUncheckedCreateWithoutLocationInput> | incidentCreateWithoutLocationInput[] | incidentUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutLocationInput | incidentCreateOrConnectWithoutLocationInput[]
    createMany?: incidentCreateManyLocationInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type incidentUncheckedCreateNestedManyWithoutLocationInput = {
    create?: XOR<incidentCreateWithoutLocationInput, incidentUncheckedCreateWithoutLocationInput> | incidentCreateWithoutLocationInput[] | incidentUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutLocationInput | incidentCreateOrConnectWithoutLocationInput[]
    createMany?: incidentCreateManyLocationInputEnvelope
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type incidentUpdateManyWithoutLocationNestedInput = {
    create?: XOR<incidentCreateWithoutLocationInput, incidentUncheckedCreateWithoutLocationInput> | incidentCreateWithoutLocationInput[] | incidentUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutLocationInput | incidentCreateOrConnectWithoutLocationInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutLocationInput | incidentUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: incidentCreateManyLocationInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutLocationInput | incidentUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutLocationInput | incidentUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type incidentUncheckedUpdateManyWithoutLocationNestedInput = {
    create?: XOR<incidentCreateWithoutLocationInput, incidentUncheckedCreateWithoutLocationInput> | incidentCreateWithoutLocationInput[] | incidentUncheckedCreateWithoutLocationInput[]
    connectOrCreate?: incidentCreateOrConnectWithoutLocationInput | incidentCreateOrConnectWithoutLocationInput[]
    upsert?: incidentUpsertWithWhereUniqueWithoutLocationInput | incidentUpsertWithWhereUniqueWithoutLocationInput[]
    createMany?: incidentCreateManyLocationInputEnvelope
    set?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    disconnect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    delete?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    connect?: incidentWhereUniqueInput | incidentWhereUniqueInput[]
    update?: incidentUpdateWithWhereUniqueWithoutLocationInput | incidentUpdateWithWhereUniqueWithoutLocationInput[]
    updateMany?: incidentUpdateManyWithWhereWithoutLocationInput | incidentUpdateManyWithWhereWithoutLocationInput[]
    deleteMany?: incidentScalarWhereInput | incidentScalarWhereInput[]
  }

  export type app_userCreateNestedOneWithoutNotification_notification_receiver_idToapp_userInput = {
    create?: XOR<app_userCreateWithoutNotification_notification_receiver_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_receiver_idToapp_userInput>
    connectOrCreate?: app_userCreateOrConnectWithoutNotification_notification_receiver_idToapp_userInput
    connect?: app_userWhereUniqueInput
  }

  export type app_userCreateNestedOneWithoutNotification_notification_sender_idToapp_userInput = {
    create?: XOR<app_userCreateWithoutNotification_notification_sender_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_sender_idToapp_userInput>
    connectOrCreate?: app_userCreateOrConnectWithoutNotification_notification_sender_idToapp_userInput
    connect?: app_userWhereUniqueInput
  }

  export type app_userUpdateOneWithoutNotification_notification_receiver_idToapp_userNestedInput = {
    create?: XOR<app_userCreateWithoutNotification_notification_receiver_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_receiver_idToapp_userInput>
    connectOrCreate?: app_userCreateOrConnectWithoutNotification_notification_receiver_idToapp_userInput
    upsert?: app_userUpsertWithoutNotification_notification_receiver_idToapp_userInput
    disconnect?: app_userWhereInput | boolean
    delete?: app_userWhereInput | boolean
    connect?: app_userWhereUniqueInput
    update?: XOR<XOR<app_userUpdateToOneWithWhereWithoutNotification_notification_receiver_idToapp_userInput, app_userUpdateWithoutNotification_notification_receiver_idToapp_userInput>, app_userUncheckedUpdateWithoutNotification_notification_receiver_idToapp_userInput>
  }

  export type app_userUpdateOneWithoutNotification_notification_sender_idToapp_userNestedInput = {
    create?: XOR<app_userCreateWithoutNotification_notification_sender_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_sender_idToapp_userInput>
    connectOrCreate?: app_userCreateOrConnectWithoutNotification_notification_sender_idToapp_userInput
    upsert?: app_userUpsertWithoutNotification_notification_sender_idToapp_userInput
    disconnect?: app_userWhereInput | boolean
    delete?: app_userWhereInput | boolean
    connect?: app_userWhereUniqueInput
    update?: XOR<XOR<app_userUpdateToOneWithWhereWithoutNotification_notification_sender_idToapp_userInput, app_userUpdateWithoutNotification_notification_sender_idToapp_userInput>, app_userUncheckedUpdateWithoutNotification_notification_sender_idToapp_userInput>
  }

  export type app_userCreateNestedManyWithoutUser_roleInput = {
    create?: XOR<app_userCreateWithoutUser_roleInput, app_userUncheckedCreateWithoutUser_roleInput> | app_userCreateWithoutUser_roleInput[] | app_userUncheckedCreateWithoutUser_roleInput[]
    connectOrCreate?: app_userCreateOrConnectWithoutUser_roleInput | app_userCreateOrConnectWithoutUser_roleInput[]
    createMany?: app_userCreateManyUser_roleInputEnvelope
    connect?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
  }

  export type app_userUncheckedCreateNestedManyWithoutUser_roleInput = {
    create?: XOR<app_userCreateWithoutUser_roleInput, app_userUncheckedCreateWithoutUser_roleInput> | app_userCreateWithoutUser_roleInput[] | app_userUncheckedCreateWithoutUser_roleInput[]
    connectOrCreate?: app_userCreateOrConnectWithoutUser_roleInput | app_userCreateOrConnectWithoutUser_roleInput[]
    createMany?: app_userCreateManyUser_roleInputEnvelope
    connect?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
  }

  export type app_userUpdateManyWithoutUser_roleNestedInput = {
    create?: XOR<app_userCreateWithoutUser_roleInput, app_userUncheckedCreateWithoutUser_roleInput> | app_userCreateWithoutUser_roleInput[] | app_userUncheckedCreateWithoutUser_roleInput[]
    connectOrCreate?: app_userCreateOrConnectWithoutUser_roleInput | app_userCreateOrConnectWithoutUser_roleInput[]
    upsert?: app_userUpsertWithWhereUniqueWithoutUser_roleInput | app_userUpsertWithWhereUniqueWithoutUser_roleInput[]
    createMany?: app_userCreateManyUser_roleInputEnvelope
    set?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    disconnect?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    delete?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    connect?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    update?: app_userUpdateWithWhereUniqueWithoutUser_roleInput | app_userUpdateWithWhereUniqueWithoutUser_roleInput[]
    updateMany?: app_userUpdateManyWithWhereWithoutUser_roleInput | app_userUpdateManyWithWhereWithoutUser_roleInput[]
    deleteMany?: app_userScalarWhereInput | app_userScalarWhereInput[]
  }

  export type app_userUncheckedUpdateManyWithoutUser_roleNestedInput = {
    create?: XOR<app_userCreateWithoutUser_roleInput, app_userUncheckedCreateWithoutUser_roleInput> | app_userCreateWithoutUser_roleInput[] | app_userUncheckedCreateWithoutUser_roleInput[]
    connectOrCreate?: app_userCreateOrConnectWithoutUser_roleInput | app_userCreateOrConnectWithoutUser_roleInput[]
    upsert?: app_userUpsertWithWhereUniqueWithoutUser_roleInput | app_userUpsertWithWhereUniqueWithoutUser_roleInput[]
    createMany?: app_userCreateManyUser_roleInputEnvelope
    set?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    disconnect?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    delete?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    connect?: app_userWhereUniqueInput | app_userWhereUniqueInput[]
    update?: app_userUpdateWithWhereUniqueWithoutUser_roleInput | app_userUpdateWithWhereUniqueWithoutUser_roleInput[]
    updateMany?: app_userUpdateManyWithWhereWithoutUser_roleInput | app_userUpdateManyWithWhereWithoutUser_roleInput[]
    deleteMany?: app_userScalarWhereInput | app_userScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumpriority_enumNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.priority_enum | Enumpriority_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumpriority_enumNullableFilter<$PrismaModel> | $Enums.priority_enum | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedEnumpriority_enumNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.priority_enum | Enumpriority_enumFieldRefInput<$PrismaModel> | null
    in?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.priority_enum[] | ListEnumpriority_enumFieldRefInput<$PrismaModel> | null
    not?: NestedEnumpriority_enumNullableWithAggregatesFilter<$PrismaModel> | $Enums.priority_enum | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumpriority_enumNullableFilter<$PrismaModel>
    _max?: NestedEnumpriority_enumNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumincident_status_enumFilter<$PrismaModel = never> = {
    equals?: $Enums.incident_status_enum | Enumincident_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumincident_status_enumFilter<$PrismaModel> | $Enums.incident_status_enum
  }

  export type NestedEnumincident_status_enumWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.incident_status_enum | Enumincident_status_enumFieldRefInput<$PrismaModel>
    in?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    notIn?: $Enums.incident_status_enum[] | ListEnumincident_status_enumFieldRefInput<$PrismaModel>
    not?: NestedEnumincident_status_enumWithAggregatesFilter<$PrismaModel> | $Enums.incident_status_enum
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumincident_status_enumFilter<$PrismaModel>
    _max?: NestedEnumincident_status_enumFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type user_roleCreateWithoutApp_userInput = {
    name: string
  }

  export type user_roleUncheckedCreateWithoutApp_userInput = {
    id?: number
    name: string
  }

  export type user_roleCreateOrConnectWithoutApp_userInput = {
    where: user_roleWhereUniqueInput
    create: XOR<user_roleCreateWithoutApp_userInput, user_roleUncheckedCreateWithoutApp_userInput>
  }

  export type incidentCreateWithoutApp_userInput = {
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    location?: locationCreateNestedOneWithoutIncidentInput
    incident_status?: incident_statusCreateNestedOneWithoutIncidentInput
    incident_type?: incident_typeCreateNestedOneWithoutIncidentInput
    incident_history?: incident_historyCreateNestedManyWithoutIncidentInput
  }

  export type incidentUncheckedCreateWithoutApp_userInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    type_id?: number | null
    location_id?: number | null
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutIncidentInput
  }

  export type incidentCreateOrConnectWithoutApp_userInput = {
    where: incidentWhereUniqueInput
    create: XOR<incidentCreateWithoutApp_userInput, incidentUncheckedCreateWithoutApp_userInput>
  }

  export type incidentCreateManyApp_userInputEnvelope = {
    data: incidentCreateManyApp_userInput | incidentCreateManyApp_userInput[]
    skipDuplicates?: boolean
  }

  export type incident_historyCreateWithoutApp_userInput = {
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
    incident?: incidentCreateNestedOneWithoutIncident_historyInput
  }

  export type incident_historyUncheckedCreateWithoutApp_userInput = {
    id?: number
    incident_id?: number | null
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
  }

  export type incident_historyCreateOrConnectWithoutApp_userInput = {
    where: incident_historyWhereUniqueInput
    create: XOR<incident_historyCreateWithoutApp_userInput, incident_historyUncheckedCreateWithoutApp_userInput>
  }

  export type incident_historyCreateManyApp_userInputEnvelope = {
    data: incident_historyCreateManyApp_userInput | incident_historyCreateManyApp_userInput[]
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput = {
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    app_user_notification_sender_idToapp_user?: app_userCreateNestedOneWithoutNotification_notification_sender_idToapp_userInput
  }

  export type notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput = {
    id?: number
    sender_id?: number | null
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type notificationCreateOrConnectWithoutApp_user_notification_receiver_idToapp_userInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput>
  }

  export type notificationCreateManyApp_user_notification_receiver_idToapp_userInputEnvelope = {
    data: notificationCreateManyApp_user_notification_receiver_idToapp_userInput | notificationCreateManyApp_user_notification_receiver_idToapp_userInput[]
    skipDuplicates?: boolean
  }

  export type notificationCreateWithoutApp_user_notification_sender_idToapp_userInput = {
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    app_user_notification_receiver_idToapp_user?: app_userCreateNestedOneWithoutNotification_notification_receiver_idToapp_userInput
  }

  export type notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput = {
    id?: number
    receiver_id?: number | null
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type notificationCreateOrConnectWithoutApp_user_notification_sender_idToapp_userInput = {
    where: notificationWhereUniqueInput
    create: XOR<notificationCreateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput>
  }

  export type notificationCreateManyApp_user_notification_sender_idToapp_userInputEnvelope = {
    data: notificationCreateManyApp_user_notification_sender_idToapp_userInput | notificationCreateManyApp_user_notification_sender_idToapp_userInput[]
    skipDuplicates?: boolean
  }

  export type user_roleUpsertWithoutApp_userInput = {
    update: XOR<user_roleUpdateWithoutApp_userInput, user_roleUncheckedUpdateWithoutApp_userInput>
    create: XOR<user_roleCreateWithoutApp_userInput, user_roleUncheckedCreateWithoutApp_userInput>
    where?: user_roleWhereInput
  }

  export type user_roleUpdateToOneWithWhereWithoutApp_userInput = {
    where?: user_roleWhereInput
    data: XOR<user_roleUpdateWithoutApp_userInput, user_roleUncheckedUpdateWithoutApp_userInput>
  }

  export type user_roleUpdateWithoutApp_userInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type user_roleUncheckedUpdateWithoutApp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type incidentUpsertWithWhereUniqueWithoutApp_userInput = {
    where: incidentWhereUniqueInput
    update: XOR<incidentUpdateWithoutApp_userInput, incidentUncheckedUpdateWithoutApp_userInput>
    create: XOR<incidentCreateWithoutApp_userInput, incidentUncheckedCreateWithoutApp_userInput>
  }

  export type incidentUpdateWithWhereUniqueWithoutApp_userInput = {
    where: incidentWhereUniqueInput
    data: XOR<incidentUpdateWithoutApp_userInput, incidentUncheckedUpdateWithoutApp_userInput>
  }

  export type incidentUpdateManyWithWhereWithoutApp_userInput = {
    where: incidentScalarWhereInput
    data: XOR<incidentUpdateManyMutationInput, incidentUncheckedUpdateManyWithoutApp_userInput>
  }

  export type incidentScalarWhereInput = {
    AND?: incidentScalarWhereInput | incidentScalarWhereInput[]
    OR?: incidentScalarWhereInput[]
    NOT?: incidentScalarWhereInput | incidentScalarWhereInput[]
    id?: IntFilter<"incident"> | number
    title?: StringNullableFilter<"incident"> | string | null
    description?: StringNullableFilter<"incident"> | string | null
    image_url?: StringNullableFilter<"incident"> | string | null
    priority?: Enumpriority_enumNullableFilter<"incident"> | $Enums.priority_enum | null
    report_date?: DateTimeNullableFilter<"incident"> | Date | string | null
    close_date?: DateTimeNullableFilter<"incident"> | Date | string | null
    status_id?: IntNullableFilter<"incident"> | number | null
    user_id?: IntNullableFilter<"incident"> | number | null
    type_id?: IntNullableFilter<"incident"> | number | null
    location_id?: IntNullableFilter<"incident"> | number | null
  }

  export type incident_historyUpsertWithWhereUniqueWithoutApp_userInput = {
    where: incident_historyWhereUniqueInput
    update: XOR<incident_historyUpdateWithoutApp_userInput, incident_historyUncheckedUpdateWithoutApp_userInput>
    create: XOR<incident_historyCreateWithoutApp_userInput, incident_historyUncheckedCreateWithoutApp_userInput>
  }

  export type incident_historyUpdateWithWhereUniqueWithoutApp_userInput = {
    where: incident_historyWhereUniqueInput
    data: XOR<incident_historyUpdateWithoutApp_userInput, incident_historyUncheckedUpdateWithoutApp_userInput>
  }

  export type incident_historyUpdateManyWithWhereWithoutApp_userInput = {
    where: incident_historyScalarWhereInput
    data: XOR<incident_historyUpdateManyMutationInput, incident_historyUncheckedUpdateManyWithoutApp_userInput>
  }

  export type incident_historyScalarWhereInput = {
    AND?: incident_historyScalarWhereInput | incident_historyScalarWhereInput[]
    OR?: incident_historyScalarWhereInput[]
    NOT?: incident_historyScalarWhereInput | incident_historyScalarWhereInput[]
    id?: IntFilter<"incident_history"> | number
    incident_id?: IntNullableFilter<"incident_history"> | number | null
    previous_status?: StringNullableFilter<"incident_history"> | string | null
    new_status?: StringNullableFilter<"incident_history"> | string | null
    change_date?: DateTimeNullableFilter<"incident_history"> | Date | string | null
    comment?: StringNullableFilter<"incident_history"> | string | null
    modified_by?: IntNullableFilter<"incident_history"> | number | null
  }

  export type notificationUpsertWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedUpdateWithoutApp_user_notification_receiver_idToapp_userInput>
    create: XOR<notificationCreateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_receiver_idToapp_userInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutApp_user_notification_receiver_idToapp_userInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutApp_user_notification_receiver_idToapp_userInput, notificationUncheckedUpdateWithoutApp_user_notification_receiver_idToapp_userInput>
  }

  export type notificationUpdateManyWithWhereWithoutApp_user_notification_receiver_idToapp_userInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userInput>
  }

  export type notificationScalarWhereInput = {
    AND?: notificationScalarWhereInput | notificationScalarWhereInput[]
    OR?: notificationScalarWhereInput[]
    NOT?: notificationScalarWhereInput | notificationScalarWhereInput[]
    id?: IntFilter<"notification"> | number
    sender_id?: IntNullableFilter<"notification"> | number | null
    receiver_id?: IntNullableFilter<"notification"> | number | null
    message?: StringFilter<"notification"> | string
    is_read?: BoolNullableFilter<"notification"> | boolean | null
    created_at?: DateTimeNullableFilter<"notification"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"notification"> | Date | string | null
  }

  export type notificationUpsertWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput = {
    where: notificationWhereUniqueInput
    update: XOR<notificationUpdateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedUpdateWithoutApp_user_notification_sender_idToapp_userInput>
    create: XOR<notificationCreateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedCreateWithoutApp_user_notification_sender_idToapp_userInput>
  }

  export type notificationUpdateWithWhereUniqueWithoutApp_user_notification_sender_idToapp_userInput = {
    where: notificationWhereUniqueInput
    data: XOR<notificationUpdateWithoutApp_user_notification_sender_idToapp_userInput, notificationUncheckedUpdateWithoutApp_user_notification_sender_idToapp_userInput>
  }

  export type notificationUpdateManyWithWhereWithoutApp_user_notification_sender_idToapp_userInput = {
    where: notificationScalarWhereInput
    data: XOR<notificationUpdateManyMutationInput, notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userInput>
  }

  export type locationCreateWithoutIncidentInput = {
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    reference?: string | null
  }

  export type locationUncheckedCreateWithoutIncidentInput = {
    id?: number
    latitude?: Decimal | DecimalJsLike | number | string | null
    longitude?: Decimal | DecimalJsLike | number | string | null
    altitude?: Decimal | DecimalJsLike | number | string | null
    reference?: string | null
  }

  export type locationCreateOrConnectWithoutIncidentInput = {
    where: locationWhereUniqueInput
    create: XOR<locationCreateWithoutIncidentInput, locationUncheckedCreateWithoutIncidentInput>
  }

  export type incident_statusCreateWithoutIncidentInput = {
    name: $Enums.incident_status_enum
  }

  export type incident_statusUncheckedCreateWithoutIncidentInput = {
    id?: number
    name: $Enums.incident_status_enum
  }

  export type incident_statusCreateOrConnectWithoutIncidentInput = {
    where: incident_statusWhereUniqueInput
    create: XOR<incident_statusCreateWithoutIncidentInput, incident_statusUncheckedCreateWithoutIncidentInput>
  }

  export type incident_typeCreateWithoutIncidentInput = {
    name: string
  }

  export type incident_typeUncheckedCreateWithoutIncidentInput = {
    id?: number
    name: string
  }

  export type incident_typeCreateOrConnectWithoutIncidentInput = {
    where: incident_typeWhereUniqueInput
    create: XOR<incident_typeCreateWithoutIncidentInput, incident_typeUncheckedCreateWithoutIncidentInput>
  }

  export type app_userCreateWithoutIncidentInput = {
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
    user_role?: user_roleCreateNestedOneWithoutApp_userInput
    incident_history?: incident_historyCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userUncheckedCreateWithoutIncidentInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    role_id?: number | null
    password?: string | null
    email_validated?: boolean | null
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userCreateOrConnectWithoutIncidentInput = {
    where: app_userWhereUniqueInput
    create: XOR<app_userCreateWithoutIncidentInput, app_userUncheckedCreateWithoutIncidentInput>
  }

  export type incident_historyCreateWithoutIncidentInput = {
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
    app_user?: app_userCreateNestedOneWithoutIncident_historyInput
  }

  export type incident_historyUncheckedCreateWithoutIncidentInput = {
    id?: number
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
    modified_by?: number | null
  }

  export type incident_historyCreateOrConnectWithoutIncidentInput = {
    where: incident_historyWhereUniqueInput
    create: XOR<incident_historyCreateWithoutIncidentInput, incident_historyUncheckedCreateWithoutIncidentInput>
  }

  export type incident_historyCreateManyIncidentInputEnvelope = {
    data: incident_historyCreateManyIncidentInput | incident_historyCreateManyIncidentInput[]
    skipDuplicates?: boolean
  }

  export type locationUpsertWithoutIncidentInput = {
    update: XOR<locationUpdateWithoutIncidentInput, locationUncheckedUpdateWithoutIncidentInput>
    create: XOR<locationCreateWithoutIncidentInput, locationUncheckedCreateWithoutIncidentInput>
    where?: locationWhereInput
  }

  export type locationUpdateToOneWithWhereWithoutIncidentInput = {
    where?: locationWhereInput
    data: XOR<locationUpdateWithoutIncidentInput, locationUncheckedUpdateWithoutIncidentInput>
  }

  export type locationUpdateWithoutIncidentInput = {
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type locationUncheckedUpdateWithoutIncidentInput = {
    id?: IntFieldUpdateOperationsInput | number
    latitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    longitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    altitude?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    reference?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type incident_statusUpsertWithoutIncidentInput = {
    update: XOR<incident_statusUpdateWithoutIncidentInput, incident_statusUncheckedUpdateWithoutIncidentInput>
    create: XOR<incident_statusCreateWithoutIncidentInput, incident_statusUncheckedCreateWithoutIncidentInput>
    where?: incident_statusWhereInput
  }

  export type incident_statusUpdateToOneWithWhereWithoutIncidentInput = {
    where?: incident_statusWhereInput
    data: XOR<incident_statusUpdateWithoutIncidentInput, incident_statusUncheckedUpdateWithoutIncidentInput>
  }

  export type incident_statusUpdateWithoutIncidentInput = {
    name?: Enumincident_status_enumFieldUpdateOperationsInput | $Enums.incident_status_enum
  }

  export type incident_statusUncheckedUpdateWithoutIncidentInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: Enumincident_status_enumFieldUpdateOperationsInput | $Enums.incident_status_enum
  }

  export type incident_typeUpsertWithoutIncidentInput = {
    update: XOR<incident_typeUpdateWithoutIncidentInput, incident_typeUncheckedUpdateWithoutIncidentInput>
    create: XOR<incident_typeCreateWithoutIncidentInput, incident_typeUncheckedCreateWithoutIncidentInput>
    where?: incident_typeWhereInput
  }

  export type incident_typeUpdateToOneWithWhereWithoutIncidentInput = {
    where?: incident_typeWhereInput
    data: XOR<incident_typeUpdateWithoutIncidentInput, incident_typeUncheckedUpdateWithoutIncidentInput>
  }

  export type incident_typeUpdateWithoutIncidentInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type incident_typeUncheckedUpdateWithoutIncidentInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type app_userUpsertWithoutIncidentInput = {
    update: XOR<app_userUpdateWithoutIncidentInput, app_userUncheckedUpdateWithoutIncidentInput>
    create: XOR<app_userCreateWithoutIncidentInput, app_userUncheckedCreateWithoutIncidentInput>
    where?: app_userWhereInput
  }

  export type app_userUpdateToOneWithWhereWithoutIncidentInput = {
    where?: app_userWhereInput
    data: XOR<app_userUpdateWithoutIncidentInput, app_userUncheckedUpdateWithoutIncidentInput>
  }

  export type app_userUpdateWithoutIncidentInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_role?: user_roleUpdateOneWithoutApp_userNestedInput
    incident_history?: incident_historyUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userUncheckedUpdateWithoutIncidentInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incident_history?: incident_historyUncheckedUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type incident_historyUpsertWithWhereUniqueWithoutIncidentInput = {
    where: incident_historyWhereUniqueInput
    update: XOR<incident_historyUpdateWithoutIncidentInput, incident_historyUncheckedUpdateWithoutIncidentInput>
    create: XOR<incident_historyCreateWithoutIncidentInput, incident_historyUncheckedCreateWithoutIncidentInput>
  }

  export type incident_historyUpdateWithWhereUniqueWithoutIncidentInput = {
    where: incident_historyWhereUniqueInput
    data: XOR<incident_historyUpdateWithoutIncidentInput, incident_historyUncheckedUpdateWithoutIncidentInput>
  }

  export type incident_historyUpdateManyWithWhereWithoutIncidentInput = {
    where: incident_historyScalarWhereInput
    data: XOR<incident_historyUpdateManyMutationInput, incident_historyUncheckedUpdateManyWithoutIncidentInput>
  }

  export type incidentCreateWithoutIncident_historyInput = {
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    location?: locationCreateNestedOneWithoutIncidentInput
    incident_status?: incident_statusCreateNestedOneWithoutIncidentInput
    incident_type?: incident_typeCreateNestedOneWithoutIncidentInput
    app_user?: app_userCreateNestedOneWithoutIncidentInput
  }

  export type incidentUncheckedCreateWithoutIncident_historyInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    user_id?: number | null
    type_id?: number | null
    location_id?: number | null
  }

  export type incidentCreateOrConnectWithoutIncident_historyInput = {
    where: incidentWhereUniqueInput
    create: XOR<incidentCreateWithoutIncident_historyInput, incidentUncheckedCreateWithoutIncident_historyInput>
  }

  export type app_userCreateWithoutIncident_historyInput = {
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
    user_role?: user_roleCreateNestedOneWithoutApp_userInput
    incident?: incidentCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userUncheckedCreateWithoutIncident_historyInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    role_id?: number | null
    password?: string | null
    email_validated?: boolean | null
    incident?: incidentUncheckedCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userCreateOrConnectWithoutIncident_historyInput = {
    where: app_userWhereUniqueInput
    create: XOR<app_userCreateWithoutIncident_historyInput, app_userUncheckedCreateWithoutIncident_historyInput>
  }

  export type incidentUpsertWithoutIncident_historyInput = {
    update: XOR<incidentUpdateWithoutIncident_historyInput, incidentUncheckedUpdateWithoutIncident_historyInput>
    create: XOR<incidentCreateWithoutIncident_historyInput, incidentUncheckedCreateWithoutIncident_historyInput>
    where?: incidentWhereInput
  }

  export type incidentUpdateToOneWithWhereWithoutIncident_historyInput = {
    where?: incidentWhereInput
    data: XOR<incidentUpdateWithoutIncident_historyInput, incidentUncheckedUpdateWithoutIncident_historyInput>
  }

  export type incidentUpdateWithoutIncident_historyInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: locationUpdateOneWithoutIncidentNestedInput
    incident_status?: incident_statusUpdateOneWithoutIncidentNestedInput
    incident_type?: incident_typeUpdateOneWithoutIncidentNestedInput
    app_user?: app_userUpdateOneWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateWithoutIncident_historyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type app_userUpsertWithoutIncident_historyInput = {
    update: XOR<app_userUpdateWithoutIncident_historyInput, app_userUncheckedUpdateWithoutIncident_historyInput>
    create: XOR<app_userCreateWithoutIncident_historyInput, app_userUncheckedCreateWithoutIncident_historyInput>
    where?: app_userWhereInput
  }

  export type app_userUpdateToOneWithWhereWithoutIncident_historyInput = {
    where?: app_userWhereInput
    data: XOR<app_userUpdateWithoutIncident_historyInput, app_userUncheckedUpdateWithoutIncident_historyInput>
  }

  export type app_userUpdateWithoutIncident_historyInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_role?: user_roleUpdateOneWithoutApp_userNestedInput
    incident?: incidentUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userUncheckedUpdateWithoutIncident_historyInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incident?: incidentUncheckedUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type incidentCreateWithoutIncident_statusInput = {
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    location?: locationCreateNestedOneWithoutIncidentInput
    incident_type?: incident_typeCreateNestedOneWithoutIncidentInput
    app_user?: app_userCreateNestedOneWithoutIncidentInput
    incident_history?: incident_historyCreateNestedManyWithoutIncidentInput
  }

  export type incidentUncheckedCreateWithoutIncident_statusInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    user_id?: number | null
    type_id?: number | null
    location_id?: number | null
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutIncidentInput
  }

  export type incidentCreateOrConnectWithoutIncident_statusInput = {
    where: incidentWhereUniqueInput
    create: XOR<incidentCreateWithoutIncident_statusInput, incidentUncheckedCreateWithoutIncident_statusInput>
  }

  export type incidentCreateManyIncident_statusInputEnvelope = {
    data: incidentCreateManyIncident_statusInput | incidentCreateManyIncident_statusInput[]
    skipDuplicates?: boolean
  }

  export type incidentUpsertWithWhereUniqueWithoutIncident_statusInput = {
    where: incidentWhereUniqueInput
    update: XOR<incidentUpdateWithoutIncident_statusInput, incidentUncheckedUpdateWithoutIncident_statusInput>
    create: XOR<incidentCreateWithoutIncident_statusInput, incidentUncheckedCreateWithoutIncident_statusInput>
  }

  export type incidentUpdateWithWhereUniqueWithoutIncident_statusInput = {
    where: incidentWhereUniqueInput
    data: XOR<incidentUpdateWithoutIncident_statusInput, incidentUncheckedUpdateWithoutIncident_statusInput>
  }

  export type incidentUpdateManyWithWhereWithoutIncident_statusInput = {
    where: incidentScalarWhereInput
    data: XOR<incidentUpdateManyMutationInput, incidentUncheckedUpdateManyWithoutIncident_statusInput>
  }

  export type incidentCreateWithoutIncident_typeInput = {
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    location?: locationCreateNestedOneWithoutIncidentInput
    incident_status?: incident_statusCreateNestedOneWithoutIncidentInput
    app_user?: app_userCreateNestedOneWithoutIncidentInput
    incident_history?: incident_historyCreateNestedManyWithoutIncidentInput
  }

  export type incidentUncheckedCreateWithoutIncident_typeInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    user_id?: number | null
    location_id?: number | null
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutIncidentInput
  }

  export type incidentCreateOrConnectWithoutIncident_typeInput = {
    where: incidentWhereUniqueInput
    create: XOR<incidentCreateWithoutIncident_typeInput, incidentUncheckedCreateWithoutIncident_typeInput>
  }

  export type incidentCreateManyIncident_typeInputEnvelope = {
    data: incidentCreateManyIncident_typeInput | incidentCreateManyIncident_typeInput[]
    skipDuplicates?: boolean
  }

  export type incidentUpsertWithWhereUniqueWithoutIncident_typeInput = {
    where: incidentWhereUniqueInput
    update: XOR<incidentUpdateWithoutIncident_typeInput, incidentUncheckedUpdateWithoutIncident_typeInput>
    create: XOR<incidentCreateWithoutIncident_typeInput, incidentUncheckedCreateWithoutIncident_typeInput>
  }

  export type incidentUpdateWithWhereUniqueWithoutIncident_typeInput = {
    where: incidentWhereUniqueInput
    data: XOR<incidentUpdateWithoutIncident_typeInput, incidentUncheckedUpdateWithoutIncident_typeInput>
  }

  export type incidentUpdateManyWithWhereWithoutIncident_typeInput = {
    where: incidentScalarWhereInput
    data: XOR<incidentUpdateManyMutationInput, incidentUncheckedUpdateManyWithoutIncident_typeInput>
  }

  export type incidentCreateWithoutLocationInput = {
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    incident_status?: incident_statusCreateNestedOneWithoutIncidentInput
    incident_type?: incident_typeCreateNestedOneWithoutIncidentInput
    app_user?: app_userCreateNestedOneWithoutIncidentInput
    incident_history?: incident_historyCreateNestedManyWithoutIncidentInput
  }

  export type incidentUncheckedCreateWithoutLocationInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    user_id?: number | null
    type_id?: number | null
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutIncidentInput
  }

  export type incidentCreateOrConnectWithoutLocationInput = {
    where: incidentWhereUniqueInput
    create: XOR<incidentCreateWithoutLocationInput, incidentUncheckedCreateWithoutLocationInput>
  }

  export type incidentCreateManyLocationInputEnvelope = {
    data: incidentCreateManyLocationInput | incidentCreateManyLocationInput[]
    skipDuplicates?: boolean
  }

  export type incidentUpsertWithWhereUniqueWithoutLocationInput = {
    where: incidentWhereUniqueInput
    update: XOR<incidentUpdateWithoutLocationInput, incidentUncheckedUpdateWithoutLocationInput>
    create: XOR<incidentCreateWithoutLocationInput, incidentUncheckedCreateWithoutLocationInput>
  }

  export type incidentUpdateWithWhereUniqueWithoutLocationInput = {
    where: incidentWhereUniqueInput
    data: XOR<incidentUpdateWithoutLocationInput, incidentUncheckedUpdateWithoutLocationInput>
  }

  export type incidentUpdateManyWithWhereWithoutLocationInput = {
    where: incidentScalarWhereInput
    data: XOR<incidentUpdateManyMutationInput, incidentUncheckedUpdateManyWithoutLocationInput>
  }

  export type app_userCreateWithoutNotification_notification_receiver_idToapp_userInput = {
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
    user_role?: user_roleCreateNestedOneWithoutApp_userInput
    incident?: incidentCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyCreateNestedManyWithoutApp_userInput
    notification_notification_sender_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userUncheckedCreateWithoutNotification_notification_receiver_idToapp_userInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    role_id?: number | null
    password?: string | null
    email_validated?: boolean | null
    incident?: incidentUncheckedCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutApp_userInput
    notification_notification_sender_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userCreateOrConnectWithoutNotification_notification_receiver_idToapp_userInput = {
    where: app_userWhereUniqueInput
    create: XOR<app_userCreateWithoutNotification_notification_receiver_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_receiver_idToapp_userInput>
  }

  export type app_userCreateWithoutNotification_notification_sender_idToapp_userInput = {
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
    user_role?: user_roleCreateNestedOneWithoutApp_userInput
    incident?: incidentCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
  }

  export type app_userUncheckedCreateWithoutNotification_notification_sender_idToapp_userInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    role_id?: number | null
    password?: string | null
    email_validated?: boolean | null
    incident?: incidentUncheckedCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
  }

  export type app_userCreateOrConnectWithoutNotification_notification_sender_idToapp_userInput = {
    where: app_userWhereUniqueInput
    create: XOR<app_userCreateWithoutNotification_notification_sender_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_sender_idToapp_userInput>
  }

  export type app_userUpsertWithoutNotification_notification_receiver_idToapp_userInput = {
    update: XOR<app_userUpdateWithoutNotification_notification_receiver_idToapp_userInput, app_userUncheckedUpdateWithoutNotification_notification_receiver_idToapp_userInput>
    create: XOR<app_userCreateWithoutNotification_notification_receiver_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_receiver_idToapp_userInput>
    where?: app_userWhereInput
  }

  export type app_userUpdateToOneWithWhereWithoutNotification_notification_receiver_idToapp_userInput = {
    where?: app_userWhereInput
    data: XOR<app_userUpdateWithoutNotification_notification_receiver_idToapp_userInput, app_userUncheckedUpdateWithoutNotification_notification_receiver_idToapp_userInput>
  }

  export type app_userUpdateWithoutNotification_notification_receiver_idToapp_userInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_role?: user_roleUpdateOneWithoutApp_userNestedInput
    incident?: incidentUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUpdateManyWithoutApp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userUncheckedUpdateWithoutNotification_notification_receiver_idToapp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incident?: incidentUncheckedUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUncheckedUpdateManyWithoutApp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userUpsertWithoutNotification_notification_sender_idToapp_userInput = {
    update: XOR<app_userUpdateWithoutNotification_notification_sender_idToapp_userInput, app_userUncheckedUpdateWithoutNotification_notification_sender_idToapp_userInput>
    create: XOR<app_userCreateWithoutNotification_notification_sender_idToapp_userInput, app_userUncheckedCreateWithoutNotification_notification_sender_idToapp_userInput>
    where?: app_userWhereInput
  }

  export type app_userUpdateToOneWithWhereWithoutNotification_notification_sender_idToapp_userInput = {
    where?: app_userWhereInput
    data: XOR<app_userUpdateWithoutNotification_notification_sender_idToapp_userInput, app_userUncheckedUpdateWithoutNotification_notification_sender_idToapp_userInput>
  }

  export type app_userUpdateWithoutNotification_notification_sender_idToapp_userInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_role?: user_roleUpdateOneWithoutApp_userNestedInput
    incident?: incidentUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
  }

  export type app_userUncheckedUpdateWithoutNotification_notification_sender_idToapp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    role_id?: NullableIntFieldUpdateOperationsInput | number | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incident?: incidentUncheckedUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUncheckedUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
  }

  export type app_userCreateWithoutUser_roleInput = {
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
    incident?: incidentCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userUncheckedCreateWithoutUser_roleInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
    incident?: incidentUncheckedCreateNestedManyWithoutApp_userInput
    incident_history?: incident_historyUncheckedCreateNestedManyWithoutApp_userInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_receiver_idToapp_userInput
    notification_notification_sender_idToapp_user?: notificationUncheckedCreateNestedManyWithoutApp_user_notification_sender_idToapp_userInput
  }

  export type app_userCreateOrConnectWithoutUser_roleInput = {
    where: app_userWhereUniqueInput
    create: XOR<app_userCreateWithoutUser_roleInput, app_userUncheckedCreateWithoutUser_roleInput>
  }

  export type app_userCreateManyUser_roleInputEnvelope = {
    data: app_userCreateManyUser_roleInput | app_userCreateManyUser_roleInput[]
    skipDuplicates?: boolean
  }

  export type app_userUpsertWithWhereUniqueWithoutUser_roleInput = {
    where: app_userWhereUniqueInput
    update: XOR<app_userUpdateWithoutUser_roleInput, app_userUncheckedUpdateWithoutUser_roleInput>
    create: XOR<app_userCreateWithoutUser_roleInput, app_userUncheckedCreateWithoutUser_roleInput>
  }

  export type app_userUpdateWithWhereUniqueWithoutUser_roleInput = {
    where: app_userWhereUniqueInput
    data: XOR<app_userUpdateWithoutUser_roleInput, app_userUncheckedUpdateWithoutUser_roleInput>
  }

  export type app_userUpdateManyWithWhereWithoutUser_roleInput = {
    where: app_userScalarWhereInput
    data: XOR<app_userUpdateManyMutationInput, app_userUncheckedUpdateManyWithoutUser_roleInput>
  }

  export type app_userScalarWhereInput = {
    AND?: app_userScalarWhereInput | app_userScalarWhereInput[]
    OR?: app_userScalarWhereInput[]
    NOT?: app_userScalarWhereInput | app_userScalarWhereInput[]
    id?: IntFilter<"app_user"> | number
    first_name?: StringNullableFilter<"app_user"> | string | null
    last_name?: StringNullableFilter<"app_user"> | string | null
    email?: StringFilter<"app_user"> | string
    google_id?: StringNullableFilter<"app_user"> | string | null
    profile_picture?: StringNullableFilter<"app_user"> | string | null
    is_active?: BoolNullableFilter<"app_user"> | boolean | null
    role_id?: IntNullableFilter<"app_user"> | number | null
    password?: StringNullableFilter<"app_user"> | string | null
    email_validated?: BoolNullableFilter<"app_user"> | boolean | null
  }

  export type incidentCreateManyApp_userInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    type_id?: number | null
    location_id?: number | null
  }

  export type incident_historyCreateManyApp_userInput = {
    id?: number
    incident_id?: number | null
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
  }

  export type notificationCreateManyApp_user_notification_receiver_idToapp_userInput = {
    id?: number
    sender_id?: number | null
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type notificationCreateManyApp_user_notification_sender_idToapp_userInput = {
    id?: number
    receiver_id?: number | null
    message: string
    is_read?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type incidentUpdateWithoutApp_userInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: locationUpdateOneWithoutIncidentNestedInput
    incident_status?: incident_statusUpdateOneWithoutIncidentNestedInput
    incident_type?: incident_typeUpdateOneWithoutIncidentNestedInput
    incident_history?: incident_historyUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateWithoutApp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_history?: incident_historyUncheckedUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateManyWithoutApp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incident_historyUpdateWithoutApp_userInput = {
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    incident?: incidentUpdateOneWithoutIncident_historyNestedInput
  }

  export type incident_historyUncheckedUpdateWithoutApp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    incident_id?: NullableIntFieldUpdateOperationsInput | number | null
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type incident_historyUncheckedUpdateManyWithoutApp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    incident_id?: NullableIntFieldUpdateOperationsInput | number | null
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type notificationUpdateWithoutApp_user_notification_receiver_idToapp_userInput = {
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    app_user_notification_sender_idToapp_user?: app_userUpdateOneWithoutNotification_notification_sender_idToapp_userNestedInput
  }

  export type notificationUncheckedUpdateWithoutApp_user_notification_receiver_idToapp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUpdateWithoutApp_user_notification_sender_idToapp_userInput = {
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    app_user_notification_receiver_idToapp_user?: app_userUpdateOneWithoutNotification_notification_receiver_idToapp_userNestedInput
  }

  export type notificationUncheckedUpdateWithoutApp_user_notification_sender_idToapp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userInput = {
    id?: IntFieldUpdateOperationsInput | number
    receiver_id?: NullableIntFieldUpdateOperationsInput | number | null
    message?: StringFieldUpdateOperationsInput | string
    is_read?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type incident_historyCreateManyIncidentInput = {
    id?: number
    previous_status?: string | null
    new_status?: string | null
    change_date?: Date | string | null
    comment?: string | null
    modified_by?: number | null
  }

  export type incident_historyUpdateWithoutIncidentInput = {
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    app_user?: app_userUpdateOneWithoutIncident_historyNestedInput
  }

  export type incident_historyUncheckedUpdateWithoutIncidentInput = {
    id?: IntFieldUpdateOperationsInput | number
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    modified_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incident_historyUncheckedUpdateManyWithoutIncidentInput = {
    id?: IntFieldUpdateOperationsInput | number
    previous_status?: NullableStringFieldUpdateOperationsInput | string | null
    new_status?: NullableStringFieldUpdateOperationsInput | string | null
    change_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    comment?: NullableStringFieldUpdateOperationsInput | string | null
    modified_by?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incidentCreateManyIncident_statusInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    user_id?: number | null
    type_id?: number | null
    location_id?: number | null
  }

  export type incidentUpdateWithoutIncident_statusInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: locationUpdateOneWithoutIncidentNestedInput
    incident_type?: incident_typeUpdateOneWithoutIncidentNestedInput
    app_user?: app_userUpdateOneWithoutIncidentNestedInput
    incident_history?: incident_historyUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateWithoutIncident_statusInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_history?: incident_historyUncheckedUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateManyWithoutIncident_statusInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incidentCreateManyIncident_typeInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    user_id?: number | null
    location_id?: number | null
  }

  export type incidentUpdateWithoutIncident_typeInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    location?: locationUpdateOneWithoutIncidentNestedInput
    incident_status?: incident_statusUpdateOneWithoutIncidentNestedInput
    app_user?: app_userUpdateOneWithoutIncidentNestedInput
    incident_history?: incident_historyUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateWithoutIncident_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_history?: incident_historyUncheckedUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateManyWithoutIncident_typeInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    location_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type incidentCreateManyLocationInput = {
    id?: number
    title?: string | null
    description?: string | null
    image_url?: string | null
    priority?: $Enums.priority_enum | null
    report_date?: Date | string | null
    close_date?: Date | string | null
    status_id?: number | null
    user_id?: number | null
    type_id?: number | null
  }

  export type incidentUpdateWithoutLocationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    incident_status?: incident_statusUpdateOneWithoutIncidentNestedInput
    incident_type?: incident_typeUpdateOneWithoutIncidentNestedInput
    app_user?: app_userUpdateOneWithoutIncidentNestedInput
    incident_history?: incident_historyUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateWithoutLocationInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
    incident_history?: incident_historyUncheckedUpdateManyWithoutIncidentNestedInput
  }

  export type incidentUncheckedUpdateManyWithoutLocationInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableEnumpriority_enumFieldUpdateOperationsInput | $Enums.priority_enum | null
    report_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    close_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    type_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type app_userCreateManyUser_roleInput = {
    id?: number
    first_name?: string | null
    last_name?: string | null
    email: string
    google_id?: string | null
    profile_picture?: string | null
    is_active?: boolean | null
    password?: string | null
    email_validated?: boolean | null
  }

  export type app_userUpdateWithoutUser_roleInput = {
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incident?: incidentUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userUncheckedUpdateWithoutUser_roleInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
    incident?: incidentUncheckedUpdateManyWithoutApp_userNestedInput
    incident_history?: incident_historyUncheckedUpdateManyWithoutApp_userNestedInput
    notification_notification_receiver_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_receiver_idToapp_userNestedInput
    notification_notification_sender_idToapp_user?: notificationUncheckedUpdateManyWithoutApp_user_notification_sender_idToapp_userNestedInput
  }

  export type app_userUncheckedUpdateManyWithoutUser_roleInput = {
    id?: IntFieldUpdateOperationsInput | number
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    google_id?: NullableStringFieldUpdateOperationsInput | string | null
    profile_picture?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    email_validated?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}